exports[`Component > Modification > ModificationEditor renders correctly 1`] = `
<ModificationEditor
  allVariants={Array []}
  bundleId="1"
  feeds={
    Array [
      Object {
        "routes": Array [
          Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        ],
        "routesById": Object {
          "route1": Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        },
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      },
    ]
  }
  feedsById={
    Object {
      "1": Object {
        "routes": Array [
          Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        ],
        "routesById": Object {
          "route1": Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        },
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      },
    }
  }
  mapState={
    Object {
      "allowExtend": true,
      "extendFromEnd": true,
      "followRoad": true,
      "modificationId": "1234",
      "state": "add-trip-pattern",
    }
  }
  modification={
    Object {
      "bidirectional": false,
      "entries": Array [],
      "feed": "1",
      "id": "1234",
      "name": "Test Modification",
      "routes": Array [
        "route1",
      ],
      "segments": Array [],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "dwellTime": 10,
          "endTime": 57600,
          "friday": true,
          "headwaySecs": 900,
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "saturday": false,
          "sourceTrip": "abcd",
          "speed": 40,
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
    }
  }
  name="Test Modification"
  remove={[Function]}
  replace={[Function]}
  setActiveTrips={[Function]}
  setMapState={[Function]}
  type="add-trip-pattern"
  variants={Array []}>
  <div
    className="ModificationDock">
    <div
      className="ModificationDockTitle">
      Test Modification
    </div>
    <div
      className="InnerDock">
      <Body>
        <div
          className="panel-body">
          <Text
            name="Name"
            onChange={[Function]}
            value="Test Modification">
            <Group
              name="Name"
              onChange={[Function]}
              value="Test Modification">
              <div
                className="form-group">
                <Input
                  name="Name"
                  onChange={[Function]}
                  type="text"
                  value="Test Modification">
                  <input
                    className="form-control"
                    name="Name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                    value="Test Modification" />
                </Input>
              </div>
            </Group>
          </Text>
          <AddTripPattern
            feeds={
              Array [
                Object {
                  "routes": Array [
                    Object {
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "routesById": Object {
                    "route1": Object {
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  },
                  "stopsById": Object {
                    "1": Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    "2": Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  },
                },
              ]
            }
            feedsById={
              Object {
                "1": Object {
                  "routes": Array [
                    Object {
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "routesById": Object {
                    "route1": Object {
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  },
                  "stopsById": Object {
                    "1": Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    "2": Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  },
                },
              }
            }
            mapState={
              Object {
                "allowExtend": true,
                "extendFromEnd": true,
                "followRoad": true,
                "modificationId": "1234",
                "state": "add-trip-pattern",
              }
            }
            modification={
              Object {
                "bidirectional": false,
                "entries": Array [],
                "feed": "1",
                "id": "1234",
                "name": "Test Modification",
                "routes": Array [
                  "route1",
                ],
                "segments": Array [],
                "showOnMap": false,
                "timetables": Array [
                  Object {
                    "dwellTime": 10,
                    "endTime": 57600,
                    "friday": true,
                    "headwaySecs": 900,
                    "monday": true,
                    "name": "Test timetable",
                    "patternTrips": Array [
                      "abcd",
                    ],
                    "saturday": false,
                    "sourceTrip": "abcd",
                    "speed": 40,
                    "startTime": 28800,
                    "sunday": false,
                    "thursday": true,
                    "tuesday": true,
                    "wednesday": true,
                  },
                ],
                "trips": Array [
                  "abcd",
                ],
              }
            }
            replaceModification={[Function]}
            setActiveTrips={[Function]}
            setMapState={[Function]}
            update={[Function]}>
            <div>
              <Button
                block={true}
                onClick={[Function]}
                style="warning">
                <a
                  className="btn btn-warning btn-block"
                  href="#"
                  onClick={[Function]}>
                  <Icon
                    type="times-circle">
                    <i
                      className="fa fa-times-circle fa-fw " />
                  </Icon>
                </a>
              </Button>
              <Checkbox
                defaultChecked={true}
                label="Extend from end"
                onChange={[Function]}>
                <div
                  className="checkbox">
                  <label>
                    <input
                      defaultChecked={true}
                      onChange={[Function]}
                      type="checkbox" />
                  </label>
                </div>
              </Checkbox>
              <Checkbox
                defaultChecked={true}
                label="Follow streets"
                onChange={[Function]}>
                <div
                  className="checkbox">
                  <label>
                    <input
                      defaultChecked={true}
                      onChange={[Function]}
                      type="checkbox" />
                  </label>
                </div>
              </Checkbox>
              <Checkbox
                defaultChecked={true}
                label="Create stops automatically"
                onChange={[Function]}>
                <div
                  className="checkbox">
                  <label>
                    <input
                      defaultChecked={true}
                      onChange={[Function]}
                      type="checkbox" />
                  </label>
                </div>
              </Checkbox>
              <Number
                label="Stop spacing (meters)"
                onChange={[Function]}
                value={400}>
                <Group
                  label="Stop spacing (meters)"
                  onChange={[Function]}
                  value={400}>
                  <div
                    className="form-group">
                    <label>
                      Stop spacing (meters)
                    </label>
                    <Input
                      label="Stop spacing (meters)"
                      onChange={[Function]}
                      type="number"
                      value={400}>
                      <input
                        className="form-control"
                        onChange={[Function]}
                        placeholder="Stop spacing (meters)"
                        type="number"
                        value={400} />
                    </Input>
                  </div>
                </Group>
              </Number>
              <Checkbox
                checked={false}
                label="Bidirectional"
                onChange={[Function]}>
                <div
                  className="checkbox">
                  <label>
                    <input
                      checked={false}
                      onChange={[Function]}
                      type="checkbox" />
                  </label>
                </div>
              </Checkbox>
              <Timetable
                index={1}
                modification={
                  Object {
                    "bidirectional": false,
                    "entries": Array [],
                    "feed": "1",
                    "id": "1234",
                    "name": "Test Modification",
                    "routes": Array [
                      "route1",
                    ],
                    "segments": Array [],
                    "showOnMap": false,
                    "timetables": Array [
                      Object {
                        "dwellTime": 10,
                        "endTime": 57600,
                        "friday": true,
                        "headwaySecs": 900,
                        "monday": true,
                        "name": "Test timetable",
                        "patternTrips": Array [
                          "abcd",
                        ],
                        "saturday": false,
                        "sourceTrip": "abcd",
                        "speed": 40,
                        "startTime": 28800,
                        "sunday": false,
                        "thursday": true,
                        "tuesday": true,
                        "wednesday": true,
                      },
                    ],
                    "trips": Array [
                      "abcd",
                    ],
                  }
                }
                removeTimetable={[Function]}
                replaceTimetable={[Function]}
                timetable={
                  Object {
                    "dwellTime": 10,
                    "endTime": 57600,
                    "friday": true,
                    "headwaySecs": 900,
                    "monday": true,
                    "name": "Test timetable",
                    "patternTrips": Array [
                      "abcd",
                    ],
                    "saturday": false,
                    "sourceTrip": "abcd",
                    "speed": 40,
                    "startTime": 28800,
                    "sunday": false,
                    "thursday": true,
                    "tuesday": true,
                    "wednesday": true,
                  }
                }>
                <section
                  className="panel panel-default inner-panel">
                  <div
                    className="panel-heading clearfix">
                    <strong>
                      Test timetable
                    </strong>
                    <Button
                      className="pull-right"
                      onClick={[Function]}
                      size="sm"
                      style="danger"
                      title="Delete timetable">
                      <a
                        className="btn btn-danger btn-sm pull-right"
                        href="#"
                        onClick={[Function]}
                        title="Delete timetable">
                        <Icon
                          type="close">
                          <i
                            className="fa fa-close fa-fw " />
                        </Icon>
                      </a>
                    </Button>
                  </div>
                  <div
                    className="panel-body">
                    <Text
                      name="Name"
                      onChange={[Function]}
                      value="Test timetable">
                      <Group
                        name="Name"
                        onChange={[Function]}
                        value="Test timetable">
                        <div
                          className="form-group">
                          <Input
                            name="Name"
                            onChange={[Function]}
                            type="text"
                            value="Test timetable">
                            <input
                              className="form-control"
                              name="Name"
                              onChange={[Function]}
                              placeholder="Name"
                              type="text"
                              value="Test timetable" />
                          </Input>
                        </div>
                      </Group>
                    </Text>
                    <TimetableEntry
                      replaceTimetable={[Function]}
                      timetable={
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "sourceTrip": "abcd",
                          "speed": 40,
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        }
                      }>
                      <div>
                        <Days
                          setDay={[Function]}
                          timetable={
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "sourceTrip": "abcd",
                              "speed": 40,
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            }
                          }>
                          <div
                            className="form-inline">
                            <Checkbox
                              checked={true}
                              label="Mon"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                            <Checkbox
                              checked={true}
                              label="Tue"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                            <Checkbox
                              checked={true}
                              label="Wed"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                            <Checkbox
                              checked={true}
                              label="Thu"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                            <Checkbox
                              checked={true}
                              label="Fri"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                            <Checkbox
                              checked={false}
                              label="Sat"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={false}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                            <Checkbox
                              checked={false}
                              label="Sun"
                              onChange={[Function]}>
                              <div
                                className="checkbox">
                                <label>
                                  <input
                                    checked={false}
                                    onChange={[Function]}
                                    type="checkbox" />
                                </label>
                              </div>
                            </Checkbox>
                          </div>
                        </Days>
                        <Number
                          label="Frequency (minutes)"
                          onChange={[Function]}
                          value={15}>
                          <Group
                            label="Frequency (minutes)"
                            onChange={[Function]}
                            value={15}>
                            <div
                              className="form-group">
                              <label>
                                Frequency (minutes)
                              </label>
                              <Input
                                label="Frequency (minutes)"
                                onChange={[Function]}
                                type="number"
                                value={15}>
                                <input
                                  className="form-control"
                                  onChange={[Function]}
                                  placeholder="Frequency (minutes)"
                                  type="number"
                                  value={15} />
                              </Input>
                            </div>
                          </Group>
                        </Number>
                        <Text
                          label="Start time"
                          onChange={[Function]}
                          type="time"
                          value="08:00">
                          <Group
                            label="Start time"
                            onChange={[Function]}
                            type="time"
                            value="08:00">
                            <div
                              className="form-group">
                              <label>
                                Start time
                              </label>
                              <Input
                                label="Start time"
                                onChange={[Function]}
                                type="time"
                                value="08:00">
                                <input
                                  className="form-control"
                                  onChange={[Function]}
                                  placeholder="Start time"
                                  type="time"
                                  value="08:00" />
                              </Input>
                            </div>
                          </Group>
                        </Text>
                        <Text
                          label="End time"
                          onChange={[Function]}
                          type="time"
                          value="16:00">
                          <Group
                            label="End time"
                            onChange={[Function]}
                            type="time"
                            value="16:00">
                            <div
                              className="form-group">
                              <label>
                                End time
                              </label>
                              <Input
                                label="End time"
                                onChange={[Function]}
                                type="time"
                                value="16:00">
                                <input
                                  className="form-control"
                                  onChange={[Function]}
                                  placeholder="End time"
                                  type="time"
                                  value="16:00" />
                              </Input>
                            </div>
                          </Group>
                        </Text>
                      </div>
                    </TimetableEntry>
                    <Number
                      label="Speed (km/h)"
                      onChange={[Function]}
                      value={40}>
                      <Group
                        label="Speed (km/h)"
                        onChange={[Function]}
                        value={40}>
                        <div
                          className="form-group">
                          <label>
                            Speed (km/h)
                          </label>
                          <Input
                            label="Speed (km/h)"
                            onChange={[Function]}
                            type="number"
                            value={40}>
                            <input
                              className="form-control"
                              onChange={[Function]}
                              placeholder="Speed (km/h)"
                              type="number"
                              value={40} />
                          </Input>
                        </div>
                      </Group>
                    </Number>
                    <Number
                      label="Dwell time (seconds)"
                      onChange={[Function]}
                      value={10}>
                      <Group
                        label="Dwell time (seconds)"
                        onChange={[Function]}
                        value={10}>
                        <div
                          className="form-group">
                          <label>
                            Dwell time (seconds)
                          </label>
                          <Input
                            label="Dwell time (seconds)"
                            onChange={[Function]}
                            type="number"
                            value={10}>
                            <input
                              className="form-control"
                              onChange={[Function]}
                              placeholder="Dwell time (seconds)"
                              type="number"
                              value={10} />
                          </Input>
                        </div>
                      </Group>
                    </Number>
                  </div>
                </section>
              </Timetable>
              <Button
                block={true}
                onClick={[Function]}
                style="success">
                <a
                  className="btn btn-success btn-block"
                  href="#"
                  onClick={[Function]}>
                  <Icon
                    type="plus">
                    <i
                      className="fa fa-plus fa-fw " />
                  </Icon>
                </a>
              </Button>
            </div>
          </AddTripPattern>
          <br />
          <legend>
            Active in variants
          </legend>
          <div
            className="form-inline">
            <Button
              block={true}
              className="pull-right"
              onClick={[Function]}
              style="danger"
              title="Delete Modification">
              <a
                className="btn btn-danger btn-block pull-right"
                href="#"
                onClick={[Function]}
                title="Delete Modification">
                <Icon
                  type="close">
                  <i
                    className="fa fa-close fa-fw " />
                </Icon>
              </a>
            </Button>
          </div>
        </div>
      </Body>
    </div>
  </div>
</ModificationEditor>
`;
