// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component SelectStops snapshot(mount) 1`] = `
<SelectStops
  modification={
    Object {
      "_id": "1234",
      "accessGroup": "accessGroupName",
      "bidirectional": false,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "description": "Mock description",
      "entries": Array [],
      "feed": "1",
      "name": "Test Modification",
      "nonce": "12345",
      "projectId": "1",
      "routes": Array [
        "route1",
      ],
      "segments": Array [
        Object {
          "fromStopId": "1",
          "geometry": Object {
            "coordinates": Array [
              Array [
                -122.0246,
                36.9707,
              ],
              Array [
                -122.0279,
                37.049,
              ],
              Array [
                -121.9799,
                37.2299,
              ],
              Array [
                -121.9445,
                37.324,
              ],
              Array [
                -121.936,
                37.353,
              ],
              Array [
                -121.924,
                37.365,
              ],
            ],
            "type": "LineString",
          },
          "spacing": 3000,
          "stopAtEnd": false,
          "stopAtStart": false,
          "toStopId": null,
        },
      ],
      "timetables": Array [
        Object {
          "_id": "timetable-id",
          "dwellTime": 10,
          "dwellTimes": Array [
            12,
          ],
          "endTime": 57600,
          "exactTimes": false,
          "friday": true,
          "headwaySecs": 900,
          "modificationId": "1234",
          "modificationName": "Test Modification",
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "phaseAtStop": "",
          "phaseFromStop": "",
          "phaseFromTimetable": "",
          "phaseSeconds": 300,
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variants": Array [
        true,
      ],
    }
  }
>
  <Stack
    spacing={4}
  >
    <Styled(div)
      __css={
        Object {
          "& > *:not(style) ~ *:not(style)": Object {
            "marginBottom": 0,
            "marginEnd": 0,
            "marginStart": 0,
            "marginTop": 4,
          },
        }
      }
      className="chakra-stack"
      display="flex"
      flexDirection="column"
    >
      <div
        className="chakra-stack css-egoftb"
      >
        <Stack
          key=".0"
          spacing={4}
        >
          <Styled(div)
            __css={
              Object {
                "& > *:not(style) ~ *:not(style)": Object {
                  "marginBottom": 0,
                  "marginEnd": 0,
                  "marginStart": 0,
                  "marginTop": 4,
                },
              }
            }
            className="chakra-stack"
            display="flex"
            flexDirection="column"
          >
            <div
              className="chakra-stack css-egoftb"
            >
              <ForwardRef
                key=".0"
                status="info"
              >
                <Styled(div)
                  __css={
                    Object {
                      "alignItems": "center",
                      "bg": "#bee3f8",
                      "display": "flex",
                      "overflow": "hidden",
                      "position": "relative",
                      "px": 4,
                      "py": 3,
                      "width": "100%",
                    }
                  }
                  className="chakra-alert"
                  role="alert"
                >
                  <div
                    className="chakra-alert css-1adt752"
                    role="alert"
                  >
                    <AlertIcon>
                      <Styled(span)
                        __css={
                          Object {
                            "color": "blue.500",
                            "flexShrink": 0,
                            "h": 6,
                            "marginEnd": 3,
                            "w": 5,
                          }
                        }
                        className="chakra-alert__icon"
                        display="inherit"
                      >
                        <span
                          className="chakra-alert__icon css-n0gcl4"
                        >
                          <InfoIcon
                            h="100%"
                            w="100%"
                          >
                            <Icon
                              h="100%"
                              viewBox="0 0 24 24"
                              w="100%"
                            >
                              <Styled(svg)
                                __css={
                                  Object {
                                    "color": "currentColor",
                                    "display": "inline-block",
                                    "flexShrink": 0,
                                    "h": "1em",
                                    "lineHeight": "1em",
                                    "w": "1em",
                                  }
                                }
                                className="chakra-icon"
                                focusable={false}
                                h="100%"
                                verticalAlign="middle"
                                viewBox="0 0 24 24"
                                w="100%"
                              >
                                <svg
                                  className="chakra-icon css-fi0ww0"
                                  focusable={false}
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </InfoIcon>
                        </span>
                      </Styled(span)>
                    </AlertIcon>
                     
                    Click 'New', then draw a polygon around the stops you wish to select.
                  </div>
                </Styled(div)>
              </ForwardRef>
              <Button
                colorScheme="blue"
                isFullWidth={true}
                key=".1"
                leftIcon={<FaPencilAlt />}
                onClick={[Function]}
              >
                <Styled(button)
                  __css={
                    Object {
                      "_active": Object {
                        "bg": "blue.700",
                      },
                      "_disabled": Object {
                        "boxShadow": "none",
                        "cursor": "not-allowed",
                        "opacity": 0.4,
                      },
                      "_focus": Object {
                        "boxShadow": "outline",
                      },
                      "_hover": Object {
                        "_disabled": Object {
                          "bg": "blue.500",
                        },
                        "bg": "blue.600",
                      },
                      "alignItems": "center",
                      "appearance": "none",
                      "bg": "blue.500",
                      "borderRadius": "md",
                      "color": "white",
                      "display": "inline-flex",
                      "fontSize": "md",
                      "fontWeight": "semibold",
                      "h": 10,
                      "justifyContent": "center",
                      "lineHeight": "1.2",
                      "minW": 10,
                      "outline": "none",
                      "position": "relative",
                      "px": 4,
                      "transition": "all 250ms",
                      "userSelect": "none",
                      "verticalAlign": "middle",
                      "whiteSpace": "nowrap",
                      "width": "100%",
                    }
                  }
                  className="chakra-button"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="chakra-button css-1k7w19f"
                    onClick={[Function]}
                    type="button"
                  >
                    <ButtonIcon
                      marginEnd="0.5rem"
                    >
                      <Styled(span)
                        alignSelf="center"
                        className="chakra-button__icon"
                        display="inline-flex"
                        flexShrink={0}
                        marginEnd="0.5rem"
                      >
                        <span
                          className="chakra-button__icon css-1wh2kri"
                        >
                          <FaPencilAlt
                            aria-hidden={true}
                            focusable={false}
                          >
                            <IconBase
                              aria-hidden={true}
                              attr={
                                Object {
                                  "viewBox": "0 0 512 512",
                                }
                              }
                              focusable={false}
                            >
                              <svg
                                aria-hidden={true}
                                fill="currentColor"
                                focusable={false}
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </FaPencilAlt>
                        </span>
                      </Styled(span)>
                    </ButtonIcon>
                    New
                  </button>
                </Styled(button)>
              </Button>
            </div>
          </Styled(div)>
        </Stack>
      </div>
    </Styled(div)>
  </Stack>
</SelectStops>
`;
