name: 'Install, lint, unit test, build, run Cypress tests'

on: [pull_request]

jobs:
  cypressIntegration:
    # needs: [codeLinter, jestUnitTests, nextjsBuild, typeCheck] # only run if these all pass
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    env:
      R5_VERSION: v6.4

    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      # Install / cache dependencies with Cypress to handle caching Cypress binary.
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      # Restore entire .next folder from previous job
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ runner.os }}-${{ github.sha }}-nextjs

      # Restore maven dependencies (including those used by dependency:get) from previous runs
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.m2/repository
          key: ${{ runner.os }}-${{ github.sha }}-mavenrepo

      # Fetch R5 .jar file from Github Packages
      # The setup-java action also creates a Maven settings.xml configured for Github packages.
      # The GITHUB_TOKEN is scoped to only this repo, so does not allow access to R5 Github Packages.
      # We replace the GITHUB_TOKEN environment variables with a custom generated token with wider scope.
      - uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: r5-ghpr
          server-username: GHPR_USER # name of env variable for server user
          server-password: GHPR_TOKEN # name of env variable for server password

      - run: |
          mvn dependency:get -Dartifact=com.conveyal:r5:$R5_VERSION:jar:all -Dtransitive=false -DremoteRepositories=r5-ghpr::::https://maven.pkg.github.com/conveyal/r5
          mvn dependency:copy -Dartifact=com.conveyal:r5:$R5_VERSION:jar:all -DoutputDirectory=${{ github.workspace }}
        env:
          GHPR_USER: ${{ secrets.GHPR_USER }}
          GHPR_TOKEN: ${{ secrets.GHPR_TOKEN }}

      - name: Cache Cypress
        id: cache-cypress
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-v2-${{ runner.os }}-${{ hashFiles('**/package.json') }}

      # Install Cypress binary
      - run: npx cypress install

      - uses: cypress-io/github-action@v2
        with:
          install: false
          start: yarn start, yarn start-backend # runs frontend and java server together
          wait-on: 'http://localhost:3000, http://localhost:7070/version'
          wait-on-timeout: 60

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
