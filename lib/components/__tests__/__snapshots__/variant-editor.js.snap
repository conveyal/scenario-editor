// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > VariantEditor renders correctly 1`] = `
<Memo(Variants)
  createVariant={[MockFunction]}
  deleteVariant={[MockFunction]}
  editVariantName={[MockFunction]}
  showVariant={[MockFunction]}
  variants={Array []}
>
  <Box
    p={2}
  >
    <div
      className="css-olyig7"
    >
      <Button
        colorScheme="green"
        isFullWidth={true}
        onClick={[Function]}
      >
        <Styled(button)
          __css={
            Object {
              "_active": Object {
                "bg": "green.700",
              },
              "_disabled": Object {
                "boxShadow": "none",
                "cursor": "not-allowed",
                "opacity": 0.4,
              },
              "_focus": Object {
                "boxShadow": "outline",
              },
              "_hover": Object {
                "_disabled": Object {
                  "bg": "green.500",
                },
                "bg": "green.600",
              },
              "alignItems": "center",
              "appearance": "none",
              "bg": "green.500",
              "borderRadius": "md",
              "color": "white",
              "display": "inline-flex",
              "fontSize": "md",
              "fontWeight": "semibold",
              "h": 10,
              "justifyContent": "center",
              "lineHeight": "1.2",
              "minW": 10,
              "outline": "none",
              "position": "relative",
              "px": 4,
              "transition": "all 250ms",
              "userSelect": "none",
              "verticalAlign": "middle",
              "whiteSpace": "nowrap",
              "width": "100%",
            }
          }
          className="chakra-button"
          onClick={[Function]}
          type="button"
        >
          <button
            className="chakra-button css-1uiu0j2"
            onClick={[Function]}
            type="button"
          >
            Create a scenario
          </button>
        </Styled(button)>
      </Button>
    </div>
  </Box>
  <Stack
    py={2}
  >
    <Styled(div)
      __css={
        Object {
          "& > *:not(style) ~ *:not(style)": Object {
            "marginStart": 0,
            "marginTop": "0.5rem",
          },
        }
      }
      className="chakra-stack"
      display="flex"
      flexDirection="column"
      py={2}
    >
      <div
        className="chakra-stack css-1hi6e84"
      >
        <Text
          key=".0"
          px={4}
          py={2}
        >
          <Styled(p)
            __css={Object {}}
            className="chakra-text"
            px={4}
            py={2}
          >
            <p
              className="chakra-text css-8wgsd2"
            >
              A Scenario is a collection of modifications within a project.
            </p>
          </Styled(p)>
        </Text>
        <Divider
          key=".1"
          mx={4}
        >
          <Styled(hr)
            __css={
              Object {
                "border": "0",
                "borderBottomWidth": "1px",
                "borderColor": "inherit",
                "borderStyle": "solid",
                "opacity": 0.6,
                "width": "100%",
              }
            }
            aria-orientation="horizontal"
            className="chakra-divider"
            mx={4}
            role="separator"
          >
            <hr
              aria-orientation="horizontal"
              className="chakra-divider css-p2zx7n"
              role="separator"
            />
          </Styled(hr)>
        </Divider>
        <InnerDock
          key=".2"
        >
          <SimpleBar
            className="InnerDock "
            style={
              Object {
                "height": 768,
              }
            }
          >
            <div
              className="InnerDock "
              data-simplebar={true}
              style={
                Object {
                  "height": 768,
                }
              }
            >
              <div
                className="simplebar-wrapper"
              >
                <div
                  className="simplebar-height-auto-observer-wrapper"
                >
                  <div
                    className="simplebar-height-auto-observer"
                  />
                </div>
                <div
                  className="simplebar-mask"
                >
                  <div
                    className="simplebar-offset"
                  >
                    <div
                      className="simplebar-content-wrapper"
                    >
                      <div
                        className="simplebar-content"
                      >
                        <Stack
                          id="scenarios"
                          pl={4}
                          pr={2}
                          pt={2}
                          spacing={3}
                        >
                          <Styled(div)
                            __css={
                              Object {
                                "& > *:not(style) ~ *:not(style)": Object {
                                  "marginStart": 0,
                                  "marginTop": 3,
                                },
                              }
                            }
                            className="chakra-stack"
                            display="flex"
                            flexDirection="column"
                            id="scenarios"
                            pl={4}
                            pr={2}
                            pt={2}
                          >
                            <div
                              className="chakra-stack css-wvgnfh"
                              id="scenarios"
                            >
                              <Flex
                                key=".0"
                                pr={2}
                              >
                                <Styled(div)
                                  __css={
                                    Object {
                                      "alignItems": undefined,
                                      "display": "flex",
                                      "flexBasis": undefined,
                                      "flexDirection": undefined,
                                      "flexGrow": undefined,
                                      "flexShrink": undefined,
                                      "flexWrap": undefined,
                                      "justifyContent": undefined,
                                    }
                                  }
                                  pr={2}
                                >
                                  <div
                                    className="css-1pjcatt"
                                  >
                                    <Text
                                      flex="1"
                                      fontWeight="bold"
                                    >
                                      <Styled(p)
                                        __css={Object {}}
                                        className="chakra-text"
                                        flex="1"
                                        fontWeight="bold"
                                      >
                                        <p
                                          className="chakra-text css-1w1y9ry"
                                        >
                                          Baseline
                                        </p>
                                      </Styled(p)>
                                    </Text>
                                    <ForwardRef
                                      label="Baseline (empty scenario) cannot be modified"
                                    >
                                      <Tooltip
                                        aria-label="Tooltip: Baseline (empty scenario) cannot be modified"
                                        fontSize="md"
                                        hasArrow={true}
                                        label="Baseline (empty scenario) cannot be modified"
                                        zIndex={1500}
                                      >
                                        <span
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseEnter={[Function]}
                                        >
                                          <FaLock>
                                            <IconBase
                                              attr={
                                                Object {
                                                  "viewBox": "0 0 448 512",
                                                }
                                              }
                                            >
                                              <svg
                                                fill="currentColor"
                                                height="1em"
                                                stroke="currentColor"
                                                strokeWidth="0"
                                                style={
                                                  Object {
                                                    "color": undefined,
                                                  }
                                                }
                                                viewBox="0 0 448 512"
                                                width="1em"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                                                  key="0"
                                                />
                                              </svg>
                                            </IconBase>
                                          </FaLock>
                                        </span>
                                        <AnimatePresence />
                                      </Tooltip>
                                    </ForwardRef>
                                  </div>
                                </Styled(div)>
                              </Flex>
                            </div>
                          </Styled(div)>
                        </Stack>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="simplebar-placeholder"
                />
              </div>
              <div
                className="simplebar-track simplebar-horizontal"
              >
                <div
                  className="simplebar-scrollbar"
                />
              </div>
              <div
                className="simplebar-track simplebar-vertical"
              >
                <div
                  className="simplebar-scrollbar"
                />
              </div>
            </div>
          </SimpleBar>
        </InnerDock>
      </div>
    </Styled(div)>
  </Stack>
</Memo(Variants)>
`;
