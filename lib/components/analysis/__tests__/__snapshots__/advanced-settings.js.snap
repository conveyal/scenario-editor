// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components > Analysis > Advanced Settings should render correctly 1`] = `
<Collapsible
  defaultExpanded={false}
  heading={[Function]}
>
  <Body>
    <div
      className="row"
    >
      <div
        className="col-xs-4"
      >
        <EgressModeSelector
          disabled={false}
          egressModes="WALK"
          update={[MockFunction]}
        />
      </div>
      <div
        className="col-xs-4"
      >
        <NumberInput
          disabled={false}
          label="Walk Speed"
          max={15}
          min={3}
          name="walkSpeed"
          onChange={[Function]}
          step={0.1}
          units="km/h"
          value={5}
        />
      </div>
      <div
        className="col-xs-4"
      >
        <NumberInput
          disabled={false}
          label="Bike Speed"
          max={20}
          min={5}
          name="bikeSpeed"
          onChange={[Function]}
          step={0.1}
          units="km/h"
          value={15}
        />
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-4"
      >
        <NumberInput
          disabled={false}
          label="Simulated schedules"
          max={10000}
          min={1}
          name="monteCarloDraws"
          onChange={[Function]}
          step={1}
          value={200}
        />
      </div>
      <div
        className="col-xs-4"
      >
        <NumberInput
          disabled={false}
          label="Max Walk Time"
          max={60}
          min={1}
          name="maxWalkTime"
          onChange={[Function]}
          step={1}
          units="min"
          value={20}
        />
      </div>
      <div
        className="col-xs-4"
      >
        <NumberInput
          disabled={false}
          label="Max Bike Time"
          max={60}
          min={1}
          name="maxBikeTime"
          onChange={[Function]}
          step={1}
          units="min"
          value={20}
        />
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-4"
      >
        <NumberInput
          disabled={false}
          label="Maximum transfers"
          max={7}
          min={0}
          name="maxTransfers"
          onChange={[Function]}
          step={1}
          value={3}
        />
      </div>
      <div
        className="col-xs-8"
      >
        <P>
          Lower limits may apply to transfer and egress legs. See the user manual for more information.
        </P>
      </div>
    </div>
    <Group
      label="Bounds of analysis"
    >
      <div
        className="row"
      >
        <div
          className="col-xs-6"
        >
          <S
            isDisabled={false}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Entire region",
                  "value": "__REGION",
                },
                Object {
                  "label": "Same as ANALYSIS 1",
                  "value": "abcd",
                },
                Object {
                  "label": "Same as ANALYSIS 2",
                  "value": "efgh",
                },
              ]
            }
            value={
              Object {
                "label": "Entire region",
                "value": "__REGION",
              }
            }
          />
        </div>
        <div
          className="col-xs-6"
        >
          <Button
            block={true}
            disabled={false}
            onClick={[Function]}
            style="warning"
          >
            <Icon
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "pencil-alt",
                  "prefix": "fas",
                }
              }
            />
             Set custom geographic bounds
          </Button>
        </div>
      </div>
    </Group>
    <div
      className="row"
    >
      <div
        className="col-xs-12"
      >
        <Group
          label="Customize Profile Request"
        >
          <P>
            Edit JSON directly that will be sent to the worker. For advanced users only. Notice that "percentiles" and "workerVersion" cannot be changed here.
          </P>
          <textarea
            className="form-control monospace"
            defaultValue="{
	\\"accessModes\\": \\"WALK\\",
	\\"bikeSafe\\": 1,
	\\"bikeSlope\\": 1,
	\\"bikeSpeed\\": 4.166666666666667,
	\\"bikeTime\\": 1,
	\\"bounds\\": {
		\\"north\\": 39,
		\\"east\\": -76,
		\\"south\\": 38,
		\\"west\\": -77
	},
	\\"bundleId\\": \\"1\\",
	\\"date\\": \\"2016-01-16\\",
	\\"defaultExpanded\\": true,
	\\"directModes\\": \\"WALK\\",
	\\"egressModes\\": \\"WALK\\",
	\\"fromLat\\": 12,
	\\"fromLon\\": 34,
	\\"fromTime\\": 25200,
	\\"maxBikeTime\\": 20,
	\\"maxRides\\": 4,
	\\"maxTripDurationMinutes\\": 60,
	\\"maxWalkTime\\": 20,
	\\"monteCarloDraws\\": 200,
	\\"name\\": \\"Profile Request Test\\",
	\\"projectId\\": \\"1\\",
	\\"reachabilityThreshold\\": 0,
	\\"regionId\\": \\"1\\",
	\\"toTime\\": 32400,
	\\"transitModes\\": \\"BUS,TRAM,RAIL,SUBWAY\\",
	\\"travelTimePercentile\\": 50,
	\\"variantIndex\\": 0,
	\\"walkSpeed\\": 1.3888888888888888,
	\\"workerVersion\\": \\"v4.0.0\\"
}"
            disabled={false}
            key="{\\"accessModes\\":\\"WALK\\",\\"bikeSafe\\":1,\\"bikeSlope\\":1,\\"bikeSpeed\\":4.166666666666667,\\"bikeTime\\":1,\\"bounds\\":{\\"north\\":39,\\"east\\":-76,\\"south\\":38,\\"west\\":-77},\\"bundleId\\":\\"1\\",\\"date\\":\\"2016-01-16\\",\\"defaultExpanded\\":true,\\"directModes\\":\\"WALK\\",\\"egressModes\\":\\"WALK\\",\\"fromLat\\":12,\\"fromLon\\":34,\\"fromTime\\":25200,\\"maxBikeTime\\":20,\\"maxRides\\":4,\\"maxTripDurationMinutes\\":60,\\"maxWalkTime\\":20,\\"monteCarloDraws\\":200,\\"name\\":\\"Profile Request Test\\",\\"projectId\\":\\"1\\",\\"reachabilityThreshold\\":0,\\"regionId\\":\\"1\\",\\"toTime\\":32400,\\"transitModes\\":\\"BUS,TRAM,RAIL,SUBWAY\\",\\"travelTimePercentile\\":50,\\"variantIndex\\":0,\\"walkSpeed\\":1.3888888888888888,\\"workerVersion\\":\\"v4.0.0\\"}"
            rows={10}
            spellCheck={false}
          />
          <br />
          <Button
            block={true}
            disabled={false}
            onClick={[Function]}
            style="warning"
          >
            <Icon
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "pencil-alt",
                  "prefix": "fas",
                }
              }
            />
             
            Update Profile Request
          </Button>
        </Group>
      </div>
    </div>
  </Body>
</Collapsible>
`;

exports[`Components > Analysis > Advanced Settings should render correctly with expanded advanced settings 1`] = `
<AdvancedSettings
  disabled={false}
  hideBoundsEditor={[MockFunction]}
  profileRequest={
    Object {
      "accessModes": "WALK",
      "bikeSafe": 1,
      "bikeSlope": 1,
      "bikeSpeed": 4.166666666666667,
      "bikeTime": 1,
      "bounds": Object {
        "east": -76,
        "north": 39,
        "south": 38,
        "west": -77,
      },
      "bundleId": "1",
      "date": "2016-01-16",
      "defaultExpanded": true,
      "directModes": "WALK",
      "egressModes": "WALK",
      "fromLat": 12,
      "fromLon": 34,
      "fromTime": 25200,
      "maxBikeTime": 20,
      "maxRides": 4,
      "maxTripDurationMinutes": 60,
      "maxWalkTime": 20,
      "monteCarloDraws": 200,
      "name": "Profile Request Test",
      "projectId": "1",
      "reachabilityThreshold": 0,
      "regionId": "1",
      "toTime": 32400,
      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
      "travelTimePercentile": 50,
      "variantIndex": 0,
      "walkSpeed": 1.3888888888888888,
      "workerVersion": "v4.0.0",
    }
  }
  regionBounds={
    Object {
      "east": -76,
      "north": 39,
      "south": 38,
      "west": -77,
    }
  }
  regionalAnalyses={
    Array [
      Object {
        "_id": "abcd",
        "accessGroup": "accessGroupName",
        "bounds": Object {},
        "bundleId": "5678",
        "complete": true,
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "cutoffMinutes": 60,
        "deleted": false,
        "grid": "Jobs_total",
        "height": 300,
        "name": "ANALYSIS 1",
        "nonce": "12345",
        "north": 20024,
        "projectId": "1234",
        "request": Object {
          "accessModes": "WALK",
          "bikeSafe": 1,
          "bikeSlope": 1,
          "bikeSpeed": 4.166666666666667,
          "bikeTime": 1,
          "bounds": Object {
            "east": -76,
            "north": 39,
            "south": 38,
            "west": -77,
          },
          "bundleId": "1",
          "date": "2016-01-16",
          "defaultExpanded": true,
          "directModes": "WALK",
          "egressModes": "WALK",
          "fromLat": 12,
          "fromLon": 34,
          "fromTime": 25200,
          "maxBikeTime": 20,
          "maxRides": 4,
          "maxTripDurationMinutes": 60,
          "maxWalkTime": 20,
          "monteCarloDraws": 200,
          "name": "Profile Request Test",
          "projectId": "1",
          "reachabilityThreshold": 0,
          "regionId": "1",
          "toTime": 32400,
          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
          "travelTimePercentile": 50,
          "variantIndex": 0,
          "walkSpeed": 1.3888888888888888,
          "workerVersion": "v4.0.0",
        },
        "status": "DONE",
        "travelTimePercentile": -1,
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variant": 0,
        "west": 20015,
        "width": 300,
        "workerVersion": "v3.2.0",
        "zoom": 9,
      },
      Object {
        "_id": "efgh",
        "accessGroup": "accessGroupName",
        "bounds": Object {},
        "bundleId": "5678",
        "complete": true,
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "cutoffMinutes": 60,
        "deleted": false,
        "grid": "Jobs_total",
        "height": 300,
        "name": "ANALYSIS 2",
        "nonce": "12345",
        "north": 20024,
        "projectId": "4321",
        "request": Object {
          "accessModes": "WALK",
          "bikeSafe": 1,
          "bikeSlope": 1,
          "bikeSpeed": 4.166666666666667,
          "bikeTime": 1,
          "bounds": Object {
            "east": -76,
            "north": 39,
            "south": 38,
            "west": -77,
          },
          "bundleId": "1",
          "date": "2016-01-16",
          "defaultExpanded": true,
          "directModes": "WALK",
          "egressModes": "WALK",
          "fromLat": 12,
          "fromLon": 34,
          "fromTime": 25200,
          "maxBikeTime": 20,
          "maxRides": 4,
          "maxTripDurationMinutes": 60,
          "maxWalkTime": 20,
          "monteCarloDraws": 200,
          "name": "Profile Request Test",
          "projectId": "1",
          "reachabilityThreshold": 0,
          "regionId": "1",
          "toTime": 32400,
          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
          "travelTimePercentile": 50,
          "variantIndex": 0,
          "walkSpeed": 1.3888888888888888,
          "workerVersion": "v4.0.0",
        },
        "status": "DONE",
        "travelTimePercentile": 42,
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variant": 1,
        "west": 20015,
        "width": 300,
        "workerVersion": "v3.2.0",
        "zoom": 9,
      },
    ]
  }
  setProfileRequest={[MockFunction]}
  showBoundsEditor={[MockFunction]}
>
  <Collapsible
    defaultExpanded={false}
    heading={[Function]}
  >
    <Panel>
      <div
        className="panel panel-default"
      >
        <Heading
          onClick={[Function]}
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          <div
            className="panel-heading clearfix "
            onClick={[Function]}
            style={
              Object {
                "cursor": "pointer",
              }
            }
          >
            <Icon
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "cog",
                  "prefix": "fas",
                }
              }
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={true}
                flip={null}
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "cog",
                    "prefix": "fas",
                  }
                }
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                swapOpacity={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-cog fa-w-NaN fa-fw "
                  data-icon="cog"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 undefined undefined"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </Icon>
            <strong>
               Advanced Settings
            </strong>
            <span
              className="pull-right"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "caret-down",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "caret-down",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-caret-down fa-w-NaN fa-fw "
                    data-icon="caret-down"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
            </span>
          </div>
        </Heading>
        <Body>
          <div
            className="panel-body"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-4"
              >
                <EgressModeSelector
                  disabled={false}
                  egressModes="WALK"
                  update={[MockFunction]}
                >
                  <Group
                    label="Egress Modes"
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="egress-modes-input-0"
                      >
                        Egress Modes
                      </label>
                      <br />
                      <Group>
                        <div
                          className="btn-group"
                        >
                          <Button
                            active={true}
                            disabled={false}
                            onClick={[Function]}
                            title="Walk"
                          >
                            <a
                              className="btn btn-default active"
                              disabled={false}
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                              title="Walk"
                            >
                              <Icon
                                icon={
                                  Object {
                                    "icon": Array [],
                                    "iconName": "walking",
                                    "prefix": "fas",
                                  }
                                }
                              >
                                <FontAwesomeIcon
                                  border={false}
                                  className=""
                                  fixedWidth={true}
                                  flip={null}
                                  icon={
                                    Object {
                                      "icon": Array [],
                                      "iconName": "walking",
                                      "prefix": "fas",
                                    }
                                  }
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull={null}
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  swapOpacity={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="svg-inline--fa fa-walking fa-w-NaN fa-fw "
                                    data-icon="walking"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    style={Object {}}
                                    viewBox="0 0 undefined undefined"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </svg>
                                </FontAwesomeIcon>
                              </Icon>
                            </a>
                          </Button>
                          <Button
                            active={false}
                            disabled={false}
                            onClick={[Function]}
                            title="Bike"
                          >
                            <a
                              className="btn btn-default"
                              disabled={false}
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                              title="Bike"
                            >
                              <Icon
                                icon={
                                  Object {
                                    "icon": Array [],
                                    "iconName": "bicycle",
                                    "prefix": "fas",
                                  }
                                }
                              >
                                <FontAwesomeIcon
                                  border={false}
                                  className=""
                                  fixedWidth={true}
                                  flip={null}
                                  icon={
                                    Object {
                                      "icon": Array [],
                                      "iconName": "bicycle",
                                      "prefix": "fas",
                                    }
                                  }
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull={null}
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  swapOpacity={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="svg-inline--fa fa-bicycle fa-w-NaN fa-fw "
                                    data-icon="bicycle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    style={Object {}}
                                    viewBox="0 0 undefined undefined"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </svg>
                                </FontAwesomeIcon>
                              </Icon>
                            </a>
                          </Button>
                        </div>
                      </Group>
                    </div>
                  </Group>
                </EgressModeSelector>
              </div>
              <div
                className="col-xs-4"
              >
                <NumberInput
                  disabled={false}
                  label="Walk Speed"
                  max={15}
                  min={3}
                  name="walkSpeed"
                  onChange={[Function]}
                  step={0.1}
                  units="km/h"
                  value={5}
                >
                  <Group
                    disabled={false}
                    id="walk-speed-input-1"
                    label="Walk Speed"
                    max={15}
                    min={3}
                    name="walkSpeed"
                    onChange={[Function]}
                    step={0.1}
                    units="km/h"
                    value={5}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="walk-speed-input-1"
                      >
                        Walk Speed
                      </label>
                      <Input
                        disabled={false}
                        id="walk-speed-input-1"
                        label="Walk Speed"
                        max={15}
                        min={3}
                        name="walkSpeed"
                        onChange={[Function]}
                        onWheel={[Function]}
                        step={0.1}
                        type="text"
                        units="km/h"
                        value={5}
                      >
                        <div
                          className="InputWithUnits"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="walk-speed-input-1"
                            label="Walk Speed"
                            max={15}
                            min={3}
                            name="walkSpeed"
                            onChange={[Function]}
                            onWheel={[Function]}
                            placeholder="Walk Speed"
                            step={0.1}
                            type="text"
                            units="km/h"
                            value={5}
                          />
                          <span
                            className="InputUnits"
                          >
                            km/h
                          </span>
                        </div>
                      </Input>
                    </div>
                  </Group>
                </NumberInput>
              </div>
              <div
                className="col-xs-4"
              >
                <NumberInput
                  disabled={false}
                  label="Bike Speed"
                  max={20}
                  min={5}
                  name="bikeSpeed"
                  onChange={[Function]}
                  step={0.1}
                  units="km/h"
                  value={15}
                >
                  <Group
                    disabled={false}
                    id="bike-speed-input-2"
                    label="Bike Speed"
                    max={20}
                    min={5}
                    name="bikeSpeed"
                    onChange={[Function]}
                    step={0.1}
                    units="km/h"
                    value={15}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="bike-speed-input-2"
                      >
                        Bike Speed
                      </label>
                      <Input
                        disabled={false}
                        id="bike-speed-input-2"
                        label="Bike Speed"
                        max={20}
                        min={5}
                        name="bikeSpeed"
                        onChange={[Function]}
                        onWheel={[Function]}
                        step={0.1}
                        type="text"
                        units="km/h"
                        value={15}
                      >
                        <div
                          className="InputWithUnits"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="bike-speed-input-2"
                            label="Bike Speed"
                            max={20}
                            min={5}
                            name="bikeSpeed"
                            onChange={[Function]}
                            onWheel={[Function]}
                            placeholder="Bike Speed"
                            step={0.1}
                            type="text"
                            units="km/h"
                            value={15}
                          />
                          <span
                            className="InputUnits"
                          >
                            km/h
                          </span>
                        </div>
                      </Input>
                    </div>
                  </Group>
                </NumberInput>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-xs-4"
              >
                <NumberInput
                  disabled={false}
                  label="Simulated schedules"
                  max={10000}
                  min={1}
                  name="monteCarloDraws"
                  onChange={[Function]}
                  step={1}
                  value={200}
                >
                  <Group
                    disabled={false}
                    id="monte-carlo-draws-input-3"
                    label="Simulated schedules"
                    max={10000}
                    min={1}
                    name="monteCarloDraws"
                    onChange={[Function]}
                    step={1}
                    value={200}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="monte-carlo-draws-input-3"
                      >
                        Simulated schedules
                      </label>
                      <Input
                        disabled={false}
                        id="monte-carlo-draws-input-3"
                        label="Simulated schedules"
                        max={10000}
                        min={1}
                        name="monteCarloDraws"
                        onChange={[Function]}
                        onWheel={[Function]}
                        step={1}
                        type="text"
                        value={200}
                      >
                        <input
                          className="form-control"
                          disabled={false}
                          id="monte-carlo-draws-input-3"
                          label="Simulated schedules"
                          max={10000}
                          min={1}
                          name="monteCarloDraws"
                          onChange={[Function]}
                          onWheel={[Function]}
                          placeholder="Simulated schedules"
                          step={1}
                          type="text"
                          value={200}
                        />
                      </Input>
                    </div>
                  </Group>
                </NumberInput>
              </div>
              <div
                className="col-xs-4"
              >
                <NumberInput
                  disabled={false}
                  label="Max Walk Time"
                  max={60}
                  min={1}
                  name="maxWalkTime"
                  onChange={[Function]}
                  step={1}
                  units="min"
                  value={20}
                >
                  <Group
                    disabled={false}
                    id="max-walk-time-input-4"
                    label="Max Walk Time"
                    max={60}
                    min={1}
                    name="maxWalkTime"
                    onChange={[Function]}
                    step={1}
                    units="min"
                    value={20}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="max-walk-time-input-4"
                      >
                        Max Walk Time
                      </label>
                      <Input
                        disabled={false}
                        id="max-walk-time-input-4"
                        label="Max Walk Time"
                        max={60}
                        min={1}
                        name="maxWalkTime"
                        onChange={[Function]}
                        onWheel={[Function]}
                        step={1}
                        type="text"
                        units="min"
                        value={20}
                      >
                        <div
                          className="InputWithUnits"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="max-walk-time-input-4"
                            label="Max Walk Time"
                            max={60}
                            min={1}
                            name="maxWalkTime"
                            onChange={[Function]}
                            onWheel={[Function]}
                            placeholder="Max Walk Time"
                            step={1}
                            type="text"
                            units="min"
                            value={20}
                          />
                          <span
                            className="InputUnits"
                          >
                            min
                          </span>
                        </div>
                      </Input>
                    </div>
                  </Group>
                </NumberInput>
              </div>
              <div
                className="col-xs-4"
              >
                <NumberInput
                  disabled={false}
                  label="Max Bike Time"
                  max={60}
                  min={1}
                  name="maxBikeTime"
                  onChange={[Function]}
                  step={1}
                  units="min"
                  value={20}
                >
                  <Group
                    disabled={false}
                    id="max-bike-time-input-5"
                    label="Max Bike Time"
                    max={60}
                    min={1}
                    name="maxBikeTime"
                    onChange={[Function]}
                    step={1}
                    units="min"
                    value={20}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="max-bike-time-input-5"
                      >
                        Max Bike Time
                      </label>
                      <Input
                        disabled={false}
                        id="max-bike-time-input-5"
                        label="Max Bike Time"
                        max={60}
                        min={1}
                        name="maxBikeTime"
                        onChange={[Function]}
                        onWheel={[Function]}
                        step={1}
                        type="text"
                        units="min"
                        value={20}
                      >
                        <div
                          className="InputWithUnits"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="max-bike-time-input-5"
                            label="Max Bike Time"
                            max={60}
                            min={1}
                            name="maxBikeTime"
                            onChange={[Function]}
                            onWheel={[Function]}
                            placeholder="Max Bike Time"
                            step={1}
                            type="text"
                            units="min"
                            value={20}
                          />
                          <span
                            className="InputUnits"
                          >
                            min
                          </span>
                        </div>
                      </Input>
                    </div>
                  </Group>
                </NumberInput>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="col-xs-4"
              >
                <NumberInput
                  disabled={false}
                  label="Maximum transfers"
                  max={7}
                  min={0}
                  name="maxTransfers"
                  onChange={[Function]}
                  step={1}
                  value={3}
                >
                  <Group
                    disabled={false}
                    id="max-transfers-input-6"
                    label="Maximum transfers"
                    max={7}
                    min={0}
                    name="maxTransfers"
                    onChange={[Function]}
                    step={1}
                    value={3}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        className="control-label"
                        htmlFor="max-transfers-input-6"
                      >
                        Maximum transfers
                      </label>
                      <Input
                        disabled={false}
                        id="max-transfers-input-6"
                        label="Maximum transfers"
                        max={7}
                        min={0}
                        name="maxTransfers"
                        onChange={[Function]}
                        onWheel={[Function]}
                        step={1}
                        type="text"
                        value={3}
                      >
                        <input
                          className="form-control"
                          disabled={false}
                          id="max-transfers-input-6"
                          label="Maximum transfers"
                          max={7}
                          min={0}
                          name="maxTransfers"
                          onChange={[Function]}
                          onWheel={[Function]}
                          placeholder="Maximum transfers"
                          step={1}
                          type="text"
                          value={3}
                        />
                      </Input>
                    </div>
                  </Group>
                </NumberInput>
              </div>
              <div
                className="col-xs-8"
              >
                <P>
                  <Styled(div)
                    as="p"
                    mb="10px"
                  >
                    <p
                      className="css-1r2f04i"
                    >
                      Lower limits may apply to transfer and egress legs. See the user manual for more information.
                    </p>
                  </Styled(div)>
                </P>
              </div>
            </div>
            <Group
              label="Bounds of analysis"
            >
              <div
                className="form-group"
              >
                <label
                  className="control-label"
                  htmlFor="bounds-of-analysis-input-7"
                >
                  Bounds of analysis
                </label>
                <div
                  className="row"
                >
                  <div
                    className="col-xs-6"
                  >
                    <S
                      isDisabled={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Entire region",
                            "value": "__REGION",
                          },
                          Object {
                            "label": "Same as ANALYSIS 1",
                            "value": "abcd",
                          },
                          Object {
                            "label": "Same as ANALYSIS 2",
                            "value": "efgh",
                          },
                        ]
                      }
                      value={
                        Object {
                          "label": "Entire region",
                          "value": "__REGION",
                        }
                      }
                    >
                      <ReactSelect
                        isDisabled={false}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Entire region",
                              "value": "__REGION",
                            },
                            Object {
                              "label": "Same as ANALYSIS 1",
                              "value": "abcd",
                            },
                            Object {
                              "label": "Same as ANALYSIS 2",
                              "value": "efgh",
                            },
                          ]
                        }
                        styles={
                          Object {
                            "control": [Function],
                            "option": [Function],
                          }
                        }
                        value={
                          Object {
                            "label": "Entire region",
                            "value": "__REGION",
                          }
                        }
                      >
                        <div
                          className="ReactSelectMock"
                        />
                      </ReactSelect>
                    </S>
                  </div>
                  <div
                    className="col-xs-6"
                  >
                    <Button
                      block={true}
                      disabled={false}
                      onClick={[Function]}
                      style="warning"
                    >
                      <a
                        className="btn btn-warning btn-block"
                        disabled={false}
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "pencil-alt",
                              "prefix": "fas",
                            }
                          }
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={true}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "pencil-alt",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-pencil-alt fa-w-NaN fa-fw "
                              data-icon="pencil-alt"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 undefined undefined"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </Icon>
                         Set custom geographic bounds
                      </a>
                    </Button>
                  </div>
                </div>
              </div>
            </Group>
            <div
              className="row"
            >
              <div
                className="col-xs-12"
              >
                <Group
                  label="Customize Profile Request"
                >
                  <div
                    className="form-group"
                  >
                    <label
                      className="control-label"
                      htmlFor="customize-profile-request-input-8"
                    >
                      Customize Profile Request
                    </label>
                    <P>
                      <Styled(div)
                        as="p"
                        mb="10px"
                      >
                        <p
                          className="css-1r2f04i"
                        >
                          Edit JSON directly that will be sent to the worker. For advanced users only. Notice that "percentiles" and "workerVersion" cannot be changed here.
                        </p>
                      </Styled(div)>
                    </P>
                    <textarea
                      className="form-control monospace"
                      defaultValue="{
	\\"accessModes\\": \\"WALK\\",
	\\"bikeSafe\\": 1,
	\\"bikeSlope\\": 1,
	\\"bikeSpeed\\": 4.166666666666667,
	\\"bikeTime\\": 1,
	\\"bounds\\": {
		\\"north\\": 39,
		\\"east\\": -76,
		\\"south\\": 38,
		\\"west\\": -77
	},
	\\"bundleId\\": \\"1\\",
	\\"date\\": \\"2016-01-16\\",
	\\"defaultExpanded\\": true,
	\\"directModes\\": \\"WALK\\",
	\\"egressModes\\": \\"WALK\\",
	\\"fromLat\\": 12,
	\\"fromLon\\": 34,
	\\"fromTime\\": 25200,
	\\"maxBikeTime\\": 20,
	\\"maxRides\\": 4,
	\\"maxTripDurationMinutes\\": 60,
	\\"maxWalkTime\\": 20,
	\\"monteCarloDraws\\": 200,
	\\"name\\": \\"Profile Request Test\\",
	\\"projectId\\": \\"1\\",
	\\"reachabilityThreshold\\": 0,
	\\"regionId\\": \\"1\\",
	\\"toTime\\": 32400,
	\\"transitModes\\": \\"BUS,TRAM,RAIL,SUBWAY\\",
	\\"travelTimePercentile\\": 50,
	\\"variantIndex\\": 0,
	\\"walkSpeed\\": 1.3888888888888888,
	\\"workerVersion\\": \\"v4.0.0\\"
}"
                      disabled={false}
                      key="{\\"accessModes\\":\\"WALK\\",\\"bikeSafe\\":1,\\"bikeSlope\\":1,\\"bikeSpeed\\":4.166666666666667,\\"bikeTime\\":1,\\"bounds\\":{\\"north\\":39,\\"east\\":-76,\\"south\\":38,\\"west\\":-77},\\"bundleId\\":\\"1\\",\\"date\\":\\"2016-01-16\\",\\"defaultExpanded\\":true,\\"directModes\\":\\"WALK\\",\\"egressModes\\":\\"WALK\\",\\"fromLat\\":12,\\"fromLon\\":34,\\"fromTime\\":25200,\\"maxBikeTime\\":20,\\"maxRides\\":4,\\"maxTripDurationMinutes\\":60,\\"maxWalkTime\\":20,\\"monteCarloDraws\\":200,\\"name\\":\\"Profile Request Test\\",\\"projectId\\":\\"1\\",\\"reachabilityThreshold\\":0,\\"regionId\\":\\"1\\",\\"toTime\\":32400,\\"transitModes\\":\\"BUS,TRAM,RAIL,SUBWAY\\",\\"travelTimePercentile\\":50,\\"variantIndex\\":0,\\"walkSpeed\\":1.3888888888888888,\\"workerVersion\\":\\"v4.0.0\\"}"
                      rows={10}
                      spellCheck={false}
                    />
                    <br />
                    <Button
                      block={true}
                      disabled={false}
                      onClick={[Function]}
                      style="warning"
                    >
                      <a
                        className="btn btn-warning btn-block"
                        disabled={false}
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "pencil-alt",
                              "prefix": "fas",
                            }
                          }
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={true}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "pencil-alt",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-pencil-alt fa-w-NaN fa-fw "
                              data-icon="pencil-alt"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 undefined undefined"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </Icon>
                         
                        Update Profile Request
                      </a>
                    </Button>
                  </div>
                </Group>
              </div>
            </div>
          </div>
        </Body>
      </div>
    </Panel>
  </Collapsible>
</AdvancedSettings>
`;
