name: 'Install, lint, unit test, build, run Cypress tests'

on: [pull_request]

env:
  javaVersion: 11
  nodeVersion: '12'
  r5version: v6.4

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}
      - uses: actions/checkout@v2

      # Install and cache the build
      - uses: bahmutov/npm-install@v1
        env:
          # Setting to 0 skips installing the binary
          CYPRESS_INSTALL_BINARY: 0

      # Cache the entire working directory for subsequent jobs
      - uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

  typeCheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}
      - uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: yarn tsc

  codeLinter:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}
      - uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: yarn lint

  checkFormat:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}
      - uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: yarn check-format

  jestUnitTests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}
      - uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: yarn jest
        env:
          CI: true

  nextjsBuild:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}
      - uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      # Cache the next.js cache folder per os/dependency change
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn build
        env:
          NEXT_PUBLIC_BASEMAP_DISABLED: true
          NEXT_PUBLIC_CYPRESS: true
          NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}

      # Cache entire .next folder for subsequent jobs
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ runner.os }}-${{ github.sha }}-nextjs

  setupBackendForCypress:
    runs-on: ubuntu-latest
    steps:
      - name: Cache .jar
        id: cacheJar
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/${{ env.r5version }}.jar
          key: ${{ env.javaVersion }}-${{ env.r5version }}

      # Restore maven dependencies (including those used by dependency:get) from previous runs
      - name: Restore local Maven repo
        if: steps.cacheJar.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.m2/repository
          key: ${{ runner.os }}-${{ github.sha }}-mavenrepo

      # Fetch R5 .jar file from Github Packages
      # The setup-java action also creates a Maven settings.xml configured for Github packages.
      # The GITHUB_TOKEN is scoped to only this repo, so does not allow access to R5 Github Packages.
      # We replace the GITHUB_TOKEN environment variables with a custom generated token with wider scope.
      # The repository URL is defined in a minimal POM file because dependency:get allows adding repositories
      # on the command line, but dependency:copy does not and will fail to copy artifacts not from central.
      - name: Set up Java (and Maven settings.xml)
        if: steps.cacheJar.outputs.cache-hit != 'true'
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.javaVersion }}
          server-id: r5ghpr
          server-username: GHPR_USER # name of env variable for server user
          server-password: GHPR_TOKEN # name of env variable for server password

      - name: Fetch r5 jar from GH Packages
        if: steps.cacheJar.outputs.cache-hit != 'true'
        run: |
          mvn dependency:copy -B -Dartifact=com.conveyal:r5:${{ env.r5version }}:jar:all -Dtransitive=false -DoutputDirectory=${{ github.workspace }}
        env:
          GHPR_USER: ${{ secrets.GHPR_USER }}
          GHPR_TOKEN: ${{ secrets.GHPR_TOKEN }}

  cypressIntegration:
    needs: [nextjsBuild, setupBackendForCypress] # only run if these all pass
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.nodeVersion }}

      # Install / cache dependencies with Cypress to handle caching Cypress binary.
      - name: Check out analysis-ui
        uses: actions/checkout@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Restore .next folder from nextjsBuild
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ runner.os }}-${{ github.sha }}-nextjs

      - name: Cache Cypress binary
        id: cache-cypress
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-v2-${{ runner.os }}-${{ hashFiles('**/package.json') }}

      # Install Cypress binary
      - run: npx cypress install

      # Restore the .jar created in a previous job
      - name: Restore cached .jar
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/${{ env.r5version }}.jar
          key: ${{ env.javaVersion }}-${{ env.r5version }}
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.javaVersion }}

      - uses: cypress-io/github-action@v2
        with:
          install: false
          start: yarn start, yarn start-backend # runs frontend and java server together
          wait-on: 'http://localhost:3000, http://localhost:7070/version'
          wait-on-timeout: 60

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
