// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > ImportModifications renders correctly 1`] = `
<ImportModifications
  projectId="1"
  projects={
    Array [
      Object {
        "_id": "1",
        "accessGroup": "accessGroupName",
        "bundleId": "1",
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "name": "Mock Project",
        "nonce": "12345",
        "regionId": "1",
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variants": Array [
          "Default",
        ],
      },
    ]
  }
  regionId="1"
>
  <Heading
    mb={4}
    size="md"
  >
    <Box
      as="h2"
      fontFamily="heading"
      fontSize="xl"
      fontWeight="bold"
      lineHeight="shorter"
      mb={4}
    >
      <h2
        className="css-k9oqgk"
      >
        Route alignments from shapefile
      </h2>
    </Box>
  </Heading>
  <ButtonLink
    block={true}
    name="Import"
    projectId="1"
    regionId="1"
    style="success"
    to="importShapefile"
  >
    <Link
      name="Import"
      projectId="1"
      regionId="1"
      to="importShapefile"
    >
      <Link
        as="/regions/1/projects/1/import-shapefile?name=Import"
        href={
          Object {
            "pathname": "/regions/[regionId]/projects/[projectId]/import-shapefile",
            "query": Object {
              "name": "Import",
            },
          }
        }
        passHref={true}
      >
        <a
          className="btn btn-success btn-block"
          href="/regions/1/projects/1/import-shapefile?name=Import"
          onClick={[Function]}
          onMouseEnter={[Function]}
          tabIndex={0}
        >
          <Icon
            icon={
              Object {
                "icon": Array [],
                "iconName": "upload",
                "prefix": "fas",
              }
            }
          >
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={true}
              flip={null}
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "upload",
                  "prefix": "fas",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              swapOpacity={false}
              symbol={false}
              title=""
              transform={null}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-upload fa-w-NaN fa-fw "
                data-icon="upload"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 undefined undefined"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </FontAwesomeIcon>
          </Icon>
           
          Import
        </a>
      </Link>
    </Link>
  </ButtonLink>
  <br />
  <Heading
    mb={4}
    size="md"
  >
    <Box
      as="h2"
      fontFamily="heading"
      fontSize="xl"
      fontWeight="bold"
      lineHeight="shorter"
      mb={4}
    >
      <h2
        className="css-k9oqgk"
      >
        Import modifications from another project
      </h2>
    </Box>
  </Heading>
  <P>
    <Box
      as="p"
      mb="10px"
    >
      <p
        className="css-1r2f04i"
      >
        When importing from a project associated with a different bundle, only "Add Trips" modifications will be copied. If a modification uses an existing stop from the baseline GTFS, it will be replaced in the imported modification by a new stop at the same location.
      </p>
    </Box>
  </P>
  <div
    className="form-group"
  >
    <ForwardRef
      getOptionLabel={[Function]}
      getOptionValue={[Function]}
      onChange={[Function]}
      options={
        Array [
          Object {
            "_id": "1",
            "accessGroup": "accessGroupName",
            "bundleId": "1",
            "createdAt": "2017-11-08T12:30:50.133Z",
            "createdBy": "person@gmail.com",
            "name": "Mock Project",
            "nonce": "12345",
            "regionId": "1",
            "updatedAt": "2017-11-08T12:31:19.602Z",
            "updatedBy": "person@gmail.com",
            "variants": Array [
              "Default",
            ],
          },
        ]
      }
      placeholder="Select a project…"
    >
      <ReactSelect
        getOptionLabel={[Function]}
        getOptionValue={[Function]}
        innerRef={null}
        onChange={[Function]}
        options={
          Array [
            Object {
              "_id": "1",
              "accessGroup": "accessGroupName",
              "bundleId": "1",
              "createdAt": "2017-11-08T12:30:50.133Z",
              "createdBy": "person@gmail.com",
              "name": "Mock Project",
              "nonce": "12345",
              "regionId": "1",
              "updatedAt": "2017-11-08T12:31:19.602Z",
              "updatedBy": "person@gmail.com",
              "variants": Array [
                "Default",
              ],
            },
          ]
        }
        placeholder="Select a project…"
        styles={
          Object {
            "control": [Function],
            "option": [Function],
          }
        }
      >
        <div
          className="ReactSelectMock"
        />
      </ReactSelect>
    </ForwardRef>
  </div>
  <Button
    block={true}
    disabled={true}
    name="Import"
    onClick={[Function]}
    style="success"
  >
    <a
      className="btn btn-success btn-block"
      disabled={true}
      href="#"
      name="Import"
      onClick={[Function]}
      tabIndex={0}
    >
      <Icon
        icon={
          Object {
            "icon": Array [],
            "iconName": "copy",
            "prefix": "fas",
          }
        }
      >
        <FontAwesomeIcon
          border={false}
          className=""
          fixedWidth={true}
          flip={null}
          icon={
            Object {
              "icon": Array [],
              "iconName": "copy",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-NaN fa-fw "
            data-icon="copy"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 undefined undefined"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </FontAwesomeIcon>
      </Icon>
       
      Import
    </a>
  </Button>
</ImportModifications>
`;
