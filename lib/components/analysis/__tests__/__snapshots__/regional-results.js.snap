// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegionalResults snapshot(mount) 1`] = `
<RegionalResults
  analysis={
    Object {
      "_id": "abcd",
      "accessGroup": "accessGroupName",
      "bounds": Object {},
      "bundleId": "5678",
      "complete": true,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "cutoffMinutes": 60,
      "cutoffsMinutes": Array [
        60,
      ],
      "deleted": false,
      "grid": "Jobs_total",
      "height": 300,
      "name": "ANALYSIS 1",
      "nonce": "12345",
      "north": 20024,
      "projectId": "1234",
      "request": Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      },
      "status": "DONE",
      "travelTimePercentile": -1,
      "travelTimePercentiles": Array [
        50,
      ],
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variant": 0,
      "west": 20015,
      "width": 300,
      "workerVersion": "v3.2.0",
      "zoom": 9,
    }
  }
  opportunityDatasets={
    Array [
      Object {
        "_id": "Jobs_total",
        "name": "Total jobs",
      },
    ]
  }
  regionId="MOCK_REGION_ID"
>
  <Stack
    spacing={4}
  >
    <Flex
      direction="column"
    >
      <Box
        display="flex"
        flexDirection="column"
      >
        <div
          className="css-j7qwjs"
        >
          <Box
            key=".0"
            mb={4}
          >
            <div
              className="css-acwcvw"
            >
              <label
                className="control-label"
              >
                Export to GIS
              </label>
              <Button
                block={true}
                onClick={[Function]}
                size="sm"
                style="info"
              >
                <a
                  className="btn btn-info btn-block btn-sm"
                  href="#"
                  onClick={[Function]}
                  tabIndex={0}
                >
                  <Icon
                    icon={
                      Object {
                        "icon": Array [],
                        "iconName": "download",
                        "prefix": "fas",
                      }
                    }
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={true}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [],
                          "iconName": "download",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      swapOpacity={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-download fa-w-NaN fa-fw "
                        data-icon="download"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 undefined undefined"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </Icon>
                   
                  Download ANALYSIS 1
                </a>
              </Button>
            </div>
          </Box>
          <Box
            key=".1"
            mb={4}
          >
            <div
              className="css-acwcvw"
            >
              <label
                className="control-label"
              >
                Compare to
              </label>
              <S
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                isClearable={true}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "_id": "abcd",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "5678",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 1",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "1234",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": -1,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 0,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    },
                    Object {
                      "_id": "efgh",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "5678",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 2",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "4321",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": 50,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 1,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    },
                  ]
                }
              >
                <ForwardRef(LoadableComponent)
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isClearable={true}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "_id": "abcd",
                        "accessGroup": "accessGroupName",
                        "bounds": Object {},
                        "bundleId": "5678",
                        "complete": true,
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "cutoffMinutes": 60,
                        "cutoffsMinutes": Array [
                          60,
                        ],
                        "deleted": false,
                        "grid": "Jobs_total",
                        "height": 300,
                        "name": "ANALYSIS 1",
                        "nonce": "12345",
                        "north": 20024,
                        "projectId": "1234",
                        "request": Object {
                          "accessModes": "WALK",
                          "bikeSafe": 1,
                          "bikeSlope": 1,
                          "bikeSpeed": 4.166666666666667,
                          "bikeTime": 1,
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "bundleId": "1",
                          "date": "2016-01-16",
                          "defaultExpanded": true,
                          "directModes": "WALK",
                          "egressModes": "WALK",
                          "fromLat": 12,
                          "fromLon": 34,
                          "fromTime": 25200,
                          "maxBikeTime": 20,
                          "maxRides": 4,
                          "maxTripDurationMinutes": 60,
                          "maxWalkTime": 20,
                          "monteCarloDraws": 200,
                          "name": "Profile Request Test",
                          "projectId": "1",
                          "reachabilityThreshold": 0,
                          "regionId": "1",
                          "toTime": 32400,
                          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                          "travelTimePercentile": 50,
                          "variantIndex": 0,
                          "walkSpeed": 1.3888888888888888,
                          "workerVersion": "v4.0.0",
                        },
                        "status": "DONE",
                        "travelTimePercentile": -1,
                        "travelTimePercentiles": Array [
                          50,
                        ],
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variant": 0,
                        "west": 20015,
                        "width": 300,
                        "workerVersion": "v3.2.0",
                        "zoom": 9,
                      },
                      Object {
                        "_id": "efgh",
                        "accessGroup": "accessGroupName",
                        "bounds": Object {},
                        "bundleId": "5678",
                        "complete": true,
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "cutoffMinutes": 60,
                        "cutoffsMinutes": Array [
                          60,
                        ],
                        "deleted": false,
                        "grid": "Jobs_total",
                        "height": 300,
                        "name": "ANALYSIS 2",
                        "nonce": "12345",
                        "north": 20024,
                        "projectId": "4321",
                        "request": Object {
                          "accessModes": "WALK",
                          "bikeSafe": 1,
                          "bikeSlope": 1,
                          "bikeSpeed": 4.166666666666667,
                          "bikeTime": 1,
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "bundleId": "1",
                          "date": "2016-01-16",
                          "defaultExpanded": true,
                          "directModes": "WALK",
                          "egressModes": "WALK",
                          "fromLat": 12,
                          "fromLon": 34,
                          "fromTime": 25200,
                          "maxBikeTime": 20,
                          "maxRides": 4,
                          "maxTripDurationMinutes": 60,
                          "maxWalkTime": 20,
                          "monteCarloDraws": 200,
                          "name": "Profile Request Test",
                          "projectId": "1",
                          "reachabilityThreshold": 0,
                          "regionId": "1",
                          "toTime": 32400,
                          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                          "travelTimePercentile": 50,
                          "variantIndex": 0,
                          "walkSpeed": 1.3888888888888888,
                          "workerVersion": "v4.0.0",
                        },
                        "status": "DONE",
                        "travelTimePercentile": 50,
                        "travelTimePercentiles": Array [
                          50,
                        ],
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variant": 1,
                        "west": 20015,
                        "width": 300,
                        "workerVersion": "v3.2.0",
                        "zoom": 9,
                      },
                    ]
                  }
                  styles={
                    Object {
                      "control": [Function],
                      "option": [Function],
                    }
                  }
                >
                  <loading
                    error={null}
                    isLoading={true}
                    pastDelay={false}
                    retry={[Function]}
                    timedOut={false}
                  />
                </ForwardRef(LoadableComponent)>
              </S>
            </div>
          </Box>
          <Group
            key=".3"
            label="Access to"
            mb={4}
          >
            <div
              className="form-group"
            >
              <label
                className="control-label"
                htmlFor="access-to-input-0"
              >
                Access to
              </label>
              <P>
                <Box
                  as="p"
                  mb="10px"
                >
                  <p
                    className="css-1r2f04i"
                  >
                    Total jobs within 60 minutes (percentile 50)
                  </p>
                </Box>
              </P>
              <Legend
                breaks={
                  Array [
                    0,
                    436,
                    857,
                    1257,
                    1649,
                    2000,
                  ]
                }
                colors={
                  Array [
                    Object {
                      "b": 255,
                      "g": 255,
                      "opacity": 0,
                      "r": 255,
                    },
                    Rgb {
                      "b": 239,
                      "g": 219,
                      "opacity": 0.42,
                      "r": 198,
                    },
                    Rgb {
                      "b": 225,
                      "g": 202,
                      "opacity": 0.42,
                      "r": 158,
                    },
                    Rgb {
                      "b": 214,
                      "g": 174,
                      "opacity": 0.42,
                      "r": 107,
                    },
                    Rgb {
                      "b": 189,
                      "g": 130,
                      "opacity": 0.42,
                      "r": 49,
                    },
                    Rgb {
                      "b": 156,
                      "g": 81,
                      "opacity": 0.42,
                      "r": 8,
                    },
                  ]
                }
                min={0}
              >
                <div
                  className="Legend"
                >
                  <div
                    className="Legend-Item"
                    key="break-0"
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    0 (transparent)
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-1"
                    style={
                      Object {
                        "backgroundColor": "rgba(198, 219, 239, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    0 to 436
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-2"
                    style={
                      Object {
                        "backgroundColor": "rgba(158, 202, 225, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    436 to 857
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-3"
                    style={
                      Object {
                        "backgroundColor": "rgba(107, 174, 214, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    857 to 1,257
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-4"
                    style={
                      Object {
                        "backgroundColor": "rgba(49, 130, 189, 1)",
                        "color": "#fff",
                      }
                    }
                  >
                    1,257 to 1,649
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-5"
                    style={
                      Object {
                        "backgroundColor": "rgba(8, 81, 156, 1)",
                        "color": "#fff",
                      }
                    }
                  >
                    1,649 to 2,000
                  </div>
                </div>
              </Legend>
            </div>
          </Group>
          <AggregationArea
            key=".4"
            mb={null}
            regionId="MOCK_REGION_ID"
          >
            <Group
              label="Aggregate results to"
            >
              <div
                className="form-group"
              >
                <label
                  className="control-label"
                  htmlFor="aggregate-results-to-input-1"
                >
                  Aggregate results to
                </label>
                <S
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isClearable={true}
                  isDisabled={false}
                  name="aggregateTo"
                  onChange={[Function]}
                  options={Array []}
                >
                  <ForwardRef(LoadableComponent)
                    getOptionLabel={[Function]}
                    getOptionValue={[Function]}
                    isClearable={true}
                    isDisabled={false}
                    name="aggregateTo"
                    onChange={[Function]}
                    options={Array []}
                    styles={
                      Object {
                        "control": [Function],
                        "option": [Function],
                      }
                    }
                  >
                    <loading
                      error={null}
                      isLoading={true}
                      pastDelay={false}
                      retry={[Function]}
                      timedOut={false}
                    />
                  </ForwardRef(LoadableComponent)>
                </S>
              </div>
            </Group>
            <Group>
              <div
                className="form-group"
              >
                <Button
                  block={true}
                  onClick={[Function]}
                  size="sm"
                  style="info"
                >
                  <a
                    className="btn btn-info btn-block btn-sm"
                    href="#"
                    onClick={[Function]}
                    tabIndex={0}
                  >
                    Upload new aggregation area
                     
                    <Icon
                      icon={
                        Object {
                          "icon": Array [],
                          "iconName": "chevron-down",
                          "prefix": "fas",
                        }
                      }
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={true}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [],
                            "iconName": "chevron-down",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-chevron-down fa-w-NaN fa-fw "
                          data-icon="chevron-down"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 undefined undefined"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </Icon>
                  </a>
                </Button>
              </div>
            </Group>
          </AggregationArea>
        </div>
      </Box>
    </Flex>
  </Stack>
</RegionalResults>
`;

exports[`RegionalResults with comparison snapshot(mount) 1`] = `
<RegionalResults
  analysis={
    Object {
      "_id": "abcd",
      "accessGroup": "accessGroupName",
      "bounds": Object {},
      "bundleId": "5678",
      "complete": true,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "cutoffMinutes": 60,
      "cutoffsMinutes": Array [
        60,
      ],
      "deleted": false,
      "grid": "Jobs_total",
      "height": 300,
      "name": "ANALYSIS 1",
      "nonce": "12345",
      "north": 20024,
      "projectId": "1234",
      "request": Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      },
      "status": "DONE",
      "travelTimePercentile": -1,
      "travelTimePercentiles": Array [
        50,
      ],
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variant": 0,
      "west": 20015,
      "width": 300,
      "workerVersion": "v3.2.0",
      "zoom": 9,
    }
  }
  opportunityDatasets={
    Array [
      Object {
        "_id": "Jobs_total",
        "name": "Total jobs",
      },
    ]
  }
  regionId="MOCK_REGION_ID"
>
  <Stack
    spacing={4}
  >
    <Flex
      direction="column"
    >
      <Box
        display="flex"
        flexDirection="column"
      >
        <div
          className="css-j7qwjs"
        >
          <Box
            key=".0"
            mb={4}
          >
            <div
              className="css-acwcvw"
            >
              <label
                className="control-label"
              >
                Export to GIS
              </label>
              <Button
                block={true}
                onClick={[Function]}
                size="sm"
                style="info"
              >
                <a
                  className="btn btn-info btn-block btn-sm"
                  href="#"
                  onClick={[Function]}
                  tabIndex={0}
                >
                  <Icon
                    icon={
                      Object {
                        "icon": Array [],
                        "iconName": "download",
                        "prefix": "fas",
                      }
                    }
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={true}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [],
                          "iconName": "download",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      swapOpacity={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-download fa-w-NaN fa-fw "
                        data-icon="download"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 undefined undefined"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </Icon>
                   
                  Download ANALYSIS 1
                </a>
              </Button>
            </div>
          </Box>
          <Box
            key=".1"
            mb={4}
          >
            <div
              className="css-acwcvw"
            >
              <label
                className="control-label"
              >
                Compare to
              </label>
              <S
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                isClearable={true}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "_id": "abcd",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "5678",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 1",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "1234",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": -1,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 0,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    },
                    Object {
                      "_id": "efgh",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "5678",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 2",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "4321",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": 50,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 1,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    },
                  ]
                }
                value={
                  Object {
                    "_id": "efgh",
                    "accessGroup": "accessGroupName",
                    "bounds": Object {},
                    "bundleId": "5678",
                    "complete": true,
                    "createdAt": "2017-11-08T12:30:50.133Z",
                    "createdBy": "person@gmail.com",
                    "cutoffMinutes": 60,
                    "cutoffsMinutes": Array [
                      60,
                    ],
                    "deleted": false,
                    "grid": "Jobs_total",
                    "height": 300,
                    "name": "ANALYSIS 2",
                    "nonce": "12345",
                    "north": 20024,
                    "projectId": "4321",
                    "request": Object {
                      "accessModes": "WALK",
                      "bikeSafe": 1,
                      "bikeSlope": 1,
                      "bikeSpeed": 4.166666666666667,
                      "bikeTime": 1,
                      "bounds": Object {
                        "east": -76,
                        "north": 39,
                        "south": 38,
                        "west": -77,
                      },
                      "bundleId": "1",
                      "date": "2016-01-16",
                      "defaultExpanded": true,
                      "directModes": "WALK",
                      "egressModes": "WALK",
                      "fromLat": 12,
                      "fromLon": 34,
                      "fromTime": 25200,
                      "maxBikeTime": 20,
                      "maxRides": 4,
                      "maxTripDurationMinutes": 60,
                      "maxWalkTime": 20,
                      "monteCarloDraws": 200,
                      "name": "Profile Request Test",
                      "projectId": "1",
                      "reachabilityThreshold": 0,
                      "regionId": "1",
                      "toTime": 32400,
                      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                      "travelTimePercentile": 50,
                      "variantIndex": 0,
                      "walkSpeed": 1.3888888888888888,
                      "workerVersion": "v4.0.0",
                    },
                    "status": "DONE",
                    "travelTimePercentile": 50,
                    "travelTimePercentiles": Array [
                      50,
                    ],
                    "updatedAt": "2017-11-08T12:31:19.602Z",
                    "updatedBy": "person@gmail.com",
                    "variant": 1,
                    "west": 20015,
                    "width": 300,
                    "workerVersion": "v3.2.0",
                    "zoom": 9,
                  }
                }
              >
                <ForwardRef(LoadableComponent)
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isClearable={true}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "_id": "abcd",
                        "accessGroup": "accessGroupName",
                        "bounds": Object {},
                        "bundleId": "5678",
                        "complete": true,
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "cutoffMinutes": 60,
                        "cutoffsMinutes": Array [
                          60,
                        ],
                        "deleted": false,
                        "grid": "Jobs_total",
                        "height": 300,
                        "name": "ANALYSIS 1",
                        "nonce": "12345",
                        "north": 20024,
                        "projectId": "1234",
                        "request": Object {
                          "accessModes": "WALK",
                          "bikeSafe": 1,
                          "bikeSlope": 1,
                          "bikeSpeed": 4.166666666666667,
                          "bikeTime": 1,
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "bundleId": "1",
                          "date": "2016-01-16",
                          "defaultExpanded": true,
                          "directModes": "WALK",
                          "egressModes": "WALK",
                          "fromLat": 12,
                          "fromLon": 34,
                          "fromTime": 25200,
                          "maxBikeTime": 20,
                          "maxRides": 4,
                          "maxTripDurationMinutes": 60,
                          "maxWalkTime": 20,
                          "monteCarloDraws": 200,
                          "name": "Profile Request Test",
                          "projectId": "1",
                          "reachabilityThreshold": 0,
                          "regionId": "1",
                          "toTime": 32400,
                          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                          "travelTimePercentile": 50,
                          "variantIndex": 0,
                          "walkSpeed": 1.3888888888888888,
                          "workerVersion": "v4.0.0",
                        },
                        "status": "DONE",
                        "travelTimePercentile": -1,
                        "travelTimePercentiles": Array [
                          50,
                        ],
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variant": 0,
                        "west": 20015,
                        "width": 300,
                        "workerVersion": "v3.2.0",
                        "zoom": 9,
                      },
                      Object {
                        "_id": "efgh",
                        "accessGroup": "accessGroupName",
                        "bounds": Object {},
                        "bundleId": "5678",
                        "complete": true,
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "cutoffMinutes": 60,
                        "cutoffsMinutes": Array [
                          60,
                        ],
                        "deleted": false,
                        "grid": "Jobs_total",
                        "height": 300,
                        "name": "ANALYSIS 2",
                        "nonce": "12345",
                        "north": 20024,
                        "projectId": "4321",
                        "request": Object {
                          "accessModes": "WALK",
                          "bikeSafe": 1,
                          "bikeSlope": 1,
                          "bikeSpeed": 4.166666666666667,
                          "bikeTime": 1,
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "bundleId": "1",
                          "date": "2016-01-16",
                          "defaultExpanded": true,
                          "directModes": "WALK",
                          "egressModes": "WALK",
                          "fromLat": 12,
                          "fromLon": 34,
                          "fromTime": 25200,
                          "maxBikeTime": 20,
                          "maxRides": 4,
                          "maxTripDurationMinutes": 60,
                          "maxWalkTime": 20,
                          "monteCarloDraws": 200,
                          "name": "Profile Request Test",
                          "projectId": "1",
                          "reachabilityThreshold": 0,
                          "regionId": "1",
                          "toTime": 32400,
                          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                          "travelTimePercentile": 50,
                          "variantIndex": 0,
                          "walkSpeed": 1.3888888888888888,
                          "workerVersion": "v4.0.0",
                        },
                        "status": "DONE",
                        "travelTimePercentile": 50,
                        "travelTimePercentiles": Array [
                          50,
                        ],
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variant": 1,
                        "west": 20015,
                        "width": 300,
                        "workerVersion": "v3.2.0",
                        "zoom": 9,
                      },
                    ]
                  }
                  styles={
                    Object {
                      "control": [Function],
                      "option": [Function],
                    }
                  }
                  value={
                    Object {
                      "_id": "efgh",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "5678",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 2",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "4321",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": 50,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 1,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    }
                  }
                >
                  <ReactSelect
                    getOptionLabel={[Function]}
                    getOptionValue={[Function]}
                    isClearable={true}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "_id": "abcd",
                          "accessGroup": "accessGroupName",
                          "bounds": Object {},
                          "bundleId": "5678",
                          "complete": true,
                          "createdAt": "2017-11-08T12:30:50.133Z",
                          "createdBy": "person@gmail.com",
                          "cutoffMinutes": 60,
                          "cutoffsMinutes": Array [
                            60,
                          ],
                          "deleted": false,
                          "grid": "Jobs_total",
                          "height": 300,
                          "name": "ANALYSIS 1",
                          "nonce": "12345",
                          "north": 20024,
                          "projectId": "1234",
                          "request": Object {
                            "accessModes": "WALK",
                            "bikeSafe": 1,
                            "bikeSlope": 1,
                            "bikeSpeed": 4.166666666666667,
                            "bikeTime": 1,
                            "bounds": Object {
                              "east": -76,
                              "north": 39,
                              "south": 38,
                              "west": -77,
                            },
                            "bundleId": "1",
                            "date": "2016-01-16",
                            "defaultExpanded": true,
                            "directModes": "WALK",
                            "egressModes": "WALK",
                            "fromLat": 12,
                            "fromLon": 34,
                            "fromTime": 25200,
                            "maxBikeTime": 20,
                            "maxRides": 4,
                            "maxTripDurationMinutes": 60,
                            "maxWalkTime": 20,
                            "monteCarloDraws": 200,
                            "name": "Profile Request Test",
                            "projectId": "1",
                            "reachabilityThreshold": 0,
                            "regionId": "1",
                            "toTime": 32400,
                            "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                            "travelTimePercentile": 50,
                            "variantIndex": 0,
                            "walkSpeed": 1.3888888888888888,
                            "workerVersion": "v4.0.0",
                          },
                          "status": "DONE",
                          "travelTimePercentile": -1,
                          "travelTimePercentiles": Array [
                            50,
                          ],
                          "updatedAt": "2017-11-08T12:31:19.602Z",
                          "updatedBy": "person@gmail.com",
                          "variant": 0,
                          "west": 20015,
                          "width": 300,
                          "workerVersion": "v3.2.0",
                          "zoom": 9,
                        },
                        Object {
                          "_id": "efgh",
                          "accessGroup": "accessGroupName",
                          "bounds": Object {},
                          "bundleId": "5678",
                          "complete": true,
                          "createdAt": "2017-11-08T12:30:50.133Z",
                          "createdBy": "person@gmail.com",
                          "cutoffMinutes": 60,
                          "cutoffsMinutes": Array [
                            60,
                          ],
                          "deleted": false,
                          "grid": "Jobs_total",
                          "height": 300,
                          "name": "ANALYSIS 2",
                          "nonce": "12345",
                          "north": 20024,
                          "projectId": "4321",
                          "request": Object {
                            "accessModes": "WALK",
                            "bikeSafe": 1,
                            "bikeSlope": 1,
                            "bikeSpeed": 4.166666666666667,
                            "bikeTime": 1,
                            "bounds": Object {
                              "east": -76,
                              "north": 39,
                              "south": 38,
                              "west": -77,
                            },
                            "bundleId": "1",
                            "date": "2016-01-16",
                            "defaultExpanded": true,
                            "directModes": "WALK",
                            "egressModes": "WALK",
                            "fromLat": 12,
                            "fromLon": 34,
                            "fromTime": 25200,
                            "maxBikeTime": 20,
                            "maxRides": 4,
                            "maxTripDurationMinutes": 60,
                            "maxWalkTime": 20,
                            "monteCarloDraws": 200,
                            "name": "Profile Request Test",
                            "projectId": "1",
                            "reachabilityThreshold": 0,
                            "regionId": "1",
                            "toTime": 32400,
                            "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                            "travelTimePercentile": 50,
                            "variantIndex": 0,
                            "walkSpeed": 1.3888888888888888,
                            "workerVersion": "v4.0.0",
                          },
                          "status": "DONE",
                          "travelTimePercentile": 50,
                          "travelTimePercentiles": Array [
                            50,
                          ],
                          "updatedAt": "2017-11-08T12:31:19.602Z",
                          "updatedBy": "person@gmail.com",
                          "variant": 1,
                          "west": 20015,
                          "width": 300,
                          "workerVersion": "v3.2.0",
                          "zoom": 9,
                        },
                      ]
                    }
                    styles={
                      Object {
                        "control": [Function],
                        "option": [Function],
                      }
                    }
                    value={
                      Object {
                        "_id": "efgh",
                        "accessGroup": "accessGroupName",
                        "bounds": Object {},
                        "bundleId": "5678",
                        "complete": true,
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "cutoffMinutes": 60,
                        "cutoffsMinutes": Array [
                          60,
                        ],
                        "deleted": false,
                        "grid": "Jobs_total",
                        "height": 300,
                        "name": "ANALYSIS 2",
                        "nonce": "12345",
                        "north": 20024,
                        "projectId": "4321",
                        "request": Object {
                          "accessModes": "WALK",
                          "bikeSafe": 1,
                          "bikeSlope": 1,
                          "bikeSpeed": 4.166666666666667,
                          "bikeTime": 1,
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "bundleId": "1",
                          "date": "2016-01-16",
                          "defaultExpanded": true,
                          "directModes": "WALK",
                          "egressModes": "WALK",
                          "fromLat": 12,
                          "fromLon": 34,
                          "fromTime": 25200,
                          "maxBikeTime": 20,
                          "maxRides": 4,
                          "maxTripDurationMinutes": 60,
                          "maxWalkTime": 20,
                          "monteCarloDraws": 200,
                          "name": "Profile Request Test",
                          "projectId": "1",
                          "reachabilityThreshold": 0,
                          "regionId": "1",
                          "toTime": 32400,
                          "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                          "travelTimePercentile": 50,
                          "variantIndex": 0,
                          "walkSpeed": 1.3888888888888888,
                          "workerVersion": "v4.0.0",
                        },
                        "status": "DONE",
                        "travelTimePercentile": 50,
                        "travelTimePercentiles": Array [
                          50,
                        ],
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variant": 1,
                        "west": 20015,
                        "width": 300,
                        "workerVersion": "v3.2.0",
                        "zoom": 9,
                      }
                    }
                  >
                    <div
                      className="ReactSelectMock"
                    />
                  </ReactSelect>
                </ForwardRef(LoadableComponent)>
              </S>
            </div>
          </Box>
          <Stack
            key=".2"
            mb={4}
            spacing={4}
          >
            <Flex
              direction="column"
              mb={4}
            >
              <Box
                display="flex"
                flexDirection="column"
                mb={4}
              >
                <div
                  className="css-opcg3f"
                >
                  <Box
                    key=".1"
                    mb={4}
                  >
                    <div
                      className="css-acwcvw"
                    >
                      <ProfileRequestDisplay
                        _id="efgh"
                        accessGroup="accessGroupName"
                        accessModes="WALK"
                        bikeSafe={1}
                        bikeSlope={1}
                        bikeSpeed={4.166666666666667}
                        bikeTime={1}
                        bounds={
                          Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          }
                        }
                        bundleId="1"
                        complete={true}
                        createdAt="2017-11-08T12:30:50.133Z"
                        createdBy="person@gmail.com"
                        cutoffMinutes={60}
                        cutoffsMinutes={
                          Array [
                            60,
                          ]
                        }
                        date="2016-01-16"
                        defaultExpanded={true}
                        deleted={false}
                        directModes="WALK"
                        egressModes="WALK"
                        fromLat={12}
                        fromLon={34}
                        fromTime={25200}
                        grid="Jobs_total"
                        height={300}
                        maxBikeTime={20}
                        maxRides={4}
                        maxTripDurationMinutes={60}
                        maxWalkTime={20}
                        monteCarloDraws={200}
                        name="Profile Request Test"
                        nonce="12345"
                        north={20024}
                        projectId="1"
                        reachabilityThreshold={0}
                        regionId="1"
                        request={
                          Object {
                            "accessModes": "WALK",
                            "bikeSafe": 1,
                            "bikeSlope": 1,
                            "bikeSpeed": 4.166666666666667,
                            "bikeTime": 1,
                            "bounds": Object {
                              "east": -76,
                              "north": 39,
                              "south": 38,
                              "west": -77,
                            },
                            "bundleId": "1",
                            "date": "2016-01-16",
                            "defaultExpanded": true,
                            "directModes": "WALK",
                            "egressModes": "WALK",
                            "fromLat": 12,
                            "fromLon": 34,
                            "fromTime": 25200,
                            "maxBikeTime": 20,
                            "maxRides": 4,
                            "maxTripDurationMinutes": 60,
                            "maxWalkTime": 20,
                            "monteCarloDraws": 200,
                            "name": "Profile Request Test",
                            "projectId": "1",
                            "reachabilityThreshold": 0,
                            "regionId": "1",
                            "toTime": 32400,
                            "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                            "travelTimePercentile": 50,
                            "variantIndex": 0,
                            "walkSpeed": 1.3888888888888888,
                            "workerVersion": "v4.0.0",
                          }
                        }
                        status="DONE"
                        toTime={32400}
                        transitModes="BUS,TRAM,RAIL,SUBWAY"
                        travelTimePercentile={50}
                        travelTimePercentiles={
                          Array [
                            50,
                          ]
                        }
                        updatedAt="2017-11-08T12:31:19.602Z"
                        updatedBy="person@gmail.com"
                        variant={1}
                        variantIndex={0}
                        walkSpeed={1.3888888888888888}
                        west={20015}
                        width={300}
                        workerVersion="v4.0.0"
                        zoom={9}
                      >
                        <div
                          className="jsx-2817932548 PRD"
                        >
                          <JSXStyle
                            id="2817932548"
                          />
                          <Collapsible
                            defaultExpanded={true}
                            heading={[Function]}
                          >
                            <Panel>
                              <div
                                className="panel panel-default"
                              >
                                <Heading
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "cursor": "pointer",
                                    }
                                  }
                                >
                                  <div
                                    className="panel-heading clearfix "
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    Profile Request Test
                                    <span
                                      className="pull-right"
                                    >
                                      <Icon
                                        icon={
                                          Object {
                                            "icon": Array [],
                                            "iconName": "caret-down",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={true}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [],
                                              "iconName": "caret-down",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-caret-down fa-w-NaN fa-fw "
                                            data-icon="caret-down"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 undefined undefined"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </div>
                                </Heading>
                                <table
                                  className="jsx-2817932548 table table-condensed table-striped"
                                >
                                  <tbody
                                    className="jsx-2817932548"
                                  >
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Resources
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        <Link
                                          bundleId="1"
                                          regionId="1"
                                          to="bundleEdit"
                                        >
                                          <Link
                                            as="/regions/1/bundles/1"
                                            href={
                                              Object {
                                                "pathname": "/regions/[regionId]/bundles/[bundleId]",
                                                "query": Object {},
                                              }
                                            }
                                            passHref={true}
                                          >
                                            <a
                                              className="jsx-2817932548"
                                              href="/regions/1/bundles/1"
                                              onClick={[Function]}
                                              onMouseEnter={[Function]}
                                            >
                                              GTFS Bundle
                                            </a>
                                          </Link>
                                        </Link>
                                         / 
                                        <Link
                                          projectId="1"
                                          regionId="1"
                                          to="modifications"
                                        >
                                          <Link
                                            as="/regions/1/projects/1"
                                            href={
                                              Object {
                                                "pathname": "/regions/[regionId]/projects/[projectId]",
                                                "query": Object {},
                                              }
                                            }
                                            passHref={true}
                                          >
                                            <a
                                              className="jsx-2817932548"
                                              href="/regions/1/projects/1"
                                              onClick={[Function]}
                                              onMouseEnter={[Function]}
                                            >
                                              Project
                                            </a>
                                          </Link>
                                        </Link>
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Routing engine
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        v4.0.0
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Date
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        2016-01-16
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        From time
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        07:00
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        To time
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        09:00
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Maximum transfers
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        3
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Simulated schedules
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        200
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Access modes
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        <Modes
                                          modes="WALK"
                                        >
                                          <span
                                            key="WALK"
                                            title="Walk"
                                          >
                                            <Icon
                                              icon={
                                                Object {
                                                  "icon": Array [],
                                                  "iconName": "walking",
                                                  "prefix": "fas",
                                                }
                                              }
                                            >
                                              <FontAwesomeIcon
                                                border={false}
                                                className=""
                                                fixedWidth={true}
                                                flip={null}
                                                icon={
                                                  Object {
                                                    "icon": Array [],
                                                    "iconName": "walking",
                                                    "prefix": "fas",
                                                  }
                                                }
                                                inverse={false}
                                                listItem={false}
                                                mask={null}
                                                pull={null}
                                                pulse={false}
                                                rotation={null}
                                                size={null}
                                                spin={false}
                                                swapOpacity={false}
                                                symbol={false}
                                                title=""
                                                transform={null}
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="svg-inline--fa fa-walking fa-w-NaN fa-fw "
                                                  data-icon="walking"
                                                  data-prefix="fas"
                                                  focusable="false"
                                                  role="img"
                                                  style={Object {}}
                                                  viewBox="0 0 undefined undefined"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    fill="currentColor"
                                                    style={Object {}}
                                                  />
                                                </svg>
                                              </FontAwesomeIcon>
                                            </Icon>
                                          </span>
                                        </Modes>
                                      </td>
                                    </tr>
                                    <tr
                                      className="jsx-2817932548"
                                    >
                                      <th
                                        className="jsx-2817932548"
                                      >
                                        Transit
                                      </th>
                                      <td
                                        className="jsx-2817932548"
                                      >
                                        yes
                                      </td>
                                    </tr>
                                  </tbody>
                                </table>
                              </div>
                            </Panel>
                          </Collapsible>
                        </div>
                      </ProfileRequestDisplay>
                    </div>
                  </Box>
                  <Stack
                    key=".2"
                    mb={null}
                    spacing={4}
                  >
                    <Flex
                      direction="column"
                      mb={null}
                    >
                      <Box
                        display="flex"
                        flexDirection="column"
                        mb={null}
                      >
                        <div
                          className="css-j7qwjs"
                        >
                          <Select
                            key=".0"
                            mb={4}
                            onChange={[Function]}
                            value={60}
                          >
                            <Box
                              mb={4}
                              position="relative"
                              width="100%"
                            >
                              <div
                                className="css-1s2yu6d"
                              >
                                <ForwardRef(SelectInput)
                                  color="inherit"
                                  onChange={[Function]}
                                  value={60}
                                >
                                  <Input
                                    appearance="none"
                                    as="select"
                                    color="inherit"
                                    errorBorderColor="red.500"
                                    focusBorderColor="blue.500"
                                    isFullWidth={true}
                                    lineHeight="normal"
                                    onChange={[Function]}
                                    pb="px"
                                    pr="2rem"
                                    size="md"
                                    value={60}
                                    variant="outline"
                                  >
                                    <PseudoBox
                                      _disabled={
                                        Object {
                                          "cursor": "not-allowed",
                                          "opacity": "0.4",
                                        }
                                      }
                                      _focus={
                                        Object {
                                          "borderColor": "#3182ce",
                                          "boxShadow": "0 0 0 1px #3182ce",
                                          "zIndex": 1,
                                        }
                                      }
                                      _hover={
                                        Object {
                                          "borderColor": "gray.300",
                                        }
                                      }
                                      _invalid={
                                        Object {
                                          "borderColor": "#e53e3e",
                                          "boxShadow": "0 0 0 1px #e53e3e",
                                        }
                                      }
                                      _readOnly={
                                        Object {
                                          "bg": "transparent",
                                          "boxShadow": "none !important",
                                          "userSelect": "all",
                                        }
                                      }
                                      alignItems="center"
                                      appearance="none"
                                      as="select"
                                      bg="white"
                                      border="1px"
                                      borderColor="inherit"
                                      color="inherit"
                                      display="flex"
                                      fontSize="md"
                                      height={10}
                                      lineHeight="normal"
                                      onChange={[Function]}
                                      outline="none"
                                      pb="px"
                                      position="relative"
                                      pr="2rem"
                                      px={4}
                                      rounded="md"
                                      transition="all 0.2s"
                                      value={60}
                                      width="100%"
                                    >
                                      <select
                                        className="css-16ut77p"
                                        onChange={[Function]}
                                        value={60}
                                      >
                                        <option
                                          key="60"
                                          value={60}
                                        >
                                          60
                                           minutes
                                        </option>
                                      </select>
                                    </PseudoBox>
                                  </Input>
                                </ForwardRef(SelectInput)>
                                <ForwardRef(SelectIconWrapper)
                                  color="inherit"
                                  opacity={null}
                                >
                                  <Box
                                    alignItems="center"
                                    color="inherit"
                                    display="inline-flex"
                                    height="100%"
                                    justifyContent="center"
                                    opacity={null}
                                    pointerEvents="none"
                                    position="absolute"
                                    right="0.5rem"
                                    top="50%"
                                    transform="translateY(-50%)"
                                    width="1.5rem"
                                    zIndex={2}
                                  >
                                    <div
                                      className="css-1lepn2w"
                                    >
                                      <EnhancedIcon
                                        icon="chevron-down"
                                        size={5}
                                      >
                                        <Icon
                                          color="currentColor"
                                          focusable="false"
                                          name="chevron-down"
                                          size={5}
                                        >
                                          <Styled(div)
                                            as="svg"
                                            color="currentColor"
                                            display="inline-block"
                                            focusable="false"
                                            role="presentation"
                                            size={5}
                                            verticalAlign="middle"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              className="css-12c4avn"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                fill="currentColor"
                                              />
                                            </svg>
                                          </Styled(div)>
                                        </Icon>
                                      </EnhancedIcon>
                                    </div>
                                  </Box>
                                </ForwardRef(SelectIconWrapper)>
                              </div>
                            </Box>
                          </Select>
                          <Select
                            key=".1"
                            mb={null}
                            onChange={[Function]}
                            value={50}
                          >
                            <Box
                              mb={null}
                              position="relative"
                              width="100%"
                            >
                              <div
                                className="css-1jke4yk"
                              >
                                <ForwardRef(SelectInput)
                                  color="inherit"
                                  onChange={[Function]}
                                  value={50}
                                >
                                  <Input
                                    appearance="none"
                                    as="select"
                                    color="inherit"
                                    errorBorderColor="red.500"
                                    focusBorderColor="blue.500"
                                    isFullWidth={true}
                                    lineHeight="normal"
                                    onChange={[Function]}
                                    pb="px"
                                    pr="2rem"
                                    size="md"
                                    value={50}
                                    variant="outline"
                                  >
                                    <PseudoBox
                                      _disabled={
                                        Object {
                                          "cursor": "not-allowed",
                                          "opacity": "0.4",
                                        }
                                      }
                                      _focus={
                                        Object {
                                          "borderColor": "#3182ce",
                                          "boxShadow": "0 0 0 1px #3182ce",
                                          "zIndex": 1,
                                        }
                                      }
                                      _hover={
                                        Object {
                                          "borderColor": "gray.300",
                                        }
                                      }
                                      _invalid={
                                        Object {
                                          "borderColor": "#e53e3e",
                                          "boxShadow": "0 0 0 1px #e53e3e",
                                        }
                                      }
                                      _readOnly={
                                        Object {
                                          "bg": "transparent",
                                          "boxShadow": "none !important",
                                          "userSelect": "all",
                                        }
                                      }
                                      alignItems="center"
                                      appearance="none"
                                      as="select"
                                      bg="white"
                                      border="1px"
                                      borderColor="inherit"
                                      color="inherit"
                                      display="flex"
                                      fontSize="md"
                                      height={10}
                                      lineHeight="normal"
                                      onChange={[Function]}
                                      outline="none"
                                      pb="px"
                                      position="relative"
                                      pr="2rem"
                                      px={4}
                                      rounded="md"
                                      transition="all 0.2s"
                                      value={50}
                                      width="100%"
                                    >
                                      <select
                                        className="css-16ut77p"
                                        onChange={[Function]}
                                        value={50}
                                      >
                                        <option
                                          key="50"
                                          value={50}
                                        >
                                          50
                                          th percentile
                                        </option>
                                      </select>
                                    </PseudoBox>
                                  </Input>
                                </ForwardRef(SelectInput)>
                                <ForwardRef(SelectIconWrapper)
                                  color="inherit"
                                  opacity={null}
                                >
                                  <Box
                                    alignItems="center"
                                    color="inherit"
                                    display="inline-flex"
                                    height="100%"
                                    justifyContent="center"
                                    opacity={null}
                                    pointerEvents="none"
                                    position="absolute"
                                    right="0.5rem"
                                    top="50%"
                                    transform="translateY(-50%)"
                                    width="1.5rem"
                                    zIndex={2}
                                  >
                                    <div
                                      className="css-1lepn2w"
                                    >
                                      <EnhancedIcon
                                        icon="chevron-down"
                                        size={5}
                                      >
                                        <Icon
                                          color="currentColor"
                                          focusable="false"
                                          name="chevron-down"
                                          size={5}
                                        >
                                          <Styled(div)
                                            as="svg"
                                            color="currentColor"
                                            display="inline-block"
                                            focusable="false"
                                            role="presentation"
                                            size={5}
                                            verticalAlign="middle"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              className="css-12c4avn"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                fill="currentColor"
                                              />
                                            </svg>
                                          </Styled(div)>
                                        </Icon>
                                      </EnhancedIcon>
                                    </div>
                                  </Box>
                                </ForwardRef(SelectIconWrapper)>
                              </div>
                            </Box>
                          </Select>
                        </div>
                      </Box>
                    </Flex>
                  </Stack>
                </div>
              </Box>
            </Flex>
          </Stack>
          <Group
            key=".3"
            label="Access to"
            mb={4}
          >
            <div
              className="form-group"
            >
              <label
                className="control-label"
                htmlFor="access-to-input-2"
              >
                Access to
              </label>
              <P>
                <Box
                  as="p"
                  mb="10px"
                >
                  <p
                    className="css-1r2f04i"
                  >
                    Total jobs within 60 minutes (percentile 50)
                  </p>
                </Box>
              </P>
              <P>
                <Box
                  as="p"
                  mb="10px"
                >
                  <p
                    className="css-1r2f04i"
                  >
                    minus 
                    Total jobs within 60 minutes (percentile 50)
                  </p>
                </Box>
              </P>
              <Legend
                breaks={
                  Array [
                    -1421,
                    -1089,
                    -773,
                    -491,
                    -235,
                    235,
                    491,
                    773,
                    1089,
                    1421,
                    1994,
                  ]
                }
                colors={
                  Array [
                    Rgb {
                      "b": 21,
                      "g": 15,
                      "opacity": 0.42,
                      "r": 165,
                    },
                    Rgb {
                      "b": 38,
                      "g": 45,
                      "opacity": 0.42,
                      "r": 222,
                    },
                    Rgb {
                      "b": 74,
                      "g": 106,
                      "opacity": 0.42,
                      "r": 251,
                    },
                    Rgb {
                      "b": 114,
                      "g": 146,
                      "opacity": 0.42,
                      "r": 252,
                    },
                    Rgb {
                      "b": 161,
                      "g": 187,
                      "opacity": 0.42,
                      "r": 252,
                    },
                    Object {
                      "b": 255,
                      "g": 255,
                      "opacity": 0,
                      "r": 255,
                    },
                    Rgb {
                      "b": 239,
                      "g": 219,
                      "opacity": 0.42,
                      "r": 198,
                    },
                    Rgb {
                      "b": 225,
                      "g": 202,
                      "opacity": 0.42,
                      "r": 158,
                    },
                    Rgb {
                      "b": 214,
                      "g": 174,
                      "opacity": 0.42,
                      "r": 107,
                    },
                    Rgb {
                      "b": 189,
                      "g": 130,
                      "opacity": 0.42,
                      "r": 49,
                    },
                    Rgb {
                      "b": 156,
                      "g": 81,
                      "opacity": 0.42,
                      "r": 8,
                    },
                  ]
                }
                min={-1998}
              >
                <div
                  className="Legend"
                >
                  <div
                    className="Legend-Item"
                    key="break-0"
                    style={
                      Object {
                        "backgroundColor": "rgba(165, 15, 21, 1)",
                        "color": "#fff",
                      }
                    }
                  >
                    -1,998 to -1,421
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-1"
                    style={
                      Object {
                        "backgroundColor": "rgba(222, 45, 38, 1)",
                        "color": "#fff",
                      }
                    }
                  >
                    -1,421 to -1,089
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-2"
                    style={
                      Object {
                        "backgroundColor": "rgba(251, 106, 74, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    -1,089 to -773
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-3"
                    style={
                      Object {
                        "backgroundColor": "rgba(252, 146, 114, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    -773 to -491
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-4"
                    style={
                      Object {
                        "backgroundColor": "rgba(252, 187, 161, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    -491 to -235
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-5"
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    -235 to 235 (transparent)
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-6"
                    style={
                      Object {
                        "backgroundColor": "rgba(198, 219, 239, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    235 to 491
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-7"
                    style={
                      Object {
                        "backgroundColor": "rgba(158, 202, 225, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    491 to 773
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-8"
                    style={
                      Object {
                        "backgroundColor": "rgba(107, 174, 214, 1)",
                        "color": "#000",
                      }
                    }
                  >
                    773 to 1,089
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-9"
                    style={
                      Object {
                        "backgroundColor": "rgba(49, 130, 189, 1)",
                        "color": "#fff",
                      }
                    }
                  >
                    1,089 to 1,421
                  </div>
                  <div
                    className="Legend-Item"
                    key="break-10"
                    style={
                      Object {
                        "backgroundColor": "rgba(8, 81, 156, 1)",
                        "color": "#fff",
                      }
                    }
                  >
                    1,421 to 1,994
                  </div>
                </div>
              </Legend>
            </div>
          </Group>
          <AggregationArea
            key=".4"
            mb={null}
            regionId="MOCK_REGION_ID"
          >
            <Group
              label="Aggregate results to"
            >
              <div
                className="form-group"
              >
                <label
                  className="control-label"
                  htmlFor="aggregate-results-to-input-3"
                >
                  Aggregate results to
                </label>
                <S
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isClearable={true}
                  isDisabled={false}
                  name="aggregateTo"
                  onChange={[Function]}
                  options={Array []}
                >
                  <ForwardRef(LoadableComponent)
                    getOptionLabel={[Function]}
                    getOptionValue={[Function]}
                    isClearable={true}
                    isDisabled={false}
                    name="aggregateTo"
                    onChange={[Function]}
                    options={Array []}
                    styles={
                      Object {
                        "control": [Function],
                        "option": [Function],
                      }
                    }
                  >
                    <ReactSelect
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      isClearable={true}
                      isDisabled={false}
                      name="aggregateTo"
                      onChange={[Function]}
                      options={Array []}
                      styles={
                        Object {
                          "control": [Function],
                          "option": [Function],
                        }
                      }
                    >
                      <div
                        className="ReactSelectMock"
                      />
                    </ReactSelect>
                  </ForwardRef(LoadableComponent)>
                </S>
              </div>
            </Group>
            <Group>
              <div
                className="form-group"
              >
                <Button
                  block={true}
                  onClick={[Function]}
                  size="sm"
                  style="info"
                >
                  <a
                    className="btn btn-info btn-block btn-sm"
                    href="#"
                    onClick={[Function]}
                    tabIndex={0}
                  >
                    Upload new aggregation area
                     
                    <Icon
                      icon={
                        Object {
                          "icon": Array [],
                          "iconName": "chevron-down",
                          "prefix": "fas",
                        }
                      }
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={true}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [],
                            "iconName": "chevron-down",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-chevron-down fa-w-NaN fa-fw "
                          data-icon="chevron-down"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 undefined undefined"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </Icon>
                  </a>
                </Button>
              </div>
            </Group>
          </AggregationArea>
        </div>
      </Box>
    </Flex>
  </Stack>
</RegionalResults>
`;
