name: Build, Test, Deploy

on: [pull_request, push]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          
      - if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --check-files
        
  codeLinter:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn lint
      - run: yarn check-format

  jestUnitTests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn jest
        env:
          CI: true
          
  nextBuild:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      
      # Cache the entire working directory
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}
        
      # Build the next.js app
      - run: yarn build
        env:
          API_URL: ${{ secrets.API_URL }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
          
      # TODO: Add build stats
  cypress:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}
          
       # Install the cypress binary
      - run: yarn run cypress install

      - uses: cypress-io/github-action@v1
        with:
          env: ${{ secrets.CYPRESS_GITHUB_ENV }}
          install: false
          start: yarn start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60

      - uses: actions/upload-artifact@v1
        with:
          name: cypress-screenshots
          path: cypress/screenshots
