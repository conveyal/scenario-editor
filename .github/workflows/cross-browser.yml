name: Nightly Cross-browser Integration Tests
# For now, run local tests on all browsers. Eventually, run tests on production.

on:
  pull_request:
    branches:
      - master # pull requests into the master branch, usually means from dev to master
  schedule:
    - cron: '0 0 * * 1,2,3,4,5' # every weekday at midnight

jobs:
  cypressCrossBrowserTests:
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    strategy:
      matrix:
        backend: [v5.9.0, dev-latest] # include the current production version
        browser: [chrome, firefox]

    runs-on: ubuntu-latest
    steps:
      # Install / cache dependencies with Cypress to handle caching Cypress binary.
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      # Build outside of Cypress's build command to enable caching the next.js cache folder
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - name: Next.js build
        run: yarn build
        env:
          NEXT_PUBLIC_BASEMAP_DISABLED: true
          NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}

      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        id: jar-cache
        with:
          path: ${{ github.workspace }}/${{ matrix.backend }}.jar
          key: analysis-backend-${{ matrix.backend }}

      - name: Download Analysis Backend
        if: steps.jar-cache.outputs.cache-hit != 'true'
        run: curl https://r5-builds.s3-eu-west-1.amazonaws.com/${{ matrix.backend }}.jar --output ${{ github.workspace }}/${{ matrix.backend }}.jar

      - uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          env: ${{ secrets.CYPRESS_GITHUB_ENV }}
          install: false
          spec: cypress/integration/local/all.js
          start: yarn action # runs frontend and java server together
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
