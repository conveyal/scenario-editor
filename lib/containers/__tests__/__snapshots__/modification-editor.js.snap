// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Container > Modification Editor render just the title if not loaded 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ModificationEditor)
    params={
      Object {
        "modificationId": "1234",
        "projectId": "1",
      }
    }
  >
    <ModificationEditor
      allVariants={
        Array [
          "Default",
        ]
      }
      clearActive={[Function]}
      copyModification={[Function]}
      feedIsLoaded={true}
      modification={
        Object {
          "_id": "1234",
          "accessGroup": "accessGroupName",
          "bidirectional": false,
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "description": "Mock description",
          "entries": Array [],
          "feed": "1",
          "name": "Test Modification",
          "nonce": "12345",
          "projectId": "1",
          "routes": Array [
            "route1",
          ],
          "segments": Array [
            {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
          ],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "_id": "timetable-id",
              "dwellTime": 10,
              "dwellTimes": Array [
                12,
              ],
              "endTime": 57600,
              "exactTimes": false,
              "friday": true,
              "headwaySecs": 900,
              "modificationId": "1234",
              "modificationName": "Test Modification",
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "phaseAtStop": "",
              "phaseFromStop": "",
              "phaseFromTimetable": "",
              "phaseSeconds": 300,
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            true,
          ],
        }
      }
      modificationId="1234"
      params={
        Object {
          "modificationId": "1234",
          "projectId": "1",
        }
      }
      projectId="1"
      removeModification={[Function]}
      setActive={[Function]}
      setActiveTrips={[Function]}
      setMapState={[Function]}
      update={[Function]}
      updateAndRetrieveFeedData={[Function]}
      updateLocally={[Function]}
    >
      <Application
        map={[Function]}
      >
        <div>
          <Connect(ErrorModal)>
            <ErrorModal
              clearError={[Function]}
            >
              <span />
            </ErrorModal>
          </Connect(ErrorModal)>
          <Connect(Sidebar)>
            <Sidebar
              currentPath="/"
              dispatch={[Function]}
              outstandingRequests={0}
              projectId="1"
              regionId="1"
            >
              <div
                className="Sidebar"
              >
                <div
                  className="Sidebar-logo"
                />
                <SidebarNavItem
                  href="/"
                  icon="globe"
                  text="Regions"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Regions"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="globe"
                            text="Regions"
                          >
                            <span>
                              <Icon
                                type="globe"
                              >
                                <i
                                  className="fa fa-globe fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Regions
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <div>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/edit"
                    icon="map-o"
                    text="Region Settings"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Region Settings"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/edit"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="map-o"
                              text="Region Settings"
                            >
                              <span>
                                <Icon
                                  type="map-o"
                                >
                                  <i
                                    className="fa fa-map-o fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Region Settings
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={
                      Array [
                        "/",
                      ]
                    }
                    href="/regions/1"
                    icon="cubes"
                    text="Projects"
                  >
                    <Tip
                      className="Sidebar-navItem active"
                      tip="Projects"
                    >
                      <span
                        className="Tip Sidebar-navItem active"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="cubes"
                              text="Projects"
                            >
                              <span>
                                <Icon
                                  type="cubes"
                                >
                                  <i
                                    className="fa fa-cubes fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Projects
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/bundles"
                    icon="database"
                    text="GTFS Bundles"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="GTFS Bundles"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/bundles"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="database"
                              text="GTFS Bundles"
                            >
                              <span>
                                <Icon
                                  type="database"
                                >
                                  <i
                                    className="fa fa-database fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  GTFS Bundles
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/opportunities"
                    icon="th"
                    text="Opportunity Datasets"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Opportunity Datasets"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/opportunities"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="th"
                              text="Opportunity Datasets"
                            >
                              <span>
                                <Icon
                                  type="th"
                                >
                                  <i
                                    className="fa fa-th fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Opportunity Datasets
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/projects/1"
                    icon="pencil"
                    text="Edit Modifications"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Edit Modifications"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/projects/1"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="pencil"
                              text="Edit Modifications"
                            >
                              <span>
                                <Icon
                                  type="pencil"
                                >
                                  <i
                                    className="fa fa-pencil fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Edit Modifications
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/analysis"
                    icon="area-chart"
                    text="Analyze"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Analyze"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/analysis"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="area-chart"
                              text="Analyze"
                            >
                              <span>
                                <Icon
                                  type="area-chart"
                                >
                                  <i
                                    className="fa fa-area-chart fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Analyze
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/regional"
                    icon="server"
                    text="Regional Analysis"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Regional Analysis"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/regional"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="server"
                              text="Regional Analysis"
                            >
                              <span>
                                <Icon
                                  type="server"
                                >
                                  <i
                                    className="fa fa-server fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Regional Analysis
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                </div>
                <div
                  className="Sidebar-bottom"
                >
                  <SidebarNavItem
                    href="http://docs.analysis.conveyal.com/"
                    icon="question-circle"
                    text="Help and Documentation"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Help and Documentation"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          href="http://docs.analysis.conveyal.com/"
                          target="_blank"
                        >
                          <ItemContents
                            icon="question-circle"
                            text="Help and Documentation"
                          >
                            <span>
                              <Icon
                                type="question-circle"
                              >
                                <i
                                  className="fa fa-question-circle fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Help and Documentation
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                </div>
              </div>
            </Sidebar>
          </Connect(Sidebar)>
          <div
            className="Fullscreen"
          >
            <Connect(Map)>
              <Map
                bounds={
                  Object {
                    "_northEast": Object {
                      "lat": 37.365,
                      "lng": -121.924,
                    },
                    "_southWest": Object {
                      "lat": 36.9707,
                      "lng": -122.0279,
                    },
                  }
                }
                center={
                  Object {
                    "lat": 38.8886,
                    "lon": -77.043,
                  }
                }
                dispatch={[Function]}
                maxBounds={
                  Object {
                    "_northEast": Object {
                      "lat": 90,
                      "lng": 200,
                    },
                    "_southWest": Object {
                      "lat": -90,
                      "lng": -200,
                    },
                  }
                }
                minZoom={2}
                tileUrl="mock.url/tile"
                zIndex={-10}
                zoom={12}
              >
                <Map
                  animate={false}
                  bounds={
                    Object {
                      "_northEast": Object {
                        "lat": 37.365,
                        "lng": -121.924,
                      },
                      "_southWest": Object {
                        "lat": 36.9707,
                        "lng": -122.0279,
                      },
                    }
                  }
                  center={
                    Object {
                      "lat": 38.8886,
                      "lon": -77.043,
                    }
                  }
                  maxBounds={
                    Object {
                      "_northEast": Object {
                        "lat": 90,
                        "lng": 200,
                      },
                      "_southWest": Object {
                        "lat": -90,
                        "lng": -200,
                      },
                    }
                  }
                  minZoom={2}
                  useFlyTo={false}
                  zoom={12}
                >
                  <div>
                    <TileLayer
                      attribution="<a href=\\"http://www.openstreetmap.org/copyright\\">OpenStreetMap</a> contributors, &copy; <a href='https://www.mapbox.com/about/maps/'>Mapbox</a>"
                      url="mock.url/tile"
                      zIndex={-10}
                    />
                    <g>
                      <LabelLayer>
                        <TileLayer
                          url="https://api.mapbox.com/v4/mapbox.light/{z}/{x}/{y}.png?access_token=your-access-token"
                          zIndex={40}
                        />
                      </LabelLayer>
                      <Connect(ModificationsMap)>
                        <ModificationsMap
                          activeModification={
                            Object {
                              "_id": "1234",
                              "accessGroup": "accessGroupName",
                              "bidirectional": false,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "description": "Mock description",
                              "entries": Array [],
                              "feed": "1",
                              "name": "Test Modification",
                              "nonce": "12345",
                              "projectId": "1",
                              "routes": Array [
                                "route1",
                              ],
                              "segments": Array [
                                {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                              ],
                              "showOnMap": false,
                              "timetables": Array [
                                Object {
                                  "_id": "timetable-id",
                                  "dwellTime": 10,
                                  "dwellTimes": Array [
                                    12,
                                  ],
                                  "endTime": 57600,
                                  "exactTimes": false,
                                  "friday": true,
                                  "headwaySecs": 900,
                                  "modificationId": "1234",
                                  "modificationName": "Test Modification",
                                  "monday": true,
                                  "name": "Test timetable",
                                  "patternTrips": Array [
                                    "abcd",
                                  ],
                                  "phaseAtStop": "",
                                  "phaseFromStop": "",
                                  "phaseFromTimetable": "",
                                  "phaseSeconds": 300,
                                  "saturday": false,
                                  "segmentSpeeds": Array [],
                                  "sourceTrip": "abcd",
                                  "startTime": 28800,
                                  "sunday": false,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                },
                              ],
                              "trips": Array [
                                "abcd",
                              ],
                              "type": "add-trip-pattern",
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variants": Array [
                                true,
                              ],
                            }
                          }
                          activeModificationFeed={
                            Object {
                              "checksum": "MOCK",
                              "id": "1",
                              "routes": Array [
                                Object {
                                  "label": "mock-route-label",
                                  "patterns": Array [
                                    Object {
                                      "geometry": Object {
                                        "coordinates": Array [
                                          Array [
                                            -122.0246,
                                            36.9707,
                                          ],
                                          Array [
                                            -122.0279,
                                            37.049,
                                          ],
                                          Array [
                                            -121.9799,
                                            37.2299,
                                          ],
                                          Array [
                                            -121.9445,
                                            37.324,
                                          ],
                                          Array [
                                            -121.936,
                                            37.353,
                                          ],
                                          Array [
                                            -121.924,
                                            37.365,
                                          ],
                                        ],
                                        "type": "LineString",
                                      },
                                      "name": "Mock Pattern",
                                      "pattern_id": "mock-pattern-id",
                                      "stops": Array [
                                        Object {
                                          "stop_id": "1",
                                          "stop_lat": 36.9707,
                                          "stop_lon": -122.0246,
                                          "stop_name": "Santa Cruz",
                                        },
                                        Object {
                                          "stop_id": "2",
                                          "stop_lat": 37.049,
                                          "stop_lon": -122.0279,
                                          "stop_name": "Scotts Valley",
                                        },
                                      ],
                                      "trips": Array [
                                        Object {
                                          "duration": 1234,
                                          "end_time": 13579,
                                          "start_time": 12345,
                                          "trip_headsign": "To Downtown",
                                          "trip_id": "abcd",
                                          "trip_short_name": "The Express",
                                        },
                                      ],
                                    },
                                  ],
                                  "route_id": "route1",
                                },
                              ],
                              "stops": Array [
                                Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              ],
                              "stopsById": Object {
                                "1": Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                "2": Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              },
                            }
                          }
                          bundleId="1"
                          centerLonLat={
                            Object {
                              "lat": 38.90124,
                              "lon": -77.015615,
                            }
                          }
                          feeds={
                            Array [
                              Object {
                                "checksum": "MOCK",
                                "id": "1",
                                "routes": Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ],
                                "stops": Array [
                                  Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                ],
                                "stopsById": Object {
                                  "1": Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  "2": Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                },
                              },
                            ]
                          }
                          feedsById={
                            Object {
                              "1": Object {
                                "checksum": "MOCK",
                                "id": "1",
                                "routes": Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ],
                                "stops": Array [
                                  Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                ],
                                "stopsById": Object {
                                  "1": Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  "2": Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                },
                              },
                            }
                          }
                          mapState={
                            Object {
                              "activeTrips": Array [],
                              "center": Object {
                                "lat": 38.8886,
                                "lon": -77.043,
                              },
                              "components": Array [],
                              "zoom": 12,
                            }
                          }
                          modificationsOnMap={
                            Array [
                              Object {
                                "_id": "1234",
                                "accessGroup": "accessGroupName",
                                "bidirectional": false,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "description": "Mock description",
                                "entries": Array [],
                                "feed": "1",
                                "name": "Test Modification",
                                "nonce": "12345",
                                "projectId": "1",
                                "routes": Array [
                                  "route1",
                                ],
                                "segments": Array [
                                  {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                ],
                                "showOnMap": false,
                                "timetables": Array [
                                  Object {
                                    "_id": "timetable-id",
                                    "dwellTime": 10,
                                    "dwellTimes": Array [
                                      12,
                                    ],
                                    "endTime": 57600,
                                    "exactTimes": false,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "modificationId": "1234",
                                    "modificationName": "Test Modification",
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "phaseAtStop": "",
                                    "phaseFromStop": "",
                                    "phaseFromTimetable": "",
                                    "phaseSeconds": 300,
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  },
                                ],
                                "trips": Array [
                                  "abcd",
                                ],
                                "type": "add-trip-pattern",
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variants": Array [
                                  true,
                                ],
                              },
                            ]
                          }
                          qualifiedStops={Array []}
                          setAndRetrieveData={[Function]}
                          setLocally={[Function]}
                          setMapState={[Function]}
                        >
                          <g>
                            <AddTripPatternLayer
                              bidirectional={false}
                              highlightSegment={-1}
                              highlightStop={null}
                              segments={
                                Array [
                                  {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                ]
                              }
                            >
                              <g>
                                <Polyline
                                  color="#2389c9"
                                  positions={
                                    Array [
                                      Object {
                                        "lat": 36.9707,
                                        "lng": -122.0246,
                                      },
                                      Object {
                                        "lat": 37.049,
                                        "lng": -122.0279,
                                      },
                                      Object {
                                        "lat": 37.2299,
                                        "lng": -121.9799,
                                      },
                                      Object {
                                        "lat": 37.324,
                                        "lng": -121.9445,
                                      },
                                      Object {
                                        "lat": 37.353,
                                        "lng": -121.936,
                                      },
                                      Object {
                                        "lat": 37.365,
                                        "lng": -121.924,
                                      },
                                    ]
                                  }
                                  weight={3}
                                />
                                <DirectionalMarkers
                                  color="#2389c9"
                                  patterns={
                                    Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                        },
                                      },
                                    ]
                                  }
                                />
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 0,
                                      "index": 0,
                                      "lat": 36.9707,
                                      "lon": -122.0246,
                                      "stopId": "1",
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 0,
                                          "index": 0,
                                          "lat": 36.9707,
                                          "lon": -122.0246,
                                          "stopId": "1",
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 3000,
                                      "index": 0,
                                      "lat": 36.99765592006801,
                                      "lon": -122.02573607325958,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 3000,
                                          "index": 0,
                                          "lat": 36.99765592006801,
                                          "lon": -122.02573607325958,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 6000,
                                      "index": 0,
                                      "lat": 37.02461184013602,
                                      "lon": -122.02687214651915,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 6000,
                                          "index": 0,
                                          "lat": 37.02461184013602,
                                          "lon": -122.02687214651915,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 9000,
                                      "index": 0,
                                      "lat": 37.05151359890414,
                                      "lon": -122.02723304175015,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 9000,
                                          "index": 0,
                                          "lat": 37.05151359890414,
                                          "lon": -122.02723304175015,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 12000,
                                      "index": 0,
                                      "lat": 37.07790094264308,
                                      "lon": -122.02023142483766,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 12000,
                                          "index": 0,
                                          "lat": 37.07790094264308,
                                          "lon": -122.02023142483766,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 15000,
                                      "index": 0,
                                      "lat": 37.10428828638203,
                                      "lon": -122.01322980792517,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 15000,
                                          "index": 0,
                                          "lat": 37.10428828638203,
                                          "lon": -122.01322980792517,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 18000,
                                      "index": 0,
                                      "lat": 37.13067563012098,
                                      "lon": -122.00622819101268,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 18000,
                                          "index": 0,
                                          "lat": 37.13067563012098,
                                          "lon": -122.00622819101268,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 21000,
                                      "index": 0,
                                      "lat": 37.15706297385993,
                                      "lon": -121.99922657410019,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 21000,
                                          "index": 0,
                                          "lat": 37.15706297385993,
                                          "lon": -121.99922657410019,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 24000,
                                      "index": 0,
                                      "lat": 37.183450317598876,
                                      "lon": -121.9922249571877,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 24000,
                                          "index": 0,
                                          "lat": 37.183450317598876,
                                          "lon": -121.9922249571877,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 27000,
                                      "index": 0,
                                      "lat": 37.20983766133782,
                                      "lon": -121.98522334027521,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 27000,
                                          "index": 0,
                                          "lat": 37.20983766133782,
                                          "lon": -121.98522334027521,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 30000,
                                      "index": 0,
                                      "lat": 37.23609341419046,
                                      "lon": -121.97757006522484,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 30000,
                                          "index": 0,
                                          "lat": 37.23609341419046,
                                          "lon": -121.97757006522484,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 33000,
                                      "index": 0,
                                      "lat": 37.261931772765294,
                                      "lon": -121.96784979005429,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 33000,
                                          "index": 0,
                                          "lat": 37.261931772765294,
                                          "lon": -121.96784979005429,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 36000,
                                      "index": 0,
                                      "lat": 37.28777013134013,
                                      "lon": -121.95812951488374,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 36000,
                                          "index": 0,
                                          "lat": 37.28777013134013,
                                          "lon": -121.95812951488374,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 39000,
                                      "index": 0,
                                      "lat": 37.31360848991497,
                                      "lon": -121.94840923971319,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 39000,
                                          "index": 0,
                                          "lat": 37.31360848991497,
                                          "lon": -121.94840923971319,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 42000,
                                      "index": 0,
                                      "lat": 37.339703323688006,
                                      "lon": -121.93989730167766,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 42000,
                                          "index": 0,
                                          "lat": 37.339703323688006,
                                          "lon": -121.93989730167766,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 45000,
                                      "index": 0,
                                      "lat": 37.36342593800434,
                                      "lon": -121.92557406199568,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 45000,
                                          "index": 0,
                                          "lat": 37.36342593800434,
                                          "lon": -121.92557406199568,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                              </g>
                            </AddTripPatternLayer>
                          </g>
                        </ModificationsMap>
                      </Connect(ModificationsMap)>
                    </g>
                  </div>
                </Map>
              </Map>
            </Connect(Map)>
          </div>
          <div
            className="ApplicationDock"
          >
            <Title>
              <div
                className="ApplicationDockTitle"
              >
                <IconLink
                  title="Modifications"
                  to="/regions/undefined/projects/1/modifications"
                  type="chevron-left"
                >
                  <Link
                    title="Modifications"
                    to="/regions/undefined/projects/1/modifications"
                    type="button"
                  >
                    <Tip
                      tip="Modifications"
                    >
                      <span
                        className="Tip "
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          name="Modifications"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/undefined/projects/1/modifications"
                          type="button"
                        >
                          <a
                            name="Modifications"
                            onClick={[Function]}
                            style={Object {}}
                            type="button"
                          >
                            <Icon
                              type="chevron-left"
                            >
                              <i
                                className="fa fa-chevron-left fa-fw "
                              />
                            </Icon>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
                Test Modification
                <IconLink
                  className="pull-right"
                  onClick={[Function]}
                  title="Delete modification"
                  type="trash"
                >
                  <Link
                    className="pull-right"
                    onClick={[Function]}
                    title="Delete modification"
                    type="button"
                  >
                    <Tip
                      className="pull-right"
                      tip="Delete modification"
                    >
                      <span
                        className="Tip pull-right"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          name="Delete modification"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <Icon
                            type="trash"
                          >
                            <i
                              className="fa fa-trash fa-fw "
                            />
                          </Icon>
                        </a>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
                <IconLink
                  className="pull-right"
                  onClick={[Function]}
                  title="Copy modification"
                  type="copy"
                >
                  <Link
                    className="pull-right"
                    onClick={[Function]}
                    title="Copy modification"
                    type="button"
                  >
                    <Tip
                      className="pull-right"
                      tip="Copy modification"
                    >
                      <span
                        className="Tip pull-right"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          name="Copy modification"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <Icon
                            type="copy"
                          >
                            <i
                              className="fa fa-copy fa-fw "
                            />
                          </Icon>
                        </a>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
                <IconLink
                  className="pull-right"
                  onClick={[Function]}
                  title="Edit modification name"
                  type="pencil"
                >
                  <Link
                    className="pull-right"
                    onClick={[Function]}
                    title="Edit modification name"
                    type="button"
                  >
                    <Tip
                      className="pull-right"
                      tip="Edit modification name"
                    >
                      <span
                        className="Tip pull-right"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          name="Edit modification name"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <Icon
                            type="pencil"
                          >
                            <i
                              className="fa fa-pencil fa-fw "
                            />
                          </Icon>
                        </a>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
              </div>
            </Title>
            <Dock>
              <InnerDock>
                <div
                  className="InnerDock "
                  style={
                    Object {
                      "height": 768,
                    }
                  }
                >
                  <div
                    className="block"
                  >
                    <div>
                      <TextArea
                        label="Description"
                        onChange={[Function]}
                        value="Mock description"
                      >
                        <Group
                          id="description-input-12"
                          label="Description"
                          onChange={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="description-input-12"
                            >
                              Description
                            </label>
                            <textarea
                              className="form-control"
                              id="description-input-12"
                              label="Description"
                              onChange={[Function]}
                            >
                              Mock description
                            </textarea>
                          </div>
                        </Group>
                      </TextArea>
                      <ModificationType
                        modification={
                          Object {
                            "_id": "1234",
                            "accessGroup": "accessGroupName",
                            "bidirectional": false,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "description": "Mock description",
                            "entries": Array [],
                            "feed": "1",
                            "name": "Test Modification",
                            "nonce": "12345",
                            "projectId": "1",
                            "routes": Array [
                              "route1",
                            ],
                            "segments": Array [
                              {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                            ],
                            "showOnMap": false,
                            "timetables": Array [
                              Object {
                                "_id": "timetable-id",
                                "dwellTime": 10,
                                "dwellTimes": Array [
                                  12,
                                ],
                                "endTime": 57600,
                                "exactTimes": false,
                                "friday": true,
                                "headwaySecs": 900,
                                "modificationId": "1234",
                                "modificationName": "Test Modification",
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "phaseAtStop": "",
                                "phaseFromStop": "",
                                "phaseFromTimetable": "",
                                "phaseSeconds": 300,
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              },
                            ],
                            "trips": Array [
                              "abcd",
                            ],
                            "type": "add-trip-pattern",
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variants": Array [
                              true,
                            ],
                          }
                        }
                        setMapState={[Function]}
                        type="add-trip-pattern"
                        update={[Function]}
                        updateAndRetrieveFeedData={[Function]}
                      >
                        <Connect(AddTripPattern)
                          modification={
                            Object {
                              "_id": "1234",
                              "accessGroup": "accessGroupName",
                              "bidirectional": false,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "description": "Mock description",
                              "entries": Array [],
                              "feed": "1",
                              "name": "Test Modification",
                              "nonce": "12345",
                              "projectId": "1",
                              "routes": Array [
                                "route1",
                              ],
                              "segments": Array [
                                {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                              ],
                              "showOnMap": false,
                              "timetables": Array [
                                Object {
                                  "_id": "timetable-id",
                                  "dwellTime": 10,
                                  "dwellTimes": Array [
                                    12,
                                  ],
                                  "endTime": 57600,
                                  "exactTimes": false,
                                  "friday": true,
                                  "headwaySecs": 900,
                                  "modificationId": "1234",
                                  "modificationName": "Test Modification",
                                  "monday": true,
                                  "name": "Test timetable",
                                  "patternTrips": Array [
                                    "abcd",
                                  ],
                                  "phaseAtStop": "",
                                  "phaseFromStop": "",
                                  "phaseFromTimetable": "",
                                  "phaseSeconds": 300,
                                  "saturday": false,
                                  "segmentSpeeds": Array [],
                                  "sourceTrip": "abcd",
                                  "startTime": 28800,
                                  "sunday": false,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                },
                              ],
                              "trips": Array [
                                "abcd",
                              ],
                              "type": "add-trip-pattern",
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variants": Array [
                                true,
                              ],
                            }
                          }
                          setMapState={[Function]}
                          type="add-trip-pattern"
                          update={[Function]}
                          updateAndRetrieveFeedData={[Function]}
                        >
                          <AddTripPattern
                            allPhaseFromTimetableStops={Object {}}
                            dispatch={[Function]}
                            extendFromEnd={true}
                            gtfsStops={
                              Array [
                                Object {
                                  "stop_id": "1:undefined",
                                },
                              ]
                            }
                            mapState={
                              Object {
                                "activeTrips": Array [],
                                "center": Object {
                                  "lat": 38.8886,
                                  "lon": -77.043,
                                },
                                "components": Array [],
                                "zoom": 12,
                              }
                            }
                            modification={
                              Object {
                                "_id": "1234",
                                "accessGroup": "accessGroupName",
                                "bidirectional": false,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "description": "Mock description",
                                "entries": Array [],
                                "feed": "1",
                                "name": "Test Modification",
                                "nonce": "12345",
                                "projectId": "1",
                                "routes": Array [
                                  "route1",
                                ],
                                "segments": Array [
                                  {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                ],
                                "showOnMap": false,
                                "timetables": Array [
                                  Object {
                                    "_id": "timetable-id",
                                    "dwellTime": 10,
                                    "dwellTimes": Array [
                                      12,
                                    ],
                                    "endTime": 57600,
                                    "exactTimes": false,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "modificationId": "1234",
                                    "modificationName": "Test Modification",
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "phaseAtStop": "",
                                    "phaseFromStop": "",
                                    "phaseFromTimetable": "",
                                    "phaseSeconds": 300,
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  },
                                ],
                                "trips": Array [
                                  "abcd",
                                ],
                                "type": "add-trip-pattern",
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variants": Array [
                                  true,
                                ],
                              }
                            }
                            numberOfStops={16}
                            projectTimetables={Array []}
                            qualifiedStops={Array []}
                            segmentDistances={
                              Array [
                                45.22365292770072,
                              ]
                            }
                            setMapState={[Function]}
                            type="add-trip-pattern"
                            update={[Function]}
                            updateAndRetrieveFeedData={[Function]}
                          >
                            <div>
                              <EditAlignment
                                disabled={false}
                                extendFromEnd={true}
                                mapState={
                                  Object {
                                    "activeTrips": Array [],
                                    "center": Object {
                                      "lat": 38.8886,
                                      "lon": -77.043,
                                    },
                                    "components": Array [],
                                    "zoom": 12,
                                  }
                                }
                                modification={
                                  Object {
                                    "_id": "1234",
                                    "accessGroup": "accessGroupName",
                                    "bidirectional": false,
                                    "createdAt": "2017-11-08T12:30:50.133Z",
                                    "createdBy": "person@gmail.com",
                                    "description": "Mock description",
                                    "entries": Array [],
                                    "feed": "1",
                                    "name": "Test Modification",
                                    "nonce": "12345",
                                    "projectId": "1",
                                    "routes": Array [
                                      "route1",
                                    ],
                                    "segments": Array [
                                      {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                    ],
                                    "showOnMap": false,
                                    "timetables": Array [
                                      Object {
                                        "_id": "timetable-id",
                                        "dwellTime": 10,
                                        "dwellTimes": Array [
                                          12,
                                        ],
                                        "endTime": 57600,
                                        "exactTimes": false,
                                        "friday": true,
                                        "headwaySecs": 900,
                                        "modificationId": "1234",
                                        "modificationName": "Test Modification",
                                        "monday": true,
                                        "name": "Test timetable",
                                        "patternTrips": Array [
                                          "abcd",
                                        ],
                                        "phaseAtStop": "",
                                        "phaseFromStop": "",
                                        "phaseFromTimetable": "",
                                        "phaseSeconds": 300,
                                        "saturday": false,
                                        "segmentSpeeds": Array [],
                                        "sourceTrip": "abcd",
                                        "startTime": 28800,
                                        "sunday": false,
                                        "thursday": true,
                                        "tuesday": true,
                                        "wednesday": true,
                                      },
                                    ],
                                    "trips": Array [
                                      "abcd",
                                    ],
                                    "type": "add-trip-pattern",
                                    "updatedAt": "2017-11-08T12:31:19.602Z",
                                    "updatedBy": "person@gmail.com",
                                    "variants": Array [
                                      true,
                                    ],
                                  }
                                }
                                numberOfStops={16}
                                segmentDistances={
                                  Array [
                                    45.22365292770072,
                                  ]
                                }
                                setMapState={[Function]}
                                update={[Function]}
                              >
                                <div>
                                  <h5>
                                    Route Geometry
                                  </h5>
                                  <p>
                                    16 stops over 45.22 km
                                  </p>
                                  <p>
                                    <Button
                                      block={true}
                                      disabled={false}
                                      onClick={[Function]}
                                      style="warning"
                                    >
                                      <a
                                        className="btn btn-warning btn-block"
                                        disabled={false}
                                        href="#"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="pencil"
                                        >
                                          <i
                                            className="fa fa-pencil fa-fw "
                                          />
                                        </Icon>
                                         
                                        Edit route geometry
                                      </a>
                                    </Button>
                                  </p>
                                  <Checkbox
                                    defaultChecked={true}
                                    label="Auto-create stops"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="auto-create-stops-input-13"
                                      >
                                        <input
                                          defaultChecked={true}
                                          id="auto-create-stops-input-13"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Auto-create stops
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Number
                                    label="Stop spacing (minimum is 50)"
                                    onChange={[Function]}
                                    units="meters"
                                    value={3000}
                                  >
                                    <Group
                                      id="stop-spacing-minimum-is-50-input-14"
                                      label="Stop spacing (minimum is 50)"
                                      onChange={[Function]}
                                      units="meters"
                                      value={3000}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="stop-spacing-minimum-is-50-input-14"
                                        >
                                          Stop spacing (minimum is 50)
                                        </label>
                                        <Input
                                          id="stop-spacing-minimum-is-50-input-14"
                                          label="Stop spacing (minimum is 50)"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="meters"
                                          value={3000}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="stop-spacing-minimum-is-50-input-14"
                                              min={0}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="meters"
                                              type="number"
                                              value={3000}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              meters
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Checkbox
                                    checked={false}
                                    disabled={true}
                                    label="Bidirectional"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="bidirectional-input-15"
                                      >
                                        <input
                                          checked={false}
                                          disabled={true}
                                          id="bidirectional-input-15"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Bidirectional
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <div
                                    className="alert alert-info"
                                    role="alert"
                                  >
                                    Modification cannot be bidirectional because timetables in this modification have phasing information.
                                  </div>
                                </div>
                              </EditAlignment>
                              <Timetables
                                allPhaseFromTimetableStops={Object {}}
                                bidirectional={false}
                                modificationStops={
                                  Array [
                                    Object {
                                      "stop_id": "1:undefined",
                                    },
                                  ]
                                }
                                numberOfStops={16}
                                projectTimetables={Array []}
                                qualifiedStops={Array []}
                                segmentDistances={
                                  Array [
                                    45.22365292770072,
                                  ]
                                }
                                setMapState={[Function]}
                                timetables={
                                  Array [
                                    Object {
                                      "_id": "timetable-id",
                                      "dwellTime": 10,
                                      "dwellTimes": Array [
                                        12,
                                      ],
                                      "endTime": 57600,
                                      "exactTimes": false,
                                      "friday": true,
                                      "headwaySecs": 900,
                                      "modificationId": "1234",
                                      "modificationName": "Test Modification",
                                      "monday": true,
                                      "name": "Test timetable",
                                      "patternTrips": Array [
                                        "abcd",
                                      ],
                                      "phaseAtStop": "",
                                      "phaseFromStop": "",
                                      "phaseFromTimetable": "",
                                      "phaseSeconds": 300,
                                      "saturday": false,
                                      "segmentSpeeds": Array [],
                                      "sourceTrip": "abcd",
                                      "startTime": 28800,
                                      "sunday": false,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                    },
                                  ]
                                }
                                update={[Function]}
                              >
                                <div>
                                  <h5>
                                    Timetables (
                                    1
                                    )
                                  </h5>
                                  <p>
                                    <Button
                                      block={true}
                                      onClick={[Function]}
                                      style="success"
                                    >
                                      <a
                                        className="btn btn-success btn-block"
                                        href="#"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="plus"
                                        >
                                          <i
                                            className="fa fa-plus fa-fw "
                                          />
                                        </Icon>
                                         Add timetable
                                      </a>
                                    </Button>
                                  </p>
                                  <p>
                                    <Button
                                      block={true}
                                      onClick={[Function]}
                                      style="success"
                                    >
                                      <a
                                        className="btn btn-success btn-block"
                                        href="#"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="plus"
                                        >
                                          <i
                                            className="fa fa-plus fa-fw "
                                          />
                                        </Icon>
                                         Copy timetable
                                      </a>
                                    </Button>
                                  </p>
                                  <TimetableComponent
                                    allPhaseFromTimetableStops={Object {}}
                                    bidirectional={false}
                                    modificationStops={
                                      Array [
                                        Object {
                                          "stop_id": "1:undefined",
                                        },
                                      ]
                                    }
                                    numberOfStops={16}
                                    projectTimetables={Array []}
                                    qualifiedStops={Array []}
                                    remove={[Function]}
                                    segmentDistances={
                                      Array [
                                        45.22365292770072,
                                      ]
                                    }
                                    setMapState={[Function]}
                                    timetable={
                                      Object {
                                        "_id": "timetable-id",
                                        "dwellTime": 10,
                                        "dwellTimes": Array [
                                          12,
                                        ],
                                        "endTime": 57600,
                                        "exactTimes": false,
                                        "friday": true,
                                        "headwaySecs": 900,
                                        "modificationId": "1234",
                                        "modificationName": "Test Modification",
                                        "monday": true,
                                        "name": "Test timetable",
                                        "patternTrips": Array [
                                          "abcd",
                                        ],
                                        "phaseAtStop": "",
                                        "phaseFromStop": "",
                                        "phaseFromTimetable": "",
                                        "phaseSeconds": 300,
                                        "saturday": false,
                                        "segmentSpeeds": Array [],
                                        "sourceTrip": "abcd",
                                        "startTime": 28800,
                                        "sunday": false,
                                        "thursday": true,
                                        "tuesday": true,
                                        "wednesday": true,
                                      }
                                    }
                                    update={[Function]}
                                  >
                                    <section
                                      className="panel panel-default inner-panel"
                                    >
                                      <a
                                        className="panel-heading clearfix"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="calendar"
                                        >
                                          <i
                                            className="fa fa-calendar fa-fw "
                                          />
                                        </Icon>
                                        <strong>
                                           
                                          Test timetable
                                        </strong>
                                        <Icon
                                          className="pull-right"
                                          type="caret-right"
                                        >
                                          <i
                                            className="fa fa-caret-right fa-fw pull-right"
                                          />
                                        </Icon>
                                      </a>
                                    </section>
                                  </TimetableComponent>
                                </div>
                              </Timetables>
                            </div>
                          </AddTripPattern>
                        </Connect(AddTripPattern)>
                      </ModificationType>
                      <Variants
                        activeVariants={
                          Array [
                            true,
                          ]
                        }
                        allVariants={
                          Array [
                            "Default",
                          ]
                        }
                        modificationId="1234"
                        setVariant={[Function]}
                      >
                        <div>
                          <h5>
                            Active in scenario numbers
                          </h5>
                          <div
                            className="form-inline"
                          >
                            <Checkbox
                              checked={true}
                              label={1}
                              onChange={[Function]}
                              title="Default"
                            >
                              <div
                                className="checkbox"
                              >
                                <label
                                  htmlFor="1-input-16"
                                >
                                  <input
                                    checked={true}
                                    id="1-input-16"
                                    onChange={[Function]}
                                    title="Default"
                                    type="checkbox"
                                  />
                                   
                                  1
                                </label>
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                      </Variants>
                    </div>
                  </div>
                </div>
              </InnerDock>
            </Dock>
          </div>
        </div>
      </Application>
    </ModificationEditor>
  </Connect(ModificationEditor)>
</Provider>
`;

exports[`Container > Modification Editor renders and can change the name 1`] = `
Array [
  Object {
    "payload": "1234",
    "type": "set active modification",
  },
  Object {
    "payload": Object {
      "_id": "1234",
      "accessGroup": "accessGroupName",
      "bidirectional": false,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "description": "Mock description",
      "entries": Array [],
      "feed": "1",
      "name": "Test Modification",
      "nonce": "12345",
      "projectId": "1",
      "routes": Array [
        "route1",
      ],
      "segments": Array [
        {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
      ],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "_id": "timetable-id",
          "dwellTime": 10,
          "dwellTimes": Array [
            12,
          ],
          "endTime": 57600,
          "exactTimes": false,
          "friday": true,
          "headwaySecs": 900,
          "modificationId": "1234",
          "modificationName": "Test Modification",
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "phaseAtStop": "",
          "phaseFromStop": "",
          "phaseFromTimetable": "",
          "phaseSeconds": 300,
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variants": Array [
        true,
      ],
    },
    "type": "set modification",
  },
]
`;

exports[`Container > Modification Editor renders correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ModificationEditor)
    params={
      Object {
        "modificationId": "1234",
        "projectId": "1",
      }
    }
  >
    <ModificationEditor
      allVariants={
        Array [
          "Default",
        ]
      }
      clearActive={[Function]}
      copyModification={[Function]}
      feedIsLoaded={true}
      modification={
        Object {
          "_id": "1234",
          "accessGroup": "accessGroupName",
          "bidirectional": false,
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "description": "Mock description",
          "entries": Array [],
          "feed": "1",
          "name": "Test Modification",
          "nonce": "12345",
          "projectId": "1",
          "routes": Array [
            "route1",
          ],
          "segments": Array [
            {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
          ],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "_id": "timetable-id",
              "dwellTime": 10,
              "dwellTimes": Array [
                12,
              ],
              "endTime": 57600,
              "exactTimes": false,
              "friday": true,
              "headwaySecs": 900,
              "modificationId": "1234",
              "modificationName": "Test Modification",
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "phaseAtStop": "",
              "phaseFromStop": "",
              "phaseFromTimetable": "",
              "phaseSeconds": 300,
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            true,
          ],
        }
      }
      modificationId="1234"
      params={
        Object {
          "modificationId": "1234",
          "projectId": "1",
        }
      }
      projectId="1"
      removeModification={[Function]}
      setActive={[Function]}
      setActiveTrips={[Function]}
      setMapState={[Function]}
      update={[Function]}
      updateAndRetrieveFeedData={[Function]}
      updateLocally={[Function]}
    >
      <Application
        map={[Function]}
      >
        <div>
          <Connect(ErrorModal)>
            <ErrorModal
              clearError={[Function]}
            >
              <span />
            </ErrorModal>
          </Connect(ErrorModal)>
          <Connect(Sidebar)>
            <Sidebar
              currentPath="/"
              dispatch={[Function]}
              outstandingRequests={0}
              projectId="1"
              regionId="1"
            >
              <div
                className="Sidebar"
              >
                <div
                  className="Sidebar-logo"
                />
                <SidebarNavItem
                  href="/"
                  icon="globe"
                  text="Regions"
                >
                  <Tip
                    className="Sidebar-navItem"
                    tip="Regions"
                  >
                    <span
                      className="Tip Sidebar-navItem"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        className="Sidebar-navItem-contents"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/"
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <ItemContents
                            icon="globe"
                            text="Regions"
                          >
                            <span>
                              <Icon
                                type="globe"
                              >
                                <i
                                  className="fa fa-globe fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Regions
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </Link>
                    </span>
                  </Tip>
                </SidebarNavItem>
                <div>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/edit"
                    icon="map-o"
                    text="Region Settings"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Region Settings"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/edit"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="map-o"
                              text="Region Settings"
                            >
                              <span>
                                <Icon
                                  type="map-o"
                                >
                                  <i
                                    className="fa fa-map-o fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Region Settings
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={
                      Array [
                        "/",
                      ]
                    }
                    href="/regions/1"
                    icon="cubes"
                    text="Projects"
                  >
                    <Tip
                      className="Sidebar-navItem active"
                      tip="Projects"
                    >
                      <span
                        className="Tip Sidebar-navItem active"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="cubes"
                              text="Projects"
                            >
                              <span>
                                <Icon
                                  type="cubes"
                                >
                                  <i
                                    className="fa fa-cubes fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Projects
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/bundles"
                    icon="database"
                    text="GTFS Bundles"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="GTFS Bundles"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/bundles"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="database"
                              text="GTFS Bundles"
                            >
                              <span>
                                <Icon
                                  type="database"
                                >
                                  <i
                                    className="fa fa-database fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  GTFS Bundles
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/opportunities"
                    icon="th"
                    text="Opportunity Datasets"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Opportunity Datasets"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/opportunities"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="th"
                              text="Opportunity Datasets"
                            >
                              <span>
                                <Icon
                                  type="th"
                                >
                                  <i
                                    className="fa fa-th fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Opportunity Datasets
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/projects/1"
                    icon="pencil"
                    text="Edit Modifications"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Edit Modifications"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/projects/1"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="pencil"
                              text="Edit Modifications"
                            >
                              <span>
                                <Icon
                                  type="pencil"
                                >
                                  <i
                                    className="fa fa-pencil fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Edit Modifications
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/analysis"
                    icon="area-chart"
                    text="Analyze"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Analyze"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/analysis"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="area-chart"
                              text="Analyze"
                            >
                              <span>
                                <Icon
                                  type="area-chart"
                                >
                                  <i
                                    className="fa fa-area-chart fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Analyze
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                  <SidebarNavItem
                    active={null}
                    href="/regions/1/regional"
                    icon="server"
                    text="Regional Analysis"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Regional Analysis"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          className="Sidebar-navItem-contents"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/1/regional"
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <ItemContents
                              icon="server"
                              text="Regional Analysis"
                            >
                              <span>
                                <Icon
                                  type="server"
                                >
                                  <i
                                    className="fa fa-server fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Regional Analysis
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                </div>
                <div
                  className="Sidebar-bottom"
                >
                  <SidebarNavItem
                    href="http://docs.analysis.conveyal.com/"
                    icon="question-circle"
                    text="Help and Documentation"
                  >
                    <Tip
                      className="Sidebar-navItem"
                      tip="Help and Documentation"
                    >
                      <span
                        className="Tip Sidebar-navItem"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          className="Sidebar-navItem-contents"
                          href="http://docs.analysis.conveyal.com/"
                          target="_blank"
                        >
                          <ItemContents
                            icon="question-circle"
                            text="Help and Documentation"
                          >
                            <span>
                              <Icon
                                type="question-circle"
                              >
                                <i
                                  className="fa fa-question-circle fa-fw "
                                />
                              </Icon>
                              <span
                                className="Sidebar-navItem-text"
                              >
                                 
                                Help and Documentation
                              </span>
                            </span>
                          </ItemContents>
                        </a>
                      </span>
                    </Tip>
                  </SidebarNavItem>
                </div>
              </div>
            </Sidebar>
          </Connect(Sidebar)>
          <div
            className="Fullscreen"
          >
            <Connect(Map)>
              <Map
                bounds={
                  Object {
                    "_northEast": Object {
                      "lat": 37.365,
                      "lng": -121.924,
                    },
                    "_southWest": Object {
                      "lat": 36.9707,
                      "lng": -122.0279,
                    },
                  }
                }
                center={
                  Object {
                    "lat": 38.8886,
                    "lon": -77.043,
                  }
                }
                dispatch={[Function]}
                maxBounds={
                  Object {
                    "_northEast": Object {
                      "lat": 90,
                      "lng": 200,
                    },
                    "_southWest": Object {
                      "lat": -90,
                      "lng": -200,
                    },
                  }
                }
                minZoom={2}
                tileUrl="mock.url/tile"
                zIndex={-10}
                zoom={12}
              >
                <Map
                  animate={false}
                  bounds={
                    Object {
                      "_northEast": Object {
                        "lat": 37.365,
                        "lng": -121.924,
                      },
                      "_southWest": Object {
                        "lat": 36.9707,
                        "lng": -122.0279,
                      },
                    }
                  }
                  center={
                    Object {
                      "lat": 38.8886,
                      "lon": -77.043,
                    }
                  }
                  maxBounds={
                    Object {
                      "_northEast": Object {
                        "lat": 90,
                        "lng": 200,
                      },
                      "_southWest": Object {
                        "lat": -90,
                        "lng": -200,
                      },
                    }
                  }
                  minZoom={2}
                  useFlyTo={false}
                  zoom={12}
                >
                  <div>
                    <TileLayer
                      attribution="<a href=\\"http://www.openstreetmap.org/copyright\\">OpenStreetMap</a> contributors, &copy; <a href='https://www.mapbox.com/about/maps/'>Mapbox</a>"
                      url="mock.url/tile"
                      zIndex={-10}
                    />
                    <g>
                      <LabelLayer>
                        <TileLayer
                          url="https://api.mapbox.com/v4/mapbox.light/{z}/{x}/{y}.png?access_token=your-access-token"
                          zIndex={40}
                        />
                      </LabelLayer>
                      <Connect(ModificationsMap)>
                        <ModificationsMap
                          activeModification={
                            Object {
                              "_id": "1234",
                              "accessGroup": "accessGroupName",
                              "bidirectional": false,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "description": "Mock description",
                              "entries": Array [],
                              "feed": "1",
                              "name": "Test Modification",
                              "nonce": "12345",
                              "projectId": "1",
                              "routes": Array [
                                "route1",
                              ],
                              "segments": Array [
                                {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                              ],
                              "showOnMap": false,
                              "timetables": Array [
                                Object {
                                  "_id": "timetable-id",
                                  "dwellTime": 10,
                                  "dwellTimes": Array [
                                    12,
                                  ],
                                  "endTime": 57600,
                                  "exactTimes": false,
                                  "friday": true,
                                  "headwaySecs": 900,
                                  "modificationId": "1234",
                                  "modificationName": "Test Modification",
                                  "monday": true,
                                  "name": "Test timetable",
                                  "patternTrips": Array [
                                    "abcd",
                                  ],
                                  "phaseAtStop": "",
                                  "phaseFromStop": "",
                                  "phaseFromTimetable": "",
                                  "phaseSeconds": 300,
                                  "saturday": false,
                                  "segmentSpeeds": Array [],
                                  "sourceTrip": "abcd",
                                  "startTime": 28800,
                                  "sunday": false,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                },
                              ],
                              "trips": Array [
                                "abcd",
                              ],
                              "type": "add-trip-pattern",
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variants": Array [
                                true,
                              ],
                            }
                          }
                          activeModificationFeed={
                            Object {
                              "checksum": "MOCK",
                              "id": "1",
                              "routes": Array [
                                Object {
                                  "label": "mock-route-label",
                                  "patterns": Array [
                                    Object {
                                      "geometry": Object {
                                        "coordinates": Array [
                                          Array [
                                            -122.0246,
                                            36.9707,
                                          ],
                                          Array [
                                            -122.0279,
                                            37.049,
                                          ],
                                          Array [
                                            -121.9799,
                                            37.2299,
                                          ],
                                          Array [
                                            -121.9445,
                                            37.324,
                                          ],
                                          Array [
                                            -121.936,
                                            37.353,
                                          ],
                                          Array [
                                            -121.924,
                                            37.365,
                                          ],
                                        ],
                                        "type": "LineString",
                                      },
                                      "name": "Mock Pattern",
                                      "pattern_id": "mock-pattern-id",
                                      "stops": Array [
                                        Object {
                                          "stop_id": "1",
                                          "stop_lat": 36.9707,
                                          "stop_lon": -122.0246,
                                          "stop_name": "Santa Cruz",
                                        },
                                        Object {
                                          "stop_id": "2",
                                          "stop_lat": 37.049,
                                          "stop_lon": -122.0279,
                                          "stop_name": "Scotts Valley",
                                        },
                                      ],
                                      "trips": Array [
                                        Object {
                                          "duration": 1234,
                                          "end_time": 13579,
                                          "start_time": 12345,
                                          "trip_headsign": "To Downtown",
                                          "trip_id": "abcd",
                                          "trip_short_name": "The Express",
                                        },
                                      ],
                                    },
                                  ],
                                  "route_id": "route1",
                                },
                              ],
                              "stops": Array [
                                Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              ],
                              "stopsById": Object {
                                "1": Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                "2": Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              },
                            }
                          }
                          bundleId="1"
                          centerLonLat={
                            Object {
                              "lat": 38.90124,
                              "lon": -77.015615,
                            }
                          }
                          feeds={
                            Array [
                              Object {
                                "checksum": "MOCK",
                                "id": "1",
                                "routes": Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ],
                                "stops": Array [
                                  Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                ],
                                "stopsById": Object {
                                  "1": Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  "2": Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                },
                              },
                            ]
                          }
                          feedsById={
                            Object {
                              "1": Object {
                                "checksum": "MOCK",
                                "id": "1",
                                "routes": Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ],
                                "stops": Array [
                                  Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                ],
                                "stopsById": Object {
                                  "1": Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  "2": Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                },
                              },
                            }
                          }
                          mapState={
                            Object {
                              "activeTrips": Array [],
                              "center": Object {
                                "lat": 38.8886,
                                "lon": -77.043,
                              },
                              "components": Array [],
                              "zoom": 12,
                            }
                          }
                          modificationsOnMap={
                            Array [
                              Object {
                                "_id": "1234",
                                "accessGroup": "accessGroupName",
                                "bidirectional": false,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "description": "Mock description",
                                "entries": Array [],
                                "feed": "1",
                                "name": "Test Modification",
                                "nonce": "12345",
                                "projectId": "1",
                                "routes": Array [
                                  "route1",
                                ],
                                "segments": Array [
                                  {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                ],
                                "showOnMap": false,
                                "timetables": Array [
                                  Object {
                                    "_id": "timetable-id",
                                    "dwellTime": 10,
                                    "dwellTimes": Array [
                                      12,
                                    ],
                                    "endTime": 57600,
                                    "exactTimes": false,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "modificationId": "1234",
                                    "modificationName": "Test Modification",
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "phaseAtStop": "",
                                    "phaseFromStop": "",
                                    "phaseFromTimetable": "",
                                    "phaseSeconds": 300,
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  },
                                ],
                                "trips": Array [
                                  "abcd",
                                ],
                                "type": "add-trip-pattern",
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variants": Array [
                                  true,
                                ],
                              },
                            ]
                          }
                          qualifiedStops={Array []}
                          setAndRetrieveData={[Function]}
                          setLocally={[Function]}
                          setMapState={[Function]}
                        >
                          <g>
                            <AddTripPatternLayer
                              bidirectional={false}
                              highlightSegment={-1}
                              highlightStop={null}
                              segments={
                                Array [
                                  {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                ]
                              }
                            >
                              <g>
                                <Polyline
                                  color="#2389c9"
                                  positions={
                                    Array [
                                      Object {
                                        "lat": 36.9707,
                                        "lng": -122.0246,
                                      },
                                      Object {
                                        "lat": 37.049,
                                        "lng": -122.0279,
                                      },
                                      Object {
                                        "lat": 37.2299,
                                        "lng": -121.9799,
                                      },
                                      Object {
                                        "lat": 37.324,
                                        "lng": -121.9445,
                                      },
                                      Object {
                                        "lat": 37.353,
                                        "lng": -121.936,
                                      },
                                      Object {
                                        "lat": 37.365,
                                        "lng": -121.924,
                                      },
                                    ]
                                  }
                                  weight={3}
                                />
                                <DirectionalMarkers
                                  color="#2389c9"
                                  patterns={
                                    Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                        },
                                      },
                                    ]
                                  }
                                />
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 0,
                                      "index": 0,
                                      "lat": 36.9707,
                                      "lon": -122.0246,
                                      "stopId": "1",
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 0,
                                          "index": 0,
                                          "lat": 36.9707,
                                          "lon": -122.0246,
                                          "stopId": "1",
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 3000,
                                      "index": 0,
                                      "lat": 36.99765592006801,
                                      "lon": -122.02573607325958,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 3000,
                                          "index": 0,
                                          "lat": 36.99765592006801,
                                          "lon": -122.02573607325958,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 6000,
                                      "index": 0,
                                      "lat": 37.02461184013602,
                                      "lon": -122.02687214651915,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 6000,
                                          "index": 0,
                                          "lat": 37.02461184013602,
                                          "lon": -122.02687214651915,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 9000,
                                      "index": 0,
                                      "lat": 37.05151359890414,
                                      "lon": -122.02723304175015,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 9000,
                                          "index": 0,
                                          "lat": 37.05151359890414,
                                          "lon": -122.02723304175015,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 12000,
                                      "index": 0,
                                      "lat": 37.07790094264308,
                                      "lon": -122.02023142483766,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 12000,
                                          "index": 0,
                                          "lat": 37.07790094264308,
                                          "lon": -122.02023142483766,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 15000,
                                      "index": 0,
                                      "lat": 37.10428828638203,
                                      "lon": -122.01322980792517,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 15000,
                                          "index": 0,
                                          "lat": 37.10428828638203,
                                          "lon": -122.01322980792517,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 18000,
                                      "index": 0,
                                      "lat": 37.13067563012098,
                                      "lon": -122.00622819101268,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 18000,
                                          "index": 0,
                                          "lat": 37.13067563012098,
                                          "lon": -122.00622819101268,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 21000,
                                      "index": 0,
                                      "lat": 37.15706297385993,
                                      "lon": -121.99922657410019,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 21000,
                                          "index": 0,
                                          "lat": 37.15706297385993,
                                          "lon": -121.99922657410019,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 24000,
                                      "index": 0,
                                      "lat": 37.183450317598876,
                                      "lon": -121.9922249571877,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 24000,
                                          "index": 0,
                                          "lat": 37.183450317598876,
                                          "lon": -121.9922249571877,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 27000,
                                      "index": 0,
                                      "lat": 37.20983766133782,
                                      "lon": -121.98522334027521,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 27000,
                                          "index": 0,
                                          "lat": 37.20983766133782,
                                          "lon": -121.98522334027521,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 30000,
                                      "index": 0,
                                      "lat": 37.23609341419046,
                                      "lon": -121.97757006522484,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 30000,
                                          "index": 0,
                                          "lat": 37.23609341419046,
                                          "lon": -121.97757006522484,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 33000,
                                      "index": 0,
                                      "lat": 37.261931772765294,
                                      "lon": -121.96784979005429,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 33000,
                                          "index": 0,
                                          "lat": 37.261931772765294,
                                          "lon": -121.96784979005429,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 36000,
                                      "index": 0,
                                      "lat": 37.28777013134013,
                                      "lon": -121.95812951488374,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 36000,
                                          "index": 0,
                                          "lat": 37.28777013134013,
                                          "lon": -121.95812951488374,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 39000,
                                      "index": 0,
                                      "lat": 37.31360848991497,
                                      "lon": -121.94840923971319,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 39000,
                                          "index": 0,
                                          "lat": 37.31360848991497,
                                          "lon": -121.94840923971319,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 42000,
                                      "index": 0,
                                      "lat": 37.339703323688006,
                                      "lon": -121.93989730167766,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 42000,
                                          "index": 0,
                                          "lat": 37.339703323688006,
                                          "lon": -121.93989730167766,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                                <Marker
                                  position={
                                    Object {
                                      "autoCreated": true,
                                      "distanceFromStart": 45000,
                                      "index": 0,
                                      "lat": 37.36342593800434,
                                      "lon": -121.92557406199568,
                                      "stopId": undefined,
                                    }
                                  }
                                >
                                  <g
                                    data-props={
                                      Object {
                                        "icon": undefined,
                                        "position": Object {
                                          "autoCreated": true,
                                          "distanceFromStart": 45000,
                                          "index": 0,
                                          "lat": 37.36342593800434,
                                          "lon": -121.92557406199568,
                                          "stopId": undefined,
                                        },
                                      }
                                    }
                                    type="Marker"
                                  />
                                </Marker>
                              </g>
                            </AddTripPatternLayer>
                          </g>
                        </ModificationsMap>
                      </Connect(ModificationsMap)>
                    </g>
                  </div>
                </Map>
              </Map>
            </Connect(Map)>
          </div>
          <div
            className="ApplicationDock"
          >
            <Title>
              <div
                className="ApplicationDockTitle"
              >
                <IconLink
                  title="Modifications"
                  to="/regions/undefined/projects/1/modifications"
                  type="chevron-left"
                >
                  <Link
                    title="Modifications"
                    to="/regions/undefined/projects/1/modifications"
                    type="button"
                  >
                    <Tip
                      tip="Modifications"
                    >
                      <span
                        className="Tip "
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <Link
                          name="Modifications"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="/regions/undefined/projects/1/modifications"
                          type="button"
                        >
                          <a
                            name="Modifications"
                            onClick={[Function]}
                            style={Object {}}
                            type="button"
                          >
                            <Icon
                              type="chevron-left"
                            >
                              <i
                                className="fa fa-chevron-left fa-fw "
                              />
                            </Icon>
                          </a>
                        </Link>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
                Test Modification
                <IconLink
                  className="pull-right"
                  onClick={[Function]}
                  title="Delete modification"
                  type="trash"
                >
                  <Link
                    className="pull-right"
                    onClick={[Function]}
                    title="Delete modification"
                    type="button"
                  >
                    <Tip
                      className="pull-right"
                      tip="Delete modification"
                    >
                      <span
                        className="Tip pull-right"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          name="Delete modification"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <Icon
                            type="trash"
                          >
                            <i
                              className="fa fa-trash fa-fw "
                            />
                          </Icon>
                        </a>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
                <IconLink
                  className="pull-right"
                  onClick={[Function]}
                  title="Copy modification"
                  type="copy"
                >
                  <Link
                    className="pull-right"
                    onClick={[Function]}
                    title="Copy modification"
                    type="button"
                  >
                    <Tip
                      className="pull-right"
                      tip="Copy modification"
                    >
                      <span
                        className="Tip pull-right"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          name="Copy modification"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <Icon
                            type="copy"
                          >
                            <i
                              className="fa fa-copy fa-fw "
                            />
                          </Icon>
                        </a>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
                <IconLink
                  className="pull-right"
                  onClick={[Function]}
                  title="Edit modification name"
                  type="pencil"
                >
                  <Link
                    className="pull-right"
                    onClick={[Function]}
                    title="Edit modification name"
                    type="button"
                  >
                    <Tip
                      className="pull-right"
                      tip="Edit modification name"
                    >
                      <span
                        className="Tip pull-right"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <a
                          name="Edit modification name"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <Icon
                            type="pencil"
                          >
                            <i
                              className="fa fa-pencil fa-fw "
                            />
                          </Icon>
                        </a>
                      </span>
                    </Tip>
                  </Link>
                </IconLink>
              </div>
            </Title>
            <Dock>
              <InnerDock>
                <div
                  className="InnerDock "
                  style={
                    Object {
                      "height": 768,
                    }
                  }
                >
                  <div
                    className="block"
                  >
                    <div>
                      <TextArea
                        label="Description"
                        onChange={[Function]}
                        value="Mock description"
                      >
                        <Group
                          id="description-input-0"
                          label="Description"
                          onChange={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="description-input-0"
                            >
                              Description
                            </label>
                            <textarea
                              className="form-control"
                              id="description-input-0"
                              label="Description"
                              onChange={[Function]}
                            >
                              Mock description
                            </textarea>
                          </div>
                        </Group>
                      </TextArea>
                      <ModificationType
                        modification={
                          Object {
                            "_id": "1234",
                            "accessGroup": "accessGroupName",
                            "bidirectional": false,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "description": "Mock description",
                            "entries": Array [],
                            "feed": "1",
                            "name": "Test Modification",
                            "nonce": "12345",
                            "projectId": "1",
                            "routes": Array [
                              "route1",
                            ],
                            "segments": Array [
                              {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                            ],
                            "showOnMap": false,
                            "timetables": Array [
                              Object {
                                "_id": "timetable-id",
                                "dwellTime": 10,
                                "dwellTimes": Array [
                                  12,
                                ],
                                "endTime": 57600,
                                "exactTimes": false,
                                "friday": true,
                                "headwaySecs": 900,
                                "modificationId": "1234",
                                "modificationName": "Test Modification",
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "phaseAtStop": "",
                                "phaseFromStop": "",
                                "phaseFromTimetable": "",
                                "phaseSeconds": 300,
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              },
                            ],
                            "trips": Array [
                              "abcd",
                            ],
                            "type": "add-trip-pattern",
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variants": Array [
                              true,
                            ],
                          }
                        }
                        setMapState={[Function]}
                        type="add-trip-pattern"
                        update={[Function]}
                        updateAndRetrieveFeedData={[Function]}
                      >
                        <Connect(AddTripPattern)
                          modification={
                            Object {
                              "_id": "1234",
                              "accessGroup": "accessGroupName",
                              "bidirectional": false,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "description": "Mock description",
                              "entries": Array [],
                              "feed": "1",
                              "name": "Test Modification",
                              "nonce": "12345",
                              "projectId": "1",
                              "routes": Array [
                                "route1",
                              ],
                              "segments": Array [
                                {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                              ],
                              "showOnMap": false,
                              "timetables": Array [
                                Object {
                                  "_id": "timetable-id",
                                  "dwellTime": 10,
                                  "dwellTimes": Array [
                                    12,
                                  ],
                                  "endTime": 57600,
                                  "exactTimes": false,
                                  "friday": true,
                                  "headwaySecs": 900,
                                  "modificationId": "1234",
                                  "modificationName": "Test Modification",
                                  "monday": true,
                                  "name": "Test timetable",
                                  "patternTrips": Array [
                                    "abcd",
                                  ],
                                  "phaseAtStop": "",
                                  "phaseFromStop": "",
                                  "phaseFromTimetable": "",
                                  "phaseSeconds": 300,
                                  "saturday": false,
                                  "segmentSpeeds": Array [],
                                  "sourceTrip": "abcd",
                                  "startTime": 28800,
                                  "sunday": false,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                },
                              ],
                              "trips": Array [
                                "abcd",
                              ],
                              "type": "add-trip-pattern",
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variants": Array [
                                true,
                              ],
                            }
                          }
                          setMapState={[Function]}
                          type="add-trip-pattern"
                          update={[Function]}
                          updateAndRetrieveFeedData={[Function]}
                        >
                          <AddTripPattern
                            allPhaseFromTimetableStops={Object {}}
                            dispatch={[Function]}
                            extendFromEnd={true}
                            gtfsStops={
                              Array [
                                Object {
                                  "stop_id": "1:undefined",
                                },
                              ]
                            }
                            mapState={
                              Object {
                                "activeTrips": Array [],
                                "center": Object {
                                  "lat": 38.8886,
                                  "lon": -77.043,
                                },
                                "components": Array [],
                                "zoom": 12,
                              }
                            }
                            modification={
                              Object {
                                "_id": "1234",
                                "accessGroup": "accessGroupName",
                                "bidirectional": false,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "description": "Mock description",
                                "entries": Array [],
                                "feed": "1",
                                "name": "Test Modification",
                                "nonce": "12345",
                                "projectId": "1",
                                "routes": Array [
                                  "route1",
                                ],
                                "segments": Array [
                                  {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                ],
                                "showOnMap": false,
                                "timetables": Array [
                                  Object {
                                    "_id": "timetable-id",
                                    "dwellTime": 10,
                                    "dwellTimes": Array [
                                      12,
                                    ],
                                    "endTime": 57600,
                                    "exactTimes": false,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "modificationId": "1234",
                                    "modificationName": "Test Modification",
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "phaseAtStop": "",
                                    "phaseFromStop": "",
                                    "phaseFromTimetable": "",
                                    "phaseSeconds": 300,
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  },
                                ],
                                "trips": Array [
                                  "abcd",
                                ],
                                "type": "add-trip-pattern",
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variants": Array [
                                  true,
                                ],
                              }
                            }
                            numberOfStops={16}
                            projectTimetables={Array []}
                            qualifiedStops={Array []}
                            segmentDistances={
                              Array [
                                45.22365292770072,
                              ]
                            }
                            setMapState={[Function]}
                            type="add-trip-pattern"
                            update={[Function]}
                            updateAndRetrieveFeedData={[Function]}
                          >
                            <div>
                              <EditAlignment
                                disabled={false}
                                extendFromEnd={true}
                                mapState={
                                  Object {
                                    "activeTrips": Array [],
                                    "center": Object {
                                      "lat": 38.8886,
                                      "lon": -77.043,
                                    },
                                    "components": Array [],
                                    "zoom": 12,
                                  }
                                }
                                modification={
                                  Object {
                                    "_id": "1234",
                                    "accessGroup": "accessGroupName",
                                    "bidirectional": false,
                                    "createdAt": "2017-11-08T12:30:50.133Z",
                                    "createdBy": "person@gmail.com",
                                    "description": "Mock description",
                                    "entries": Array [],
                                    "feed": "1",
                                    "name": "Test Modification",
                                    "nonce": "12345",
                                    "projectId": "1",
                                    "routes": Array [
                                      "route1",
                                    ],
                                    "segments": Array [
                                      {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
                                    ],
                                    "showOnMap": false,
                                    "timetables": Array [
                                      Object {
                                        "_id": "timetable-id",
                                        "dwellTime": 10,
                                        "dwellTimes": Array [
                                          12,
                                        ],
                                        "endTime": 57600,
                                        "exactTimes": false,
                                        "friday": true,
                                        "headwaySecs": 900,
                                        "modificationId": "1234",
                                        "modificationName": "Test Modification",
                                        "monday": true,
                                        "name": "Test timetable",
                                        "patternTrips": Array [
                                          "abcd",
                                        ],
                                        "phaseAtStop": "",
                                        "phaseFromStop": "",
                                        "phaseFromTimetable": "",
                                        "phaseSeconds": 300,
                                        "saturday": false,
                                        "segmentSpeeds": Array [],
                                        "sourceTrip": "abcd",
                                        "startTime": 28800,
                                        "sunday": false,
                                        "thursday": true,
                                        "tuesday": true,
                                        "wednesday": true,
                                      },
                                    ],
                                    "trips": Array [
                                      "abcd",
                                    ],
                                    "type": "add-trip-pattern",
                                    "updatedAt": "2017-11-08T12:31:19.602Z",
                                    "updatedBy": "person@gmail.com",
                                    "variants": Array [
                                      true,
                                    ],
                                  }
                                }
                                numberOfStops={16}
                                segmentDistances={
                                  Array [
                                    45.22365292770072,
                                  ]
                                }
                                setMapState={[Function]}
                                update={[Function]}
                              >
                                <div>
                                  <h5>
                                    Route Geometry
                                  </h5>
                                  <p>
                                    16 stops over 45.22 km
                                  </p>
                                  <p>
                                    <Button
                                      block={true}
                                      disabled={false}
                                      onClick={[Function]}
                                      style="warning"
                                    >
                                      <a
                                        className="btn btn-warning btn-block"
                                        disabled={false}
                                        href="#"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="pencil"
                                        >
                                          <i
                                            className="fa fa-pencil fa-fw "
                                          />
                                        </Icon>
                                         
                                        Edit route geometry
                                      </a>
                                    </Button>
                                  </p>
                                  <Checkbox
                                    defaultChecked={true}
                                    label="Auto-create stops"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="auto-create-stops-input-1"
                                      >
                                        <input
                                          defaultChecked={true}
                                          id="auto-create-stops-input-1"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Auto-create stops
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Number
                                    label="Stop spacing (minimum is 50)"
                                    onChange={[Function]}
                                    units="meters"
                                    value={3000}
                                  >
                                    <Group
                                      id="stop-spacing-minimum-is-50-input-2"
                                      label="Stop spacing (minimum is 50)"
                                      onChange={[Function]}
                                      units="meters"
                                      value={3000}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="stop-spacing-minimum-is-50-input-2"
                                        >
                                          Stop spacing (minimum is 50)
                                        </label>
                                        <Input
                                          id="stop-spacing-minimum-is-50-input-2"
                                          label="Stop spacing (minimum is 50)"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="meters"
                                          value={3000}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="stop-spacing-minimum-is-50-input-2"
                                              min={0}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="meters"
                                              type="number"
                                              value={3000}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              meters
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Checkbox
                                    checked={false}
                                    disabled={true}
                                    label="Bidirectional"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="bidirectional-input-3"
                                      >
                                        <input
                                          checked={false}
                                          disabled={true}
                                          id="bidirectional-input-3"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Bidirectional
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <div
                                    className="alert alert-info"
                                    role="alert"
                                  >
                                    Modification cannot be bidirectional because timetables in this modification have phasing information.
                                  </div>
                                </div>
                              </EditAlignment>
                              <Timetables
                                allPhaseFromTimetableStops={Object {}}
                                bidirectional={false}
                                modificationStops={
                                  Array [
                                    Object {
                                      "stop_id": "1:undefined",
                                    },
                                  ]
                                }
                                numberOfStops={16}
                                projectTimetables={Array []}
                                qualifiedStops={Array []}
                                segmentDistances={
                                  Array [
                                    45.22365292770072,
                                  ]
                                }
                                setMapState={[Function]}
                                timetables={
                                  Array [
                                    Object {
                                      "_id": "timetable-id",
                                      "dwellTime": 10,
                                      "dwellTimes": Array [
                                        12,
                                      ],
                                      "endTime": 57600,
                                      "exactTimes": false,
                                      "friday": true,
                                      "headwaySecs": 900,
                                      "modificationId": "1234",
                                      "modificationName": "Test Modification",
                                      "monday": true,
                                      "name": "Test timetable",
                                      "patternTrips": Array [
                                        "abcd",
                                      ],
                                      "phaseAtStop": "",
                                      "phaseFromStop": "",
                                      "phaseFromTimetable": "",
                                      "phaseSeconds": 300,
                                      "saturday": false,
                                      "segmentSpeeds": Array [],
                                      "sourceTrip": "abcd",
                                      "startTime": 28800,
                                      "sunday": false,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                    },
                                  ]
                                }
                                update={[Function]}
                              >
                                <div>
                                  <h5>
                                    Timetables (
                                    1
                                    )
                                  </h5>
                                  <p>
                                    <Button
                                      block={true}
                                      onClick={[Function]}
                                      style="success"
                                    >
                                      <a
                                        className="btn btn-success btn-block"
                                        href="#"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="plus"
                                        >
                                          <i
                                            className="fa fa-plus fa-fw "
                                          />
                                        </Icon>
                                         Add timetable
                                      </a>
                                    </Button>
                                  </p>
                                  <p>
                                    <Button
                                      block={true}
                                      onClick={[Function]}
                                      style="success"
                                    >
                                      <a
                                        className="btn btn-success btn-block"
                                        href="#"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="plus"
                                        >
                                          <i
                                            className="fa fa-plus fa-fw "
                                          />
                                        </Icon>
                                         Copy timetable
                                      </a>
                                    </Button>
                                  </p>
                                  <TimetableComponent
                                    allPhaseFromTimetableStops={Object {}}
                                    bidirectional={false}
                                    modificationStops={
                                      Array [
                                        Object {
                                          "stop_id": "1:undefined",
                                        },
                                      ]
                                    }
                                    numberOfStops={16}
                                    projectTimetables={Array []}
                                    qualifiedStops={Array []}
                                    remove={[Function]}
                                    segmentDistances={
                                      Array [
                                        45.22365292770072,
                                      ]
                                    }
                                    setMapState={[Function]}
                                    timetable={
                                      Object {
                                        "_id": "timetable-id",
                                        "dwellTime": 10,
                                        "dwellTimes": Array [
                                          12,
                                        ],
                                        "endTime": 57600,
                                        "exactTimes": false,
                                        "friday": true,
                                        "headwaySecs": 900,
                                        "modificationId": "1234",
                                        "modificationName": "Test Modification",
                                        "monday": true,
                                        "name": "Test timetable",
                                        "patternTrips": Array [
                                          "abcd",
                                        ],
                                        "phaseAtStop": "",
                                        "phaseFromStop": "",
                                        "phaseFromTimetable": "",
                                        "phaseSeconds": 300,
                                        "saturday": false,
                                        "segmentSpeeds": Array [],
                                        "sourceTrip": "abcd",
                                        "startTime": 28800,
                                        "sunday": false,
                                        "thursday": true,
                                        "tuesday": true,
                                        "wednesday": true,
                                      }
                                    }
                                    update={[Function]}
                                  >
                                    <section
                                      className="panel panel-default inner-panel"
                                    >
                                      <a
                                        className="panel-heading clearfix"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                        tabIndex={0}
                                      >
                                        <Icon
                                          type="calendar"
                                        >
                                          <i
                                            className="fa fa-calendar fa-fw "
                                          />
                                        </Icon>
                                        <strong>
                                           
                                          Test timetable
                                        </strong>
                                        <Icon
                                          className="pull-right"
                                          type="caret-right"
                                        >
                                          <i
                                            className="fa fa-caret-right fa-fw pull-right"
                                          />
                                        </Icon>
                                      </a>
                                    </section>
                                  </TimetableComponent>
                                </div>
                              </Timetables>
                            </div>
                          </AddTripPattern>
                        </Connect(AddTripPattern)>
                      </ModificationType>
                      <Variants
                        activeVariants={
                          Array [
                            true,
                          ]
                        }
                        allVariants={
                          Array [
                            "Default",
                          ]
                        }
                        modificationId="1234"
                        setVariant={[Function]}
                      >
                        <div>
                          <h5>
                            Active in scenario numbers
                          </h5>
                          <div
                            className="form-inline"
                          >
                            <Checkbox
                              checked={true}
                              label={1}
                              onChange={[Function]}
                              title="Default"
                            >
                              <div
                                className="checkbox"
                              >
                                <label
                                  htmlFor="1-input-4"
                                >
                                  <input
                                    checked={true}
                                    id="1-input-4"
                                    onChange={[Function]}
                                    title="Default"
                                    type="checkbox"
                                  />
                                   
                                  1
                                </label>
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                      </Variants>
                    </div>
                  </div>
                </div>
              </InnerDock>
            </Dock>
          </div>
        </div>
      </Application>
    </ModificationEditor>
  </Connect(ModificationEditor)>
</Provider>
`;
