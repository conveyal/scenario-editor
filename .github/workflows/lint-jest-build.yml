name: 'Install, lint, unit test, build, run Cypress tests'

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install and cache the build
      - uses: bahmutov/npm-install@v1

      # Cache the entire working directory for subsequent steps
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}

  typeCheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: yarn tsc

  codeLinter:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: yarn lint
      - run: yarn check-format

  jestUnitTests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: yarn jest
        env:
          CI: true

  # Keep separate from
  nextjsBuild:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v1
        with:
          path: '.'
          key: ${{ github.sha }}

      # Cache the next.js cache folder per os/dependency change
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn build
        env:
          NEXT_PUBLIC_BASEMAP_DISABLED: true
          NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}

      # Cache entire .next folder for subsequent steps
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ runner.os }}-${{ github.sha }}-nextjs

  cypressIntegration:
    needs: [codeLinter, jestUnitTests, nextjsBuild, typeCheck] # only run if these all pass
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    strategy:
      matrix:
        backend: [dev-latest] # keep as a matrix strategy to test against an additional specific build later

    runs-on: ubuntu-latest
    steps:
      # Install / cache dependencies with Cypress to handle caching Cypress binary.
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      # Restore entire .next folder from previous step
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ runner.os }}-${{ github.sha }}-nextjs

      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        id: jar-cache
        with:
          path: ${{ github.workspace }}/${{ matrix.backend }}.jar
          key: analysis-backend-${{ matrix.backend }}

      - name: Download Analysis Backend
        if: steps.jar-cache.outputs.cache-hit != 'true'
        run: curl https://r5-builds.s3-eu-west-1.amazonaws.com/${{ matrix.backend }}.jar --output ${{ github.workspace }}/${{ matrix.backend }}.jar

      - uses: cypress-io/github-action@v2
        with:
          env: ${{ secrets.CYPRESS_GITHUB_ENV }}
          install: false
          spec: cypress/integration/local/all.js
          start: yarn action # runs frontend and java server together
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
