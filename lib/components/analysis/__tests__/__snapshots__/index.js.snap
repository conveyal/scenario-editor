// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components > Analysis > Single Point should render correctly 1`] = `
<SinglePointAnalysis
  accessibility={0}
  bundleId=""
  clearIsochroneResults={[Function]}
  comparisonAccessibility={0}
  comparisonBundleId=""
  comparisonInProgress={false}
  comparisonPercentileCurves={Array []}
  comparisonScenarioId=""
  comparisonVariant={0}
  currentIndicator=""
  deleteRegionalAnalysis={[Function]}
  enterAnalysisMode={[Function]}
  exitAnalysisMode={[Function]}
  fetchIsochrone={[Function]}
  indicators={Array []}
  isFetchingIsochrone={false}
  isShowingIsochrone={false}
  isShowingOpportunities={false}
  isochroneCutoff={0}
  isochroneFetchStatusMessag=""
  isochroneLonLat={Object {}}
  loadRegionalAnalyses={[Function]}
  modifications={Array []}
  percentileCurves={Array []}
  profileRequest={
    Object {
      "date": "2016-01-16",
    }
  }
  projectId=""
  removeIsochroneLayerFromMap={[Function]}
  removeOpportunityLayerFromMap={[Function]}
  runAnalysis={[Function]}
  scenarioApplicationErrors={Array []}
  scenarioId=""
  scenarioName=""
  scenarios={Array []}
  selectRegionalAnalysis={[Function]}
  setActiveVariant={[Function]}
  setComparisonInProgress={[Function]}
  setComparisonScenario={[Function]}
  setCurrentIndicator={[Function]}
  setIsochroneCutoff={[Function]}
  setProfileRequest={[Function]}
  variantIndex={0}
  variantName=""
  variants={Array []}
  workerVersion=""
>
  <div>
    <div
      className="block"
    >
      <br />
      <Group>
        <div
          className="form-group"
        >
          <Select
            addLabelText="Add \\"{label}\\"?"
            arrowRenderer={[Function]}
            autosize={true}
            backspaceRemoves={true}
            backspaceToRemoveMessage="Press backspace to remove {label}"
            clearAllText="Clear all"
            clearRenderer={[Function]}
            clearValueText="Clear value"
            clearable={true}
            deleteRemoves={true}
            delimiter=","
            disabled={false}
            escapeClearsValue={true}
            filterOptions={[Function]}
            ignoreAccents={true}
            ignoreCase={true}
            inputProps={Object {}}
            isLoading={false}
            joinValues={false}
            labelKey="label"
            matchPos="any"
            matchProp="any"
            menuBuffer={0}
            menuRenderer={[Function]}
            multi={false}
            noResultsText="No results found"
            onBlurResetsInput={true}
            onChange={[Function]}
            onCloseResetsInput={true}
            openAfterFocus={false}
            optionComponent={[Function]}
            options={Array []}
            pageSize={5}
            placeholder="Select..."
            required={false}
            scrollMenuIntoView={true}
            searchable={true}
            simpleValue={false}
            tabSelectsValue={true}
            value={0}
            valueComponent={[Function]}
            valueKey="value"
          >
            <div
              className="Select Select--single is-searchable"
            >
              <div
                className="Select-control"
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
              >
                <span
                  className="Select-multi-value-wrapper"
                  id="react-select-2--value"
                >
                  <div
                    className="Select-placeholder"
                  >
                    Select...
                  </div>
                  <AutosizeInput
                    aria-activedescendant="react-select-2--value"
                    aria-expanded="false"
                    aria-haspopup="false"
                    aria-owns=""
                    className="Select-input"
                    minWidth="5"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={false}
                    role="combobox"
                    value=""
                  />
                </span>
                <span
                  className="Select-arrow-zone"
                  onMouseDown={[Function]}
                >
                  <span
                    className="Select-arrow"
                    onMouseDown={[Function]}
                  />
                </span>
              </div>
            </div>
          </Select>
        </div>
      </Group>
      <div>
        <Group>
          <div
            className="form-group"
          >
            <Select
              addLabelText="Add \\"{label}\\"?"
              arrowRenderer={[Function]}
              autosize={true}
              backspaceRemoves={true}
              backspaceToRemoveMessage="Press backspace to remove {label}"
              clearAllText="Clear all"
              clearRenderer={[Function]}
              clearValueText="Clear value"
              clearable={true}
              deleteRemoves={true}
              delimiter=","
              disabled={false}
              escapeClearsValue={true}
              filterOptions={[Function]}
              ignoreAccents={true}
              ignoreCase={true}
              inputProps={Object {}}
              isLoading={false}
              joinValues={false}
              labelKey="label"
              matchPos="any"
              matchProp="any"
              menuBuffer={0}
              menuRenderer={[Function]}
              multi={false}
              name="Scenario"
              noResultsText="No results found"
              onBlurResetsInput={true}
              onChange={[Function]}
              onCloseResetsInput={true}
              openAfterFocus={false}
              optionComponent={[Function]}
              options={Array []}
              pageSize={5}
              placeholder="Select comparison scenario..."
              required={false}
              scrollMenuIntoView={true}
              searchable={true}
              simpleValue={false}
              tabSelectsValue={true}
              value=""
              valueComponent={[Function]}
              valueKey="value"
            >
              <div
                className="Select Select--single is-searchable"
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-3--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select comparison scenario...
                    </div>
                    <AutosizeInput
                      aria-activedescendant="react-select-3--value"
                      aria-expanded="false"
                      aria-haspopup="false"
                      aria-owns=""
                      className="Select-input"
                      minWidth="5"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      role="combobox"
                      value=""
                    />
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </Select>
          </div>
        </Group>
      </div>
      <Group
        id="select-analysis-indicator"
      >
        <div
          className="form-group"
        >
          <Select
            addLabelText="Add \\"{label}\\"?"
            arrowRenderer={[Function]}
            autosize={true}
            backspaceRemoves={true}
            backspaceToRemoveMessage="Press backspace to remove {label}"
            clearAllText="Clear all"
            clearRenderer={[Function]}
            clearValueText="Clear value"
            clearable={true}
            deleteRemoves={true}
            delimiter=","
            disabled={false}
            escapeClearsValue={true}
            filterOptions={[Function]}
            id="select-analysis-indicator"
            ignoreAccents={true}
            ignoreCase={true}
            inputProps={Object {}}
            isLoading={false}
            joinValues={false}
            labelKey="label"
            matchPos="any"
            matchProp="any"
            menuBuffer={0}
            menuRenderer={[Function]}
            multi={false}
            name="Opportunity dataset"
            noResultsText="No results found"
            onBlurResetsInput={true}
            onChange={[Function]}
            onCloseResetsInput={true}
            openAfterFocus={false}
            optionComponent={[Function]}
            options={Array []}
            pageSize={5}
            placeholder="Select an opportunity dataset..."
            required={false}
            scrollMenuIntoView={true}
            searchable={true}
            simpleValue={false}
            tabSelectsValue={true}
            value=""
            valueComponent={[Function]}
            valueKey="value"
          >
            <div
              className="Select Select--single is-searchable"
            >
              <div
                className="Select-control"
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
              >
                <span
                  className="Select-multi-value-wrapper"
                  id="react-select-4--value"
                >
                  <div
                    className="Select-placeholder"
                  >
                    Select an opportunity dataset...
                  </div>
                  <AutosizeInput
                    aria-activedescendant="react-select-4--value"
                    aria-expanded="false"
                    aria-haspopup="false"
                    aria-owns=""
                    className="Select-input"
                    minWidth="5"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={false}
                    role="combobox"
                    value=""
                  />
                </span>
                <span
                  className="Select-arrow-zone"
                  onMouseDown={[Function]}
                >
                  <span
                    className="Select-arrow"
                    onMouseDown={[Function]}
                  />
                </span>
              </div>
            </div>
          </Select>
        </div>
      </Group>
      <Collapsible
        defaultExpanded={false}
        title="Analysis settings"
      >
        <div>
          <div
            aria-level={3}
            role="heading"
          >
            <a
              aria-expanded={false}
              className="CollapsibleButton"
              onClick={[Function]}
              role="button"
              tabIndex={0}
            >
              <Icon
                type="caret-right"
              >
                <i
                  className="fa fa-caret-right fa-fw "
                />
              </Icon>
              <strong>
                Analysis settings
              </strong>
            </a>
          </div>
        </div>
      </Collapsible>
    </div>
    <div
      className="DockTitle"
    >
      Regional analyses
    </div>
    <div
      className="block"
    >
      <Group>
        <div
          className="form-group"
        >
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
              New regional analysis
            </a>
          </Button>
        </div>
      </Group>
      <RegionalAnalysisSelector
        deleteRegionalAnalysis={[Function]}
        loadRegionalAnalyses={[Function]}
        projectId=""
        scenarioId=""
        selectRegionalAnalysis={[Function]}
      >
        <ul
          className="list-group"
        />
      </RegionalAnalysisSelector>
    </div>
  </div>
</SinglePointAnalysis>
`;
