// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Routes should render 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Routes
    history={
      Object {
        "canGo": [Function],
        "createHref": [Function],
        "createKey": [Function],
        "createLocation": [Function],
        "createPath": [Function],
        "getCurrentLocation": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "listen": [Function],
        "listenBefore": [Function],
        "push": [Function],
        "replace": [Function],
        "transitionTo": [Function],
        "unsubscribe": [Function],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "canGo": [Function],
          "createHref": [Function],
          "createKey": [Function],
          "createLocation": [Function],
          "createPath": [Function],
          "getCurrentLocation": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "listen": [Function],
          "listenBefore": [Function],
          "push": [Function],
          "replace": [Function],
          "transitionTo": [Function],
          "unsubscribe": [Function],
        }
      }
      render={[Function]}
    >
      <RouterContext
        components={
          Array [
            [Function],
            [Function],
          ]
        }
        createElement={[Function]}
        location={
          Object {
            "action": "POP",
            "hash": "",
            "key": null,
            "pathname": "/",
            "query": Object {},
            "search": "",
            "state": undefined,
          }
        }
        params={Object {}}
        router={
          Object {
            "canGo": [Function],
            "createHref": [Function],
            "createKey": [Function],
            "createLocation": [Function],
            "createPath": [Function],
            "getCurrentLocation": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "isActive": [Function],
            "listen": [Function],
            "listenBefore": [Function],
            "location": Object {
              "action": "POP",
              "hash": "",
              "key": null,
              "pathname": "/",
              "query": Object {},
              "search": "",
              "state": undefined,
            },
            "params": Object {},
            "push": [Function],
            "replace": [Function],
            "routes": Array [
              Object {
                "childRoutes": Array [
                  Object {
                    "component": [Function],
                    "path": "projects/create",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "bundles/create",
                      },
                      Object {
                        "component": [Function],
                        "path": "bundles/:bundleId/edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "grids/create",
                      },
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios/create",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "projects/:projectId",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-modifications",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-shapefile",
                      },
                      Object {
                        "component": [Function],
                        "path": "modifications/:modificationId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/:variantId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/regional/:regionalAnalysisId",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "scenarios/:scenarioId",
                  },
                  Object {
                    "component": [Function],
                    "path": "*",
                  },
                ],
                "component": [Function],
                "indexRoute": Object {
                  "component": [Function],
                },
                "path": "/",
              },
              Object {
                "component": [Function],
              },
            ],
            "setRouteLeaveHook": [Function],
            "transitionTo": [Function],
            "unsubscribe": [Function],
          }
        }
        routes={
          Array [
            Object {
              "childRoutes": Array [
                Object {
                  "component": [Function],
                  "path": "projects/create",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "bundles/create",
                    },
                    Object {
                      "component": [Function],
                      "path": "bundles/:bundleId/edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "grids/create",
                    },
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios/create",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "projects/:projectId",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-modifications",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-shapefile",
                    },
                    Object {
                      "component": [Function],
                      "path": "modifications/:modificationId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/:variantId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/regional/:regionalAnalysisId",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "scenarios/:scenarioId",
                },
                Object {
                  "component": [Function],
                  "path": "*",
                },
              ],
              "component": [Function],
              "indexRoute": Object {
                "component": [Function],
              },
              "path": "/",
            },
            Object {
              "component": [Function],
            },
          ]
        }
      >
        <Connect(Application)
          location={
            Object {
              "action": "POP",
              "hash": "",
              "key": null,
              "pathname": "/",
              "query": Object {},
              "search": "",
              "state": undefined,
            }
          }
          params={Object {}}
          route={
            Object {
              "childRoutes": Array [
                Object {
                  "component": [Function],
                  "path": "projects/create",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "bundles/create",
                    },
                    Object {
                      "component": [Function],
                      "path": "bundles/:bundleId/edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "grids/create",
                    },
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios/create",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "projects/:projectId",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-modifications",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-shapefile",
                    },
                    Object {
                      "component": [Function],
                      "path": "modifications/:modificationId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/:variantId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/regional/:regionalAnalysisId",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "scenarios/:scenarioId",
                },
                Object {
                  "component": [Function],
                  "path": "*",
                },
              ],
              "component": [Function],
              "indexRoute": Object {
                "component": [Function],
              },
              "path": "/",
            }
          }
          routeParams={Object {}}
          router={
            Object {
              "canGo": [Function],
              "createHref": [Function],
              "createKey": [Function],
              "createLocation": [Function],
              "createPath": [Function],
              "getCurrentLocation": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "isActive": [Function],
              "listen": [Function],
              "listenBefore": [Function],
              "location": Object {
                "action": "POP",
                "hash": "",
                "key": null,
                "pathname": "/",
                "query": Object {},
                "search": "",
                "state": undefined,
              },
              "params": Object {},
              "push": [Function],
              "replace": [Function],
              "routes": Array [
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "projects/create",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "bundles/create",
                        },
                        Object {
                          "component": [Function],
                          "path": "bundles/:bundleId/edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "grids/create",
                        },
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios/create",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "projects/:projectId",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-modifications",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-shapefile",
                        },
                        Object {
                          "component": [Function],
                          "path": "modifications/:modificationId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/:variantId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/regional/:regionalAnalysisId",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "scenarios/:scenarioId",
                    },
                    Object {
                      "component": [Function],
                      "path": "*",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "/",
                },
                Object {
                  "component": [Function],
                },
              ],
              "setRouteLeaveHook": [Function],
              "transitionTo": [Function],
              "unsubscribe": [Function],
            }
          }
          routes={
            Array [
              Object {
                "childRoutes": Array [
                  Object {
                    "component": [Function],
                    "path": "projects/create",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "bundles/create",
                      },
                      Object {
                        "component": [Function],
                        "path": "bundles/:bundleId/edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "grids/create",
                      },
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios/create",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "projects/:projectId",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-modifications",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-shapefile",
                      },
                      Object {
                        "component": [Function],
                        "path": "modifications/:modificationId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/:variantId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/regional/:regionalAnalysisId",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "scenarios/:scenarioId",
                  },
                  Object {
                    "component": [Function],
                    "path": "*",
                  },
                ],
                "component": [Function],
                "indexRoute": Object {
                  "component": [Function],
                },
                "path": "/",
              },
              Object {
                "component": [Function],
              },
            ]
          }
        >
          <Application
            bundleId="1"
            center={
              Object {
                "lat": 38.8886,
                "lon": -77.043,
              }
            }
            error=""
            errorMessage=""
            feeds={
              Array [
                Object {
                  "id": "1",
                  "routes": Array [
                    Object {
                      "id": "route1",
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "routesById": Object {
                    "route1": Object {
                      "id": "route1",
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  },
                  "stops": Array [
                    Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  ],
                  "stopsById": Object {
                    "1": Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    "2": Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  },
                },
              ]
            }
            hasError={false}
            hasScenario={true}
            loadProject={[Function]}
            location={
              Object {
                "action": "POP",
                "hash": "",
                "key": null,
                "pathname": "/",
                "query": Object {},
                "search": "",
                "state": undefined,
              }
            }
            mapComponents={Array []}
            outstandingRequests={0}
            params={Object {}}
            push={[Function]}
            route={
              Object {
                "childRoutes": Array [
                  Object {
                    "component": [Function],
                    "path": "projects/create",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "bundles/create",
                      },
                      Object {
                        "component": [Function],
                        "path": "bundles/:bundleId/edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "grids/create",
                      },
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios/create",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "projects/:projectId",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-modifications",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-shapefile",
                      },
                      Object {
                        "component": [Function],
                        "path": "modifications/:modificationId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/:variantId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/regional/:regionalAnalysisId",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "scenarios/:scenarioId",
                  },
                  Object {
                    "component": [Function],
                    "path": "*",
                  },
                ],
                "component": [Function],
                "indexRoute": Object {
                  "component": [Function],
                },
                "path": "/",
              }
            }
            routeParams={Object {}}
            router={
              Object {
                "canGo": [Function],
                "createHref": [Function],
                "createKey": [Function],
                "createLocation": [Function],
                "createPath": [Function],
                "getCurrentLocation": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "isActive": [Function],
                "listen": [Function],
                "listenBefore": [Function],
                "location": Object {
                  "action": "POP",
                  "hash": "",
                  "key": null,
                  "pathname": "/",
                  "query": Object {},
                  "search": "",
                  "state": undefined,
                },
                "params": Object {},
                "push": [Function],
                "replace": [Function],
                "routes": Array [
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "projects/create",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "bundles/create",
                          },
                          Object {
                            "component": [Function],
                            "path": "bundles/:bundleId/edit",
                          },
                          Object {
                            "component": [Function],
                            "path": "grids/create",
                          },
                          Object {
                            "component": [Function],
                            "path": "edit",
                          },
                          Object {
                            "component": [Function],
                            "path": "scenarios",
                          },
                          Object {
                            "component": [Function],
                            "path": "scenarios/create",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "projects/:projectId",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "edit",
                          },
                          Object {
                            "component": [Function],
                            "path": "import-modifications",
                          },
                          Object {
                            "component": [Function],
                            "path": "import-shapefile",
                          },
                          Object {
                            "component": [Function],
                            "path": "modifications/:modificationId",
                          },
                          Object {
                            "component": [Function],
                            "path": "analysis",
                          },
                          Object {
                            "component": [Function],
                            "path": "analysis/:variantId",
                          },
                          Object {
                            "component": [Function],
                            "path": "analysis/regional/:regionalAnalysisId",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "scenarios/:scenarioId",
                      },
                      Object {
                        "component": [Function],
                        "path": "*",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "/",
                  },
                  Object {
                    "component": [Function],
                  },
                ],
                "setRouteLeaveHook": [Function],
                "transitionTo": [Function],
                "unsubscribe": [Function],
              }
            }
            routes={
              Array [
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "projects/create",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "bundles/create",
                        },
                        Object {
                          "component": [Function],
                          "path": "bundles/:bundleId/edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "grids/create",
                        },
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios/create",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "projects/:projectId",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-modifications",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-shapefile",
                        },
                        Object {
                          "component": [Function],
                          "path": "modifications/:modificationId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/:variantId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/regional/:regionalAnalysisId",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "scenarios/:scenarioId",
                    },
                    Object {
                      "component": [Function],
                      "path": "*",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "/",
                },
                Object {
                  "component": [Function],
                },
              ]
            }
            scenarioId="1"
            scenarioIsLoaded={false}
            setMapCenter={[Function]}
            variants={
              Array [
                "Default",
              ]
            }
            zoom={12}
          >
            <div
              id="editor"
            >
              <Sidebar
                currentPath="/"
                outstandingRequests={0}
                scenarioId="1"
              >
                <div
                  className="Sidebar"
                >
                  <Link
                    className="Sidebar-logo"
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    title="Projects"
                    to="/"
                  >
                    <a
                      className="Sidebar-logo"
                      href="/"
                      onClick={[Function]}
                      style={Object {}}
                      title="Projects"
                    />
                  </Link>
                  <div
                    className="Sidebar-bottom"
                  >
                    <SidebarNavItem
                      href="http://docs.analysis.conveyal.com/"
                      icon="question-circle"
                      text="help"
                    >
                      <div
                        className="Sidebar-navItem"
                        title="help"
                      >
                        <Link
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to="http://docs.analysis.conveyal.com/"
                        >
                          <a
                            href="http://docs.analysis.conveyal.com/"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            <Icon
                              type="question-circle"
                            >
                              <i
                                className="fa fa-question-circle fa-fw "
                              />
                            </Icon>
                            <span
                              className="Sidebar-navItem-text"
                            >
                               
                              help
                            </span>
                          </a>
                        </Link>
                      </div>
                    </SidebarNavItem>
                  </div>
                </div>
              </Sidebar>
              <div
                className="Fullscreen  "
              >
                <Map
                  animate={false}
                  center={
                    Object {
                      "lat": 38.8886,
                      "lon": -77.043,
                    }
                  }
                  zoom={12}
                >
                  <div
                    id="map1"
                  >
                    <TileLayer
                      attribution="<a href=\\"http://www.openstreetmap.org/copyright\\">OpenStreetMap</a> contributors, &copy; <a href='https://www.mapbox.com/about/maps/'>Mapbox</a>"
                      layerContainer={
                        MapMock {
                          "_addLayers": [Function],
                          "_animatePathZoom": [Function],
                          "_animateZoom": [Function],
                          "_catchTransitionEnd": [Function],
                          "_checkIfLoaded": [Function],
                          "_clearControlPos": [Function],
                          "_clearHandlers": [Function],
                          "_clearPanes": [Function],
                          "_container": "map1",
                          "_createPane": [Function],
                          "_endPathZoom": [Function],
                          "_fireMouseEvent": [Function],
                          "_getBoundsOffset": [Function],
                          "_getCenterLayerPoint": [Function],
                          "_getCenterOffset": [Function],
                          "_getMapPanePos": [Function],
                          "_getNewTopLeftPoint": [Function],
                          "_getTopLeftPoint": [Function],
                          "_getZoomSpan": [Function],
                          "_handleGeolocationError": [Function],
                          "_handleGeolocationResponse": [Function],
                          "_initContainer": [Function],
                          "_initControlPos": [Function],
                          "_initEvents": [Function],
                          "_initLayout": [Function],
                          "_initPanes": [Function],
                          "_initPathRoot": [Function],
                          "_initialCenter": Object {
                            "lat": 38.8886,
                            "lng": -77.043,
                          },
                          "_latLngToNewLayerPoint": [Function],
                          "_layerAdd": [Function],
                          "_limitCenter": [Function],
                          "_limitOffset": [Function],
                          "_limitZoom": [Function],
                          "_moved": [Function],
                          "_nothingToAnimate": [Function],
                          "_onMouseClick": [Function],
                          "_onPanTransitionEnd": [Function],
                          "_onPanTransitionStep": [Function],
                          "_onResize": [Function],
                          "_onTileLayerLoad": [Function],
                          "_onZoomTransitionEnd": [Function],
                          "_panInsideMaxBounds": [Function],
                          "_rawPanBy": [Function],
                          "_rebound": [Function],
                          "_resetView": [Function],
                          "_tryAnimatedPan": [Function],
                          "_tryAnimatedZoom": [Function],
                          "_updateCanvasViewport": [Function],
                          "_updatePathViewport": [Function],
                          "_updateSvgViewport": [Function],
                          "_updateZoomLevels": [Function],
                          "_zoom": 12,
                          "addControl": [Function],
                          "addEventListener": [Function],
                          "addHandler": [Function],
                          "addLayer": [Function],
                          "addOneTimeEventListener": [Function],
                          "callInitHooks": [Function],
                          "clearAllEventListeners": [Function],
                          "closePopup": [Function],
                          "containerPointToLatLng": [Function],
                          "containerPointToLayerPoint": [Function],
                          "eachLayer": [Function],
                          "fire": [Function],
                          "fireEvent": [Function],
                          "fitBounds": [Function],
                          "fitWorld": [Function],
                          "getBounds": [Function],
                          "getBoundsZoom": [Function],
                          "getCenter": [Function],
                          "getContainer": [Function],
                          "getMaxZoom": [Function],
                          "getMinZoom": [Function],
                          "getPanes": [Function],
                          "getPixelBounds": [Function],
                          "getPixelOrigin": [Function],
                          "getScaleZoom": [Function],
                          "getSize": [Function],
                          "getZoom": [Function],
                          "getZoomScale": [Function],
                          "hasEventListeners": [Function],
                          "hasLayer": [Function],
                          "initialize": [Function],
                          "invalidateSize": [Function],
                          "latLngToContainerPoint": [Function],
                          "latLngToLayerPoint": [Function],
                          "layerPointToContainerPoint": [Function],
                          "layerPointToLatLng": [Function],
                          "locate": [Function],
                          "mouseEventToContainerPoint": [Function],
                          "mouseEventToLatLng": [Function],
                          "mouseEventToLayerPoint": [Function],
                          "off": [Function],
                          "on": [Function],
                          "once": [Function],
                          "openPopup": [Function],
                          "options": Object {
                            "animate": false,
                            "attributionControl": true,
                            "bounceAtZoomLimits": true,
                            "bounds": undefined,
                            "boxZoom": true,
                            "center": Object {
                              "lat": 38.8886,
                              "lon": -77.043,
                            },
                            "closePopupOnClick": true,
                            "crs": Object {
                              "Simple": Object {
                                "getSize": [Function],
                                "latLngToPoint": [Function],
                                "pointToLatLng": [Function],
                                "project": [Function],
                                "projection": Object {
                                  "project": [Function],
                                  "unproject": [Function],
                                },
                                "scale": [Function],
                                "transformation": Object {
                                  "_a": 1,
                                  "_b": 0,
                                  "_c": -1,
                                  "_d": 0,
                                },
                              },
                              "code": "EPSG:3857",
                              "getSize": [Function],
                              "latLngToPoint": [Function],
                              "pointToLatLng": [Function],
                              "project": [Function],
                              "projection": Object {
                                "MAX_LATITUDE": 85.0511287798,
                                "project": [Function],
                                "unproject": [Function],
                              },
                              "scale": [Function],
                              "transformation": Object {
                                "_a": 0.15915494309189535,
                                "_b": 0.5,
                                "_c": -0.15915494309189535,
                                "_d": 0.5,
                              },
                            },
                            "doubleClickZoom": true,
                            "dragging": true,
                            "easeLinearity": 0.25,
                            "fadeAnimation": true,
                            "inertia": true,
                            "inertiaDeceleration": 3400,
                            "inertiaMaxSpeed": Infinity,
                            "inertiaThreshold": 18,
                            "keyboard": true,
                            "keyboardPanOffset": 80,
                            "keyboardZoomOffset": 1,
                            "markerZoomAnimation": false,
                            "scrollWheelZoom": true,
                            "tap": true,
                            "tapTolerance": 15,
                            "touchZoom": undefined,
                            "trackResize": true,
                            "worldCopyJump": false,
                            "zoom": 12,
                            "zoomAnimation": true,
                            "zoomAnimationThreshold": 4,
                            "zoomControl": true,
                          },
                          "panBy": [Function],
                          "panInsideBounds": [Function],
                          "panTo": [Function],
                          "project": [Function],
                          "remove": [Function],
                          "removeControl": [Function],
                          "removeEventListener": [Function],
                          "removeLayer": [Function],
                          "setMaxBounds": [Function],
                          "setView": [Function],
                          "setZoom": [Function],
                          "setZoomAround": [Function],
                          "stopLocate": [Function],
                          "unproject": [Function],
                          "whenReady": [Function],
                          "zoomIn": [Function],
                          "zoomOut": [Function],
                        }
                      }
                      map={
                        MapMock {
                          "_addLayers": [Function],
                          "_animatePathZoom": [Function],
                          "_animateZoom": [Function],
                          "_catchTransitionEnd": [Function],
                          "_checkIfLoaded": [Function],
                          "_clearControlPos": [Function],
                          "_clearHandlers": [Function],
                          "_clearPanes": [Function],
                          "_container": "map1",
                          "_createPane": [Function],
                          "_endPathZoom": [Function],
                          "_fireMouseEvent": [Function],
                          "_getBoundsOffset": [Function],
                          "_getCenterLayerPoint": [Function],
                          "_getCenterOffset": [Function],
                          "_getMapPanePos": [Function],
                          "_getNewTopLeftPoint": [Function],
                          "_getTopLeftPoint": [Function],
                          "_getZoomSpan": [Function],
                          "_handleGeolocationError": [Function],
                          "_handleGeolocationResponse": [Function],
                          "_initContainer": [Function],
                          "_initControlPos": [Function],
                          "_initEvents": [Function],
                          "_initLayout": [Function],
                          "_initPanes": [Function],
                          "_initPathRoot": [Function],
                          "_initialCenter": Object {
                            "lat": 38.8886,
                            "lng": -77.043,
                          },
                          "_latLngToNewLayerPoint": [Function],
                          "_layerAdd": [Function],
                          "_limitCenter": [Function],
                          "_limitOffset": [Function],
                          "_limitZoom": [Function],
                          "_moved": [Function],
                          "_nothingToAnimate": [Function],
                          "_onMouseClick": [Function],
                          "_onPanTransitionEnd": [Function],
                          "_onPanTransitionStep": [Function],
                          "_onResize": [Function],
                          "_onTileLayerLoad": [Function],
                          "_onZoomTransitionEnd": [Function],
                          "_panInsideMaxBounds": [Function],
                          "_rawPanBy": [Function],
                          "_rebound": [Function],
                          "_resetView": [Function],
                          "_tryAnimatedPan": [Function],
                          "_tryAnimatedZoom": [Function],
                          "_updateCanvasViewport": [Function],
                          "_updatePathViewport": [Function],
                          "_updateSvgViewport": [Function],
                          "_updateZoomLevels": [Function],
                          "_zoom": 12,
                          "addControl": [Function],
                          "addEventListener": [Function],
                          "addHandler": [Function],
                          "addLayer": [Function],
                          "addOneTimeEventListener": [Function],
                          "callInitHooks": [Function],
                          "clearAllEventListeners": [Function],
                          "closePopup": [Function],
                          "containerPointToLatLng": [Function],
                          "containerPointToLayerPoint": [Function],
                          "eachLayer": [Function],
                          "fire": [Function],
                          "fireEvent": [Function],
                          "fitBounds": [Function],
                          "fitWorld": [Function],
                          "getBounds": [Function],
                          "getBoundsZoom": [Function],
                          "getCenter": [Function],
                          "getContainer": [Function],
                          "getMaxZoom": [Function],
                          "getMinZoom": [Function],
                          "getPanes": [Function],
                          "getPixelBounds": [Function],
                          "getPixelOrigin": [Function],
                          "getScaleZoom": [Function],
                          "getSize": [Function],
                          "getZoom": [Function],
                          "getZoomScale": [Function],
                          "hasEventListeners": [Function],
                          "hasLayer": [Function],
                          "initialize": [Function],
                          "invalidateSize": [Function],
                          "latLngToContainerPoint": [Function],
                          "latLngToLayerPoint": [Function],
                          "layerPointToContainerPoint": [Function],
                          "layerPointToLatLng": [Function],
                          "locate": [Function],
                          "mouseEventToContainerPoint": [Function],
                          "mouseEventToLatLng": [Function],
                          "mouseEventToLayerPoint": [Function],
                          "off": [Function],
                          "on": [Function],
                          "once": [Function],
                          "openPopup": [Function],
                          "options": Object {
                            "animate": false,
                            "attributionControl": true,
                            "bounceAtZoomLimits": true,
                            "bounds": undefined,
                            "boxZoom": true,
                            "center": Object {
                              "lat": 38.8886,
                              "lon": -77.043,
                            },
                            "closePopupOnClick": true,
                            "crs": Object {
                              "Simple": Object {
                                "getSize": [Function],
                                "latLngToPoint": [Function],
                                "pointToLatLng": [Function],
                                "project": [Function],
                                "projection": Object {
                                  "project": [Function],
                                  "unproject": [Function],
                                },
                                "scale": [Function],
                                "transformation": Object {
                                  "_a": 1,
                                  "_b": 0,
                                  "_c": -1,
                                  "_d": 0,
                                },
                              },
                              "code": "EPSG:3857",
                              "getSize": [Function],
                              "latLngToPoint": [Function],
                              "pointToLatLng": [Function],
                              "project": [Function],
                              "projection": Object {
                                "MAX_LATITUDE": 85.0511287798,
                                "project": [Function],
                                "unproject": [Function],
                              },
                              "scale": [Function],
                              "transformation": Object {
                                "_a": 0.15915494309189535,
                                "_b": 0.5,
                                "_c": -0.15915494309189535,
                                "_d": 0.5,
                              },
                            },
                            "doubleClickZoom": true,
                            "dragging": true,
                            "easeLinearity": 0.25,
                            "fadeAnimation": true,
                            "inertia": true,
                            "inertiaDeceleration": 3400,
                            "inertiaMaxSpeed": Infinity,
                            "inertiaThreshold": 18,
                            "keyboard": true,
                            "keyboardPanOffset": 80,
                            "keyboardZoomOffset": 1,
                            "markerZoomAnimation": false,
                            "scrollWheelZoom": true,
                            "tap": true,
                            "tapTolerance": 15,
                            "touchZoom": undefined,
                            "trackResize": true,
                            "worldCopyJump": false,
                            "zoom": 12,
                            "zoomAnimation": true,
                            "zoomAnimationThreshold": 4,
                            "zoomControl": true,
                          },
                          "panBy": [Function],
                          "panInsideBounds": [Function],
                          "panTo": [Function],
                          "project": [Function],
                          "remove": [Function],
                          "removeControl": [Function],
                          "removeEventListener": [Function],
                          "removeLayer": [Function],
                          "setMaxBounds": [Function],
                          "setView": [Function],
                          "setZoom": [Function],
                          "setZoomAround": [Function],
                          "stopLocate": [Function],
                          "unproject": [Function],
                          "whenReady": [Function],
                          "zoomIn": [Function],
                          "zoomOut": [Function],
                        }
                      }
                      url="mock.url/tile"
                      zIndex={-10}
                    />
                  </div>
                </Map>
              </div>
              <div
                className="ApplicationDock "
              >
                <Connect(SelectProject)
                  location={
                    Object {
                      "action": "POP",
                      "hash": "",
                      "key": null,
                      "pathname": "/",
                      "query": Object {},
                      "search": "",
                      "state": undefined,
                    }
                  }
                  params={Object {}}
                  route={
                    Object {
                      "component": [Function],
                    }
                  }
                  routeParams={Object {}}
                  router={
                    Object {
                      "canGo": [Function],
                      "createHref": [Function],
                      "createKey": [Function],
                      "createLocation": [Function],
                      "createPath": [Function],
                      "getCurrentLocation": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "isActive": [Function],
                      "listen": [Function],
                      "listenBefore": [Function],
                      "location": Object {
                        "action": "POP",
                        "hash": "",
                        "key": null,
                        "pathname": "/",
                        "query": Object {},
                        "search": "",
                        "state": undefined,
                      },
                      "params": Object {},
                      "push": [Function],
                      "replace": [Function],
                      "routes": Array [
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "projects/create",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "component": [Function],
                                  "path": "bundles/create",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "bundles/:bundleId/edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "grids/create",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios/create",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "projects/:projectId",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-modifications",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-shapefile",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "modifications/:modificationId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/:variantId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/regional/:regionalAnalysisId",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "scenarios/:scenarioId",
                            },
                            Object {
                              "component": [Function],
                              "path": "*",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "/",
                        },
                        Object {
                          "component": [Function],
                        },
                      ],
                      "setRouteLeaveHook": [Function],
                      "transitionTo": [Function],
                      "unsubscribe": [Function],
                    }
                  }
                  routes={
                    Array [
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "projects/create",
                          },
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "bundles/create",
                              },
                              Object {
                                "component": [Function],
                                "path": "bundles/:bundleId/edit",
                              },
                              Object {
                                "component": [Function],
                                "path": "grids/create",
                              },
                              Object {
                                "component": [Function],
                                "path": "edit",
                              },
                              Object {
                                "component": [Function],
                                "path": "scenarios",
                              },
                              Object {
                                "component": [Function],
                                "path": "scenarios/create",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "projects/:projectId",
                          },
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "edit",
                              },
                              Object {
                                "component": [Function],
                                "path": "import-modifications",
                              },
                              Object {
                                "component": [Function],
                                "path": "import-shapefile",
                              },
                              Object {
                                "component": [Function],
                                "path": "modifications/:modificationId",
                              },
                              Object {
                                "component": [Function],
                                "path": "analysis",
                              },
                              Object {
                                "component": [Function],
                                "path": "analysis/:variantId",
                              },
                              Object {
                                "component": [Function],
                                "path": "analysis/regional/:regionalAnalysisId",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "scenarios/:scenarioId",
                          },
                          Object {
                            "component": [Function],
                            "path": "*",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "/",
                      },
                      Object {
                        "component": [Function],
                      },
                    ]
                  }
                >
                  <SelectProject
                    loadAllProjects={[Function]}
                    location={
                      Object {
                        "action": "POP",
                        "hash": "",
                        "key": null,
                        "pathname": "/",
                        "query": Object {},
                        "search": "",
                        "state": undefined,
                      }
                    }
                    params={Object {}}
                    projects={Array []}
                    push={[Function]}
                    route={
                      Object {
                        "component": [Function],
                      }
                    }
                    routeParams={Object {}}
                    router={
                      Object {
                        "canGo": [Function],
                        "createHref": [Function],
                        "createKey": [Function],
                        "createLocation": [Function],
                        "createPath": [Function],
                        "getCurrentLocation": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "isActive": [Function],
                        "listen": [Function],
                        "listenBefore": [Function],
                        "location": Object {
                          "action": "POP",
                          "hash": "",
                          "key": null,
                          "pathname": "/",
                          "query": Object {},
                          "search": "",
                          "state": undefined,
                        },
                        "params": Object {},
                        "push": [Function],
                        "replace": [Function],
                        "routes": Array [
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "projects/create",
                              },
                              Object {
                                "childRoutes": Array [
                                  Object {
                                    "component": [Function],
                                    "path": "bundles/create",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "bundles/:bundleId/edit",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "grids/create",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "edit",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "scenarios",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "scenarios/create",
                                  },
                                ],
                                "component": [Function],
                                "indexRoute": Object {
                                  "component": [Function],
                                },
                                "path": "projects/:projectId",
                              },
                              Object {
                                "childRoutes": Array [
                                  Object {
                                    "component": [Function],
                                    "path": "edit",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "import-modifications",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "import-shapefile",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "modifications/:modificationId",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "analysis",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "analysis/:variantId",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "analysis/regional/:regionalAnalysisId",
                                  },
                                ],
                                "component": [Function],
                                "indexRoute": Object {
                                  "component": [Function],
                                },
                                "path": "scenarios/:scenarioId",
                              },
                              Object {
                                "component": [Function],
                                "path": "*",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "/",
                          },
                          Object {
                            "component": [Function],
                          },
                        ],
                        "setRouteLeaveHook": [Function],
                        "transitionTo": [Function],
                        "unsubscribe": [Function],
                      }
                    }
                    routes={
                      Array [
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "projects/create",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "component": [Function],
                                  "path": "bundles/create",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "bundles/:bundleId/edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "grids/create",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios/create",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "projects/:projectId",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-modifications",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-shapefile",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "modifications/:modificationId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/:variantId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/regional/:regionalAnalysisId",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "scenarios/:scenarioId",
                            },
                            Object {
                              "component": [Function],
                              "path": "*",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "/",
                        },
                        Object {
                          "component": [Function],
                        },
                      ]
                    }
                  >
                    <div
                      className="InnerDock"
                    >
                      <Body>
                        <div
                          className="panel-body"
                        >
                          <div
                            className="WelcomeTitle"
                          >
                            <p
                              style={
                                Object {
                                  "textAlign": "center",
                                }
                              }
                            >
                              welcome to
                            </p>
                            <span
                              className="logo"
                              to="/"
                            >
                              conveyal analysis 
                            </span>
                            <span
                              className="badge"
                            >
                              beta
                            </span>
                          </div>
                          <Group>
                            <div
                              className="form-group"
                            >
                              <Button
                                block={true}
                                onClick={[Function]}
                                style="success"
                              >
                                <a
                                  className="btn btn-success btn-block"
                                  href="#"
                                  onClick={[Function]}
                                  tabIndex={0}
                                >
                                  <Icon
                                    type="cubes"
                                  >
                                    <i
                                      className="fa fa-cubes fa-fw "
                                    />
                                  </Icon>
                                   
                                  Create a new Project
                                </a>
                              </Button>
                            </div>
                          </Group>
                        </div>
                      </Body>
                    </div>
                  </SelectProject>
                </Connect(SelectProject)>
              </div>
            </div>
          </Application>
        </Connect(Application)>
      </RouterContext>
    </Router>
  </Routes>
</Provider>
`;
