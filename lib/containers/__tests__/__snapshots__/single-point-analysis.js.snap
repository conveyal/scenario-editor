// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`constainers/single-point-analysis 1`] = `
<Connect(SinglePointAnalysis)
  setMapChildren={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <SinglePointAnalysis
    abortFetchTravelTimeSurface={[Function]}
    analysisBounds={
      Object {
        "east": -76,
        "north": 39,
        "south": 38,
        "west": -77,
      }
    }
    bundles={
      Array [
        Object {
          "_id": "1",
          "accessGroup": "accessGroupName",
          "centerLat": 38.90124,
          "centerLon": -77.015615,
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "errorCode": "",
          "feeds": Array [],
          "name": "Mock Bundle",
          "nonce": "12345",
          "regionId": "1",
          "serviceEnd": "2018-09-28",
          "serviceStart": "2018-09-27",
          "status": "DONE",
          "totalFeeds": 0,
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
        },
      ]
    }
    clearComparisonProject={[Function]}
    clearTravelTimeSurfaces={[Function]}
    comparisonDestinationTravelTimeDistribution={null}
    comparisonIsochrone={null}
    createRegionalAnalysis={[Function]}
    currentBundle={
      Object {
        "_id": "1",
        "accessGroup": "accessGroupName",
        "centerLat": 38.90124,
        "centerLon": -77.015615,
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "errorCode": "",
        "feeds": Array [],
        "name": "Mock Bundle",
        "nonce": "12345",
        "regionId": "1",
        "serviceEnd": "2018-09-28",
        "serviceStart": "2018-09-27",
        "status": "DONE",
        "totalFeeds": 0,
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
      }
    }
    currentProject={
      Object {
        "_id": "1",
        "accessGroup": "accessGroupName",
        "bundleId": "1",
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "name": "Mock Project",
        "nonce": "12345",
        "regionId": "1",
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variants": Array [
          "Default",
        ],
      }
    }
    destinationTravelTimeDistribution={null}
    downloadIsochrone={[Function]}
    fetchGeoTIFF={[Function]}
    fetchTravelTimeSurface={[Function]}
    isochrone={null}
    isochroneCutoff={60}
    isochroneFetchStatus={false}
    loadAllRegionalAnalyses={[Function]}
    profileRequest={
      Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      }
    }
    profileRequestHasChanged={true}
    profileRequestLonLat={
      Object {
        "lat": 38.5,
        "lon": -76.5,
      }
    }
    projects={
      Array [
        Object {
          "_id": "1",
          "accessGroup": "accessGroupName",
          "bundleId": "1",
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "name": "Mock Project",
          "nonce": "12345",
          "regionId": "1",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            "Default",
          ],
        },
      ]
    }
    regionBounds={
      Object {
        "east": -76,
        "north": 39,
        "south": 38,
        "west": -77,
      }
    }
    regionId="1"
    regionalAnalyses={Array []}
    removeDestination={[Function]}
    setComparisonProject={[Function]}
    setDestination={[Function]}
    setMapChildren={
      [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    setProfileRequest={[Function]}
  >
    <AnalysisTitle
      abortFetchTravelTimeSurface={[Function]}
      createRegionalAnalysis={[Function]}
      disableCreateRegionalAnalysis={true}
      disableFetchTravelTimeSurface={false}
      fetchTravelTimeSurface={[Function]}
      isochroneFetchStatus={false}
    >
      <div
        className="ApplicationDockTitle"
        style={
          Object {
            "width": "640px",
          }
        }
      >
        <div>
          <Icon
            icon={
              Object {
                "icon": Array [],
                "iconName": "chart-area",
                "prefix": "fas",
              }
            }
          >
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={true}
              flip={null}
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "chart-area",
                  "prefix": "fas",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              swapOpacity={false}
              symbol={false}
              title=""
              transform={null}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-chart-area fa-w-NaN fa-fw "
                data-icon="chart-area"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 undefined undefined"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </FontAwesomeIcon>
          </Icon>
           
          Analysis
        </div>
        <div>
          <Button
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            size="sm"
            style="primary"
            title=""
          >
            <a
              className="btn btn-primary btn-sm pull-right"
              disabled={false}
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title=""
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "sync",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "sync",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-sync fa-w-NaN fa-fw "
                    data-icon="sync"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
               
              Fetch results
            </a>
          </Button>
          <Button
            className="pad-right pull-right"
            disabled={true}
            onClick={[Function]}
            size="sm"
            style="success"
            title="Fetch results for a single point before running a regional analysis"
          >
            <a
              className="btn btn-success btn-sm pad-right pull-right"
              disabled={true}
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title="Fetch results for a single point before running a regional analysis"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "plus",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "plus",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-plus fa-w-NaN fa-fw "
                    data-icon="plus"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
              New regional analysis
            </a>
          </Button>
        </div>
      </div>
    </AnalysisTitle>
    <InnerDock
      className="block"
      style={
        Object {
          "width": "640px",
        }
      }
    >
      <div
        className="InnerDock block"
        style={
          Object {
            "height": "100vh",
            "width": "640px",
          }
        }
      >
        <div
          className="row"
        >
          <Group
            className="col-xs-6"
            label="Project"
          >
            <div
              className="form-group col-xs-6"
            >
              <label
                className="control-label"
                htmlFor="project-input-0"
              >
                Project
              </label>
              <S
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                isDisabled={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "_id": "1",
                      "accessGroup": "accessGroupName",
                      "bundleId": "1",
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "name": "Mock Project",
                      "nonce": "12345",
                      "regionId": "1",
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variants": Array [
                        "Default",
                      ],
                    },
                  ]
                }
                value={
                  Object {
                    "_id": "1",
                    "accessGroup": "accessGroupName",
                    "bundleId": "1",
                    "createdAt": "2017-11-08T12:30:50.133Z",
                    "createdBy": "person@gmail.com",
                    "name": "Mock Project",
                    "nonce": "12345",
                    "regionId": "1",
                    "updatedAt": "2017-11-08T12:31:19.602Z",
                    "updatedBy": "person@gmail.com",
                    "variants": Array [
                      "Default",
                    ],
                  }
                }
              >
                <ReactSelect
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isDisabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "_id": "1",
                        "accessGroup": "accessGroupName",
                        "bundleId": "1",
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "name": "Mock Project",
                        "nonce": "12345",
                        "regionId": "1",
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variants": Array [
                          "Default",
                        ],
                      },
                    ]
                  }
                  styles={
                    Object {
                      "control": [Function],
                      "option": [Function],
                    }
                  }
                  value={
                    Object {
                      "_id": "1",
                      "accessGroup": "accessGroupName",
                      "bundleId": "1",
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "name": "Mock Project",
                      "nonce": "12345",
                      "regionId": "1",
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variants": Array [
                        "Default",
                      ],
                    }
                  }
                >
                  <div
                    className="ReactSelectMock"
                  />
                </ReactSelect>
              </S>
            </div>
          </Group>
          <Group
            className="col-xs-6"
            label="Scenario"
          >
            <div
              className="form-group col-xs-6"
            >
              <label
                className="control-label"
                htmlFor="scenario-input-1"
              >
                Scenario
              </label>
              <S
                isDisabled={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "Baseline",
                      "value": -1,
                    },
                    Object {
                      "label": "Default",
                      "value": 0,
                    },
                  ]
                }
                value={
                  Object {
                    "label": "Default",
                    "value": 0,
                  }
                }
              >
                <ReactSelect
                  isDisabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Baseline",
                        "value": -1,
                      },
                      Object {
                        "label": "Default",
                        "value": 0,
                      },
                    ]
                  }
                  styles={
                    Object {
                      "control": [Function],
                      "option": [Function],
                    }
                  }
                  value={
                    Object {
                      "label": "Default",
                      "value": 0,
                    }
                  }
                >
                  <div
                    className="ReactSelectMock"
                  />
                </ReactSelect>
              </S>
            </div>
          </Group>
        </div>
        <div
          className="row"
        >
          <Group
            className="col-xs-6"
            label="Comparison Project"
          >
            <div
              className="form-group col-xs-6"
            >
              <label
                className="control-label"
                htmlFor="comparison-project-input-2"
              >
                Comparison Project
              </label>
              <S
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                isClearable={true}
                isDisabled={false}
                name="Project"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "_id": "1",
                      "accessGroup": "accessGroupName",
                      "bundleId": "1",
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "name": "Mock Project",
                      "nonce": "12345",
                      "regionId": "1",
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variants": Array [
                        "Default",
                      ],
                    },
                  ]
                }
                placeholder="Select comparison project…"
              >
                <ReactSelect
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isClearable={true}
                  isDisabled={false}
                  name="Project"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "_id": "1",
                        "accessGroup": "accessGroupName",
                        "bundleId": "1",
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "name": "Mock Project",
                        "nonce": "12345",
                        "regionId": "1",
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variants": Array [
                          "Default",
                        ],
                      },
                    ]
                  }
                  placeholder="Select comparison project…"
                  styles={
                    Object {
                      "control": [Function],
                      "option": [Function],
                    }
                  }
                >
                  <div
                    className="ReactSelectMock"
                  />
                </ReactSelect>
              </S>
            </div>
          </Group>
          <Group
            className="col-xs-6"
            label="Comparison Scenario"
          >
            <div
              className="form-group col-xs-6"
            >
              <label
                className="control-label"
                htmlFor="comparison-scenario-input-3"
              >
                Comparison Scenario
              </label>
              <S
                isDisabled={true}
                name="Scenario"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "Baseline",
                      "value": -1,
                    },
                  ]
                }
                placeholder="Select comparison scenario…"
              >
                <ReactSelect
                  isDisabled={true}
                  name="Scenario"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Baseline",
                        "value": -1,
                      },
                    ]
                  }
                  placeholder="Select comparison scenario…"
                  styles={
                    Object {
                      "control": [Function],
                      "option": [Function],
                    }
                  }
                >
                  <div
                    className="ReactSelectMock"
                  />
                </ReactSelect>
              </S>
            </div>
          </Group>
        </div>
        <div
          className="row"
        >
          <Group
            className="col-xs-12"
            label="Opportunity Dataset"
          >
            <div
              className="form-group col-xs-12"
            >
              <label
                className="control-label"
                htmlFor="opportunity-dataset-input-4"
              >
                Opportunity Dataset
              </label>
              <OpportunityDatasetSelector
                isDisabled={false}
                regionId="1"
              >
                <S
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  isClearable={true}
                  isDisabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "_id": "Workers_total",
                        "name": "Workers total",
                        "sourceName": "lodes-data-2014",
                      },
                    ]
                  }
                >
                  <ReactSelect
                    getOptionLabel={[Function]}
                    getOptionValue={[Function]}
                    isClearable={true}
                    isDisabled={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "_id": "Workers_total",
                          "name": "Workers total",
                          "sourceName": "lodes-data-2014",
                        },
                      ]
                    }
                    styles={
                      Object {
                        "control": [Function],
                        "option": [Function],
                      }
                    }
                  >
                    <div
                      className="ReactSelectMock"
                    />
                  </ReactSelect>
                </S>
              </OpportunityDatasetSelector>
            </div>
          </Group>
        </div>
        <div
          className="row"
        >
          <Group
            className="col-xs-12"
            label="Time cutoff: 60 minutes"
          >
            <div
              className="form-group col-xs-12"
            >
              <label
                className="control-label"
                htmlFor="time-cutoff-60-minutes-input-5"
              >
                Time cutoff: 60 minutes
              </label>
              <input
                disabled={true}
                max={120}
                min={1}
                onChange={[Function]}
                title="Travel time cutoff (minutes)"
                type="range"
                value={60}
              />
            </div>
          </Group>
        </div>
        <Connect(StackedPercentileSelector)
          disabled={false}
          stale={true}
        >
          <StackedPercentileSelector
            accessibility={null}
            comparisonAccessibility={null}
            comparisonInProgress={false}
            comparisonPercentileCurves={null}
            comparisonProjectName="Not set"
            disabled={false}
            dispatch={[Function]}
            isochroneCutoff={60}
            maxAccessibility={-Infinity}
            nearestPercentile={50}
            projectName="Not set"
            stale={true}
          />
        </Connect(StackedPercentileSelector)>
        <Connect(BookmarkChooser)
          disabled={false}
        >
          <BookmarkChooser
            bookmarkData={
              Object {
                "opportunityDataset": undefined,
                "profileRequest": Object {
                  "accessModes": "WALK",
                  "bikeSafe": 1,
                  "bikeSlope": 1,
                  "bikeSpeed": 4.166666666666667,
                  "bikeTime": 1,
                  "bounds": Object {
                    "east": -76,
                    "north": 39,
                    "south": 38,
                    "west": -77,
                  },
                  "bundleId": "1",
                  "date": "2016-01-16",
                  "defaultExpanded": true,
                  "directModes": "WALK",
                  "egressModes": "WALK",
                  "fromLat": 12,
                  "fromLon": 34,
                  "fromTime": 25200,
                  "maxBikeTime": 20,
                  "maxRides": 4,
                  "maxTripDurationMinutes": 60,
                  "maxWalkTime": 20,
                  "monteCarloDraws": 200,
                  "name": "Profile Request Test",
                  "projectId": "1",
                  "reachabilityThreshold": 0,
                  "regionId": "1",
                  "toTime": 32400,
                  "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                  "travelTimePercentile": 50,
                  "variantIndex": 0,
                  "walkSpeed": 1.3888888888888888,
                  "workerVersion": "v4.0.0",
                },
                "regionId": "1",
              }
            }
            bookmarks={Array []}
            createBookmark={[Function]}
            disabled={false}
            selectBookmark={[Function]}
          >
            <Group
              label="Bookmark"
            >
              <div
                className="form-group"
              >
                <label
                  className="control-label"
                  htmlFor="bookmark-input-6"
                >
                  Bookmark
                </label>
                <div
                  className="row"
                >
                  <div
                    className="col-xs-6"
                  >
                    <S
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      isDisabled={false}
                      onChange={[Function]}
                      options={Array []}
                    >
                      <ReactSelect
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        isDisabled={false}
                        onChange={[Function]}
                        options={Array []}
                        styles={
                          Object {
                            "control": [Function],
                            "option": [Function],
                          }
                        }
                      >
                        <div
                          className="ReactSelectMock"
                        />
                      </ReactSelect>
                    </S>
                  </div>
                  <div
                    className="col-xs-6"
                  >
                    <Button
                      block={true}
                      disabled={false}
                      onClick={[Function]}
                      style="success"
                    >
                      <a
                        className="btn btn-success btn-block"
                        disabled={false}
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "plus",
                              "prefix": "fas",
                            }
                          }
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={true}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "plus",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-plus fa-w-NaN fa-fw "
                              data-icon="plus"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 undefined undefined"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </Icon>
                         
                        Create bookmark
                      </a>
                    </Button>
                  </div>
                </div>
              </div>
            </Group>
          </BookmarkChooser>
        </Connect(BookmarkChooser)>
        <ProfileRequestEditor
          bundleOutOfDate="Selected date <strong>2016-01-16</strong> is out of service for project <strong>Mock Project</strong>. Its bundle <strong>Mock Bundle</strong> only has service between <strong>2018-09-27</strong> and <strong>2018-09-28</strong>. There may also be days in between without service. Please be certain of your GTFS service dates and select an appropriate one below."
          disabled={false}
          profileRequest={
            Object {
              "accessModes": "WALK",
              "bikeSafe": 1,
              "bikeSlope": 1,
              "bikeSpeed": 4.166666666666667,
              "bikeTime": 1,
              "bounds": Object {
                "east": -76,
                "north": 39,
                "south": 38,
                "west": -77,
              },
              "bundleId": "1",
              "date": "2016-01-16",
              "defaultExpanded": true,
              "directModes": "WALK",
              "egressModes": "WALK",
              "fromLat": 12,
              "fromLon": 34,
              "fromTime": 25200,
              "maxBikeTime": 20,
              "maxRides": 4,
              "maxTripDurationMinutes": 60,
              "maxWalkTime": 20,
              "monteCarloDraws": 200,
              "name": "Profile Request Test",
              "projectId": "1",
              "reachabilityThreshold": 0,
              "regionId": "1",
              "toTime": 32400,
              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
              "travelTimePercentile": 50,
              "variantIndex": 0,
              "walkSpeed": 1.3888888888888888,
              "workerVersion": "v4.0.0",
            }
          }
          setProfileRequest={[Function]}
        >
          <ModeSelector
            accessModes="WALK"
            directModes="WALK"
            disabled={false}
            transitModes="BUS,TRAM,RAIL,SUBWAY"
            update={[Function]}
          >
            <div
              className="row"
            >
              <Group
                className="col-xs-4"
                label="Access mode"
              >
                <div
                  className="form-group col-xs-4"
                >
                  <label
                    className="control-label"
                    htmlFor="access-mode-input-7"
                  >
                    Access mode
                  </label>
                  <Group
                    justified={true}
                  >
                    <div
                      className="btn-group btn-group-justified"
                    >
                      <Button
                        active={true}
                        disabled={false}
                        onClick={[Function]}
                        title="Walk"
                      >
                        <a
                          className="btn btn-default active"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Walk"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "walking",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "walking",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-walking fa-w-NaN fa-fw "
                                data-icon="walking"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Bike"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Bike"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "bicycle",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "bicycle",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-bicycle fa-w-NaN fa-fw "
                                data-icon="bicycle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Automobile (drop-off)"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Automobile (drop-off)"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "car",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "car",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-car fa-w-NaN fa-fw "
                                data-icon="car"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Automobile (park-and-ride)"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Automobile (park-and-ride)"
                        >
                          <strong>
                            P
                          </strong>
                        </a>
                      </Button>
                    </div>
                  </Group>
                </div>
              </Group>
              <Group
                className="col-xs-8"
                label="Transit modes"
              >
                <div
                  className="form-group col-xs-8"
                >
                  <label
                    className="control-label"
                    htmlFor="transit-modes-input-8"
                  >
                    Transit modes
                  </label>
                  <Group
                    justified={true}
                  >
                    <div
                      className="btn-group btn-group-justified"
                    >
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="All"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="All"
                        >
                          All
                        </a>
                      </Button>
                      <Button
                        active={true}
                        disabled={false}
                        onClick={[Function]}
                        title="Bus"
                      >
                        <a
                          className="btn btn-default active"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Bus"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "bus",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "bus",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-bus fa-w-NaN fa-fw "
                                data-icon="bus"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={true}
                        disabled={false}
                        onClick={[Function]}
                        title="Tram, Streetcar, Light rail"
                      >
                        <a
                          className="btn btn-default active"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Tram, Streetcar, Light rail"
                        >
                          <strong>
                            T
                          </strong>
                        </a>
                      </Button>
                      <Button
                        active={true}
                        disabled={false}
                        onClick={[Function]}
                        title="Subway, Metro"
                      >
                        <a
                          className="btn btn-default active"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Subway, Metro"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "subway",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "subway",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-subway fa-w-NaN fa-fw "
                                data-icon="subway"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={true}
                        disabled={false}
                        onClick={[Function]}
                        title="Commuter rail, long-distance rail"
                      >
                        <a
                          className="btn btn-default active"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Commuter rail, long-distance rail"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "train",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "train",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-train fa-w-NaN fa-fw "
                                data-icon="train"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Ferry, long-distance boat"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Ferry, long-distance boat"
                        >
                          <Icon
                            icon={
                              Object {
                                "icon": Array [],
                                "iconName": "ship",
                                "prefix": "fas",
                              }
                            }
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={true}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "ship",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-ship fa-w-NaN fa-fw "
                                data-icon="ship"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 undefined undefined"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </Icon>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Cable car"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Cable car"
                        >
                          <strong>
                            C
                          </strong>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Gondola"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Gondola"
                        >
                          <strong>
                            G
                          </strong>
                        </a>
                      </Button>
                      <Button
                        active={false}
                        disabled={false}
                        onClick={[Function]}
                        title="Funicular"
                      >
                        <a
                          className="btn btn-default"
                          disabled={false}
                          href="#"
                          onClick={[Function]}
                          tabIndex={0}
                          title="Funicular"
                        >
                          <strong>
                            F
                          </strong>
                        </a>
                      </Button>
                    </div>
                  </Group>
                </div>
              </Group>
            </div>
          </ModeSelector>
          <div
            className="row"
          >
            <div
              className="col-xs-12"
            >
              <div
                className="alert alert-warning"
              >
                <strong>
                  Warning! 
                </strong>
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "Selected date <strong>2016-01-16</strong> is out of service for project <strong>Mock Project</strong>. Its bundle <strong>Mock Bundle</strong> only has service between <strong>2018-09-27</strong> and <strong>2018-09-28</strong>. There may also be days in between without service. Please be certain of your GTFS service dates and select an appropriate one below.",
                    }
                  }
                />
              </div>
            </div>
            <Group
              className="col-xs-4 has-warning "
              label="Date"
            >
              <div
                className="form-group col-xs-4 has-warning "
              >
                <label
                  className="control-label"
                  htmlFor="date-input-9"
                >
                  Date
                </label>
                <DateTime
                  className=""
                  closeOnSelect={true}
                  closeOnTab={true}
                  dateFormat="YYYY-MM-DD"
                  defaultValue=""
                  input={true}
                  inputProps={
                    Object {
                      "disabled": false,
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onNavigateBack={[Function]}
                  onNavigateForward={[Function]}
                  onViewModeChange={[Function]}
                  strictParsing={true}
                  timeConstraints={Object {}}
                  timeFormat={false}
                  utc={true}
                  value="2016-01-16"
                >
                  <OnClickOutside(Component)
                    className="rdt"
                    eventTypes={
                      Array [
                        "mousedown",
                        "touchstart",
                      ]
                    }
                    excludeScrollbar={false}
                    onClickOut={[Function]}
                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                    preventDefault={false}
                    stopPropagation={false}
                  >
                    <Component
                      className="rdt"
                      disableOnClickOutside={[Function]}
                      enableOnClickOutside={[Function]}
                      eventTypes={
                        Array [
                          "mousedown",
                          "touchstart",
                        ]
                      }
                      onClickOut={[Function]}
                      outsideClickIgnoreClass="ignore-react-onclickoutside"
                      preventDefault={false}
                      stopPropagation={false}
                    >
                      <div
                        className="rdt"
                      >
                        <input
                          className="form-control"
                          disabled={false}
                          key="i"
                          onChange={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          type="text"
                          value="2016-01-16"
                        />
                        <div
                          className="rdtPicker"
                          key="dt"
                        >
                          <Component
                            view="days"
                            viewProps={
                              Object {
                                "addTime": [Function],
                                "dateFormat": "YYYY-MM-DD",
                                "handleClickOutside": [Function],
                                "isValidDate": undefined,
                                "localMoment": [Function],
                                "renderDay": undefined,
                                "renderMonth": undefined,
                                "renderYear": undefined,
                                "selectedDate": "2016-01-16T00:00:00.000Z",
                                "setDate": [Function],
                                "setTime": [Function],
                                "showView": [Function],
                                "subtractTime": [Function],
                                "timeConstraints": Object {},
                                "timeFormat": "",
                                "updateOn": "days",
                                "updateSelectedDate": [Function],
                                "value": "2016-01-16",
                                "viewDate": "2016-01-01T00:00:00.000Z",
                              }
                            }
                          >
                            <Component
                              addTime={[Function]}
                              dateFormat="YYYY-MM-DD"
                              handleClickOutside={[Function]}
                              localMoment={[Function]}
                              selectedDate={"2016-01-16T00:00:00.000Z"}
                              setDate={[Function]}
                              setTime={[Function]}
                              showView={[Function]}
                              subtractTime={[Function]}
                              timeConstraints={Object {}}
                              timeFormat=""
                              updateOn="days"
                              updateSelectedDate={[Function]}
                              value="2016-01-16"
                              viewDate={"2016-01-01T00:00:00.000Z"}
                            >
                              <div
                                className="rdtDays"
                              >
                                <table>
                                  <thead
                                    key="th"
                                  >
                                    <tr
                                      key="h"
                                    >
                                      <th
                                        className="rdtPrev"
                                        key="p"
                                        onClick={[Function]}
                                      >
                                        <span>
                                          ‹
                                        </span>
                                      </th>
                                      <th
                                        className="rdtSwitch"
                                        colSpan={5}
                                        data-value={0}
                                        key="s"
                                        onClick={[Function]}
                                      >
                                        January 2016
                                      </th>
                                      <th
                                        className="rdtNext"
                                        key="n"
                                        onClick={[Function]}
                                      >
                                        <span>
                                          ›
                                        </span>
                                      </th>
                                    </tr>
                                    <tr
                                      key="d"
                                    >
                                      <th
                                        className="dow"
                                        key="Su0"
                                      >
                                        Su
                                      </th>
                                      <th
                                        className="dow"
                                        key="Mo1"
                                      >
                                        Mo
                                      </th>
                                      <th
                                        className="dow"
                                        key="Tu2"
                                      >
                                        Tu
                                      </th>
                                      <th
                                        className="dow"
                                        key="We3"
                                      >
                                        We
                                      </th>
                                      <th
                                        className="dow"
                                        key="Th4"
                                      >
                                        Th
                                      </th>
                                      <th
                                        className="dow"
                                        key="Fr5"
                                      >
                                        Fr
                                      </th>
                                      <th
                                        className="dow"
                                        key="Sa6"
                                      >
                                        Sa
                                      </th>
                                    </tr>
                                  </thead>
                                  <tbody
                                    key="tb"
                                  >
                                    <tr
                                      key="1_2"
                                    >
                                      <td
                                        className="rdtDay rdtOld"
                                        data-value={27}
                                        key="12_27"
                                        onClick={[Function]}
                                      >
                                        27
                                      </td>
                                      <td
                                        className="rdtDay rdtOld"
                                        data-value={28}
                                        key="12_28"
                                        onClick={[Function]}
                                      >
                                        28
                                      </td>
                                      <td
                                        className="rdtDay rdtOld"
                                        data-value={29}
                                        key="12_29"
                                        onClick={[Function]}
                                      >
                                        29
                                      </td>
                                      <td
                                        className="rdtDay rdtOld"
                                        data-value={30}
                                        key="12_30"
                                        onClick={[Function]}
                                      >
                                        30
                                      </td>
                                      <td
                                        className="rdtDay rdtOld"
                                        data-value={31}
                                        key="12_31"
                                        onClick={[Function]}
                                      >
                                        31
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={1}
                                        key="1_1"
                                        onClick={[Function]}
                                      >
                                        1
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={2}
                                        key="1_2"
                                        onClick={[Function]}
                                      >
                                        2
                                      </td>
                                    </tr>
                                    <tr
                                      key="1_9"
                                    >
                                      <td
                                        className="rdtDay"
                                        data-value={3}
                                        key="1_3"
                                        onClick={[Function]}
                                      >
                                        3
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={4}
                                        key="1_4"
                                        onClick={[Function]}
                                      >
                                        4
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={5}
                                        key="1_5"
                                        onClick={[Function]}
                                      >
                                        5
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={6}
                                        key="1_6"
                                        onClick={[Function]}
                                      >
                                        6
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={7}
                                        key="1_7"
                                        onClick={[Function]}
                                      >
                                        7
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={8}
                                        key="1_8"
                                        onClick={[Function]}
                                      >
                                        8
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={9}
                                        key="1_9"
                                        onClick={[Function]}
                                      >
                                        9
                                      </td>
                                    </tr>
                                    <tr
                                      key="1_16"
                                    >
                                      <td
                                        className="rdtDay"
                                        data-value={10}
                                        key="1_10"
                                        onClick={[Function]}
                                      >
                                        10
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={11}
                                        key="1_11"
                                        onClick={[Function]}
                                      >
                                        11
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={12}
                                        key="1_12"
                                        onClick={[Function]}
                                      >
                                        12
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={13}
                                        key="1_13"
                                        onClick={[Function]}
                                      >
                                        13
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={14}
                                        key="1_14"
                                        onClick={[Function]}
                                      >
                                        14
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={15}
                                        key="1_15"
                                        onClick={[Function]}
                                      >
                                        15
                                      </td>
                                      <td
                                        className="rdtDay rdtActive"
                                        data-value={16}
                                        key="1_16"
                                        onClick={[Function]}
                                      >
                                        16
                                      </td>
                                    </tr>
                                    <tr
                                      key="1_23"
                                    >
                                      <td
                                        className="rdtDay"
                                        data-value={17}
                                        key="1_17"
                                        onClick={[Function]}
                                      >
                                        17
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={18}
                                        key="1_18"
                                        onClick={[Function]}
                                      >
                                        18
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={19}
                                        key="1_19"
                                        onClick={[Function]}
                                      >
                                        19
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={20}
                                        key="1_20"
                                        onClick={[Function]}
                                      >
                                        20
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={21}
                                        key="1_21"
                                        onClick={[Function]}
                                      >
                                        21
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={22}
                                        key="1_22"
                                        onClick={[Function]}
                                      >
                                        22
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={23}
                                        key="1_23"
                                        onClick={[Function]}
                                      >
                                        23
                                      </td>
                                    </tr>
                                    <tr
                                      key="1_30"
                                    >
                                      <td
                                        className="rdtDay"
                                        data-value={24}
                                        key="1_24"
                                        onClick={[Function]}
                                      >
                                        24
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={25}
                                        key="1_25"
                                        onClick={[Function]}
                                      >
                                        25
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={26}
                                        key="1_26"
                                        onClick={[Function]}
                                      >
                                        26
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={27}
                                        key="1_27"
                                        onClick={[Function]}
                                      >
                                        27
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={28}
                                        key="1_28"
                                        onClick={[Function]}
                                      >
                                        28
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={29}
                                        key="1_29"
                                        onClick={[Function]}
                                      >
                                        29
                                      </td>
                                      <td
                                        className="rdtDay"
                                        data-value={30}
                                        key="1_30"
                                        onClick={[Function]}
                                      >
                                        30
                                      </td>
                                    </tr>
                                    <tr
                                      key="2_6"
                                    >
                                      <td
                                        className="rdtDay"
                                        data-value={31}
                                        key="1_31"
                                        onClick={[Function]}
                                      >
                                        31
                                      </td>
                                      <td
                                        className="rdtDay rdtNew"
                                        data-value={1}
                                        key="2_1"
                                        onClick={[Function]}
                                      >
                                        1
                                      </td>
                                      <td
                                        className="rdtDay rdtNew"
                                        data-value={2}
                                        key="2_2"
                                        onClick={[Function]}
                                      >
                                        2
                                      </td>
                                      <td
                                        className="rdtDay rdtNew"
                                        data-value={3}
                                        key="2_3"
                                        onClick={[Function]}
                                      >
                                        3
                                      </td>
                                      <td
                                        className="rdtDay rdtNew"
                                        data-value={4}
                                        key="2_4"
                                        onClick={[Function]}
                                      >
                                        4
                                      </td>
                                      <td
                                        className="rdtDay rdtNew"
                                        data-value={5}
                                        key="2_5"
                                        onClick={[Function]}
                                      >
                                        5
                                      </td>
                                      <td
                                        className="rdtDay rdtNew"
                                        data-value={6}
                                        key="2_6"
                                        onClick={[Function]}
                                      >
                                        6
                                      </td>
                                    </tr>
                                  </tbody>
                                </table>
                              </div>
                            </Component>
                          </Component>
                        </div>
                      </div>
                    </Component>
                  </OnClickOutside(Component)>
                </DateTime>
              </div>
            </Group>
            <div
              className="col-xs-4"
            >
              <TimePicker
                disabled={false}
                label="From time"
                name="fromTime"
                onChange={[Function]}
                value={25200}
              >
                <Group
                  className=""
                  label="From time"
                >
                  <div
                    className="form-group"
                  >
                    <label
                      className="control-label"
                      htmlFor="from-time-input-10"
                    >
                      From time
                    </label>
                    <Input
                      disabled={false}
                      name="fromTime"
                      onChange={[Function]}
                      type="text"
                      units="hh:mm"
                      value="07:00"
                    >
                      <div
                        className="InputWithUnits"
                      >
                        <input
                          className="form-control"
                          disabled={false}
                          id="from-time-input-11"
                          name="fromTime"
                          onChange={[Function]}
                          type="text"
                          units="hh:mm"
                          value="07:00"
                        />
                        <span
                          className="InputUnits"
                        >
                          hh:mm
                        </span>
                      </div>
                    </Input>
                  </div>
                </Group>
              </TimePicker>
            </div>
            <div
              className="col-xs-4"
            >
              <TimePicker
                disabled={false}
                label="To time"
                name="toTime"
                onChange={[Function]}
                value={32400}
              >
                <Group
                  className=""
                  label="To time"
                >
                  <div
                    className="form-group"
                  >
                    <label
                      className="control-label"
                      htmlFor="to-time-input-12"
                    >
                      To time
                    </label>
                    <Input
                      disabled={false}
                      name="toTime"
                      onChange={[Function]}
                      type="text"
                      units="hh:mm"
                      value="09:00"
                    >
                      <div
                        className="InputWithUnits"
                      >
                        <input
                          className="form-control"
                          disabled={false}
                          id="to-time-input-13"
                          name="toTime"
                          onChange={[Function]}
                          type="text"
                          units="hh:mm"
                          value="09:00"
                        />
                        <span
                          className="InputUnits"
                        >
                          hh:mm
                        </span>
                      </div>
                    </Input>
                  </div>
                </Group>
              </TimePicker>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="col-xs-12"
            >
              <SelectR5Version
                disabled={false}
              >
                <Group
                  label="Routing engine"
                >
                  <div
                    className="form-group"
                  >
                    <label
                      className="control-label"
                      htmlFor="routing-engine-input-16"
                    >
                      Routing engine
                    </label>
                    <Creatable
                      formatCreateLabel={[Function]}
                      isDisabled={false}
                      isValidNewOption={[Function]}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "v4.7.0 (recommended)",
                            "value": "v4.7.0",
                          },
                        ]
                      }
                      styles={
                        Object {
                          "control": [Function],
                          "option": [Function],
                        }
                      }
                      value={
                        Object {
                          "label": "v4.7.0 (recommended)",
                          "value": "v4.7.0",
                        }
                      }
                    >
                      <div
                        className="ReactSelect/Creatable"
                      />
                    </Creatable>
                  </div>
                </Group>
              </SelectR5Version>
            </div>
          </div>
        </ProfileRequestEditor>
        <Slider
          disabled={true}
          label="Travel time percentile: 50 (single-point), 50 (regional)"
          max={99}
          min={1}
          onChange={[Function]}
          step={1}
          value={50}
        >
          <Group
            disabled={true}
            id="travel-time-percentile-50-single-point-50-regional-input-15"
            label="Travel time percentile: 50 (single-point), 50 (regional)"
            max={99}
            min={1}
            onChange={[Function]}
            step={1}
            value={50}
          >
            <div
              className="form-group"
            >
              <label
                className="control-label"
                htmlFor="travel-time-percentile-50-single-point-50-regional-input-15"
              >
                Travel time percentile: 50 (single-point), 50 (regional)
              </label>
              <input
                className="form-control"
                disabled={true}
                id="travel-time-percentile-50-single-point-50-regional-input-15"
                label="Travel time percentile: 50 (single-point), 50 (regional)"
                max={99}
                min={1}
                onChange={[Function]}
                step={1}
                type="range"
                value={50}
              />
            </div>
          </Group>
        </Slider>
        <AdvancedSettings
          disabled={false}
          hideBoundsEditor={[Function]}
          profileRequest={
            Object {
              "accessModes": "WALK",
              "bikeSafe": 1,
              "bikeSlope": 1,
              "bikeSpeed": 4.166666666666667,
              "bikeTime": 1,
              "bounds": Object {
                "east": -76,
                "north": 39,
                "south": 38,
                "west": -77,
              },
              "bundleId": "1",
              "date": "2016-01-16",
              "defaultExpanded": true,
              "directModes": "WALK",
              "egressModes": "WALK",
              "fromLat": 12,
              "fromLon": 34,
              "fromTime": 25200,
              "maxBikeTime": 20,
              "maxRides": 4,
              "maxTripDurationMinutes": 60,
              "maxWalkTime": 20,
              "monteCarloDraws": 200,
              "name": "Profile Request Test",
              "projectId": "1",
              "reachabilityThreshold": 0,
              "regionId": "1",
              "toTime": 32400,
              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
              "travelTimePercentile": 50,
              "variantIndex": 0,
              "walkSpeed": 1.3888888888888888,
              "workerVersion": "v4.0.0",
            }
          }
          regionBounds={
            Object {
              "east": -76,
              "north": 39,
              "south": 38,
              "west": -77,
            }
          }
          regionalAnalyses={Array []}
          setProfileRequest={[Function]}
          showBoundsEditor={[Function]}
        >
          <Collapsible
            defaultExpanded={false}
            heading={[Function]}
          >
            <Panel>
              <div
                className="panel panel-default"
              >
                <Heading
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <div
                    className="panel-heading clearfix "
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <Icon
                      icon={
                        Object {
                          "icon": Array [],
                          "iconName": "cog",
                          "prefix": "fas",
                        }
                      }
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={true}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [],
                            "iconName": "cog",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-cog fa-w-NaN fa-fw "
                          data-icon="cog"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 undefined undefined"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </Icon>
                    <strong>
                       Advanced Settings
                    </strong>
                    <span
                      className="pull-right"
                    >
                      <Icon
                        icon={
                          Object {
                            "icon": Array [],
                            "iconName": "caret-right",
                            "prefix": "fas",
                          }
                        }
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={true}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "caret-right",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          swapOpacity={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-caret-right fa-w-NaN fa-fw "
                            data-icon="caret-right"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 undefined undefined"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                      </Icon>
                    </span>
                  </div>
                </Heading>
              </div>
            </Panel>
          </Collapsible>
        </AdvancedSettings>
      </div>
    </InnerDock>
  </SinglePointAnalysis>
</Connect(SinglePointAnalysis)>
`;
