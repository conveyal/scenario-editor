// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Opportunity Datasets > Components > List should render without errors 1`] = `
<ListOpportunityDatasets>
  <Stack
    spacing={5}
  >
    <Styled(div)
      __css={
        Object {
          "& > *:not(style) ~ *:not(style)": Object {
            "marginStart": 0,
            "marginTop": 5,
          },
        }
      }
      className="chakra-stack"
      display="flex"
      flexDirection="column"
    >
      <div
        className="chakra-stack css-ynqzo5"
      >
        <Stack
          key=".2"
          spacing={2}
        >
          <Styled(div)
            __css={
              Object {
                "& > *:not(style) ~ *:not(style)": Object {
                  "marginStart": 0,
                  "marginTop": 2,
                },
              }
            }
            className="chakra-stack"
            display="flex"
            flexDirection="column"
          >
            <div
              className="chakra-stack css-1pifhv5"
            >
              <InternalLink
                key=".0"
                query={
                  Object {
                    "regionId": undefined,
                  }
                }
                to="opportunitiesUpload"
              >
                <Link
                  href="/regions/undefined/opportunities/upload"
                  passHref={true}
                >
                  <Button
                    colorScheme="green"
                    href="/regions/undefined/opportunities/upload"
                    leftIcon={<FaPlus />}
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                  >
                    <Styled(button)
                      __css={
                        Object {
                          "_active": Object {
                            "bg": "green.700",
                          },
                          "_disabled": Object {
                            "boxShadow": "none",
                            "cursor": "not-allowed",
                            "opacity": 0.4,
                          },
                          "_focus": Object {
                            "boxShadow": "outline",
                          },
                          "_hover": Object {
                            "_disabled": Object {
                              "bg": "green.500",
                            },
                            "bg": "green.600",
                          },
                          "alignItems": "center",
                          "appearance": "none",
                          "bg": "green.500",
                          "borderRadius": "md",
                          "color": "white",
                          "display": "inline-flex",
                          "fontSize": "md",
                          "fontWeight": "semibold",
                          "h": 10,
                          "justifyContent": "center",
                          "lineHeight": "1.2",
                          "minW": 10,
                          "outline": "none",
                          "position": "relative",
                          "px": 4,
                          "transition": "all 250ms",
                          "userSelect": "none",
                          "verticalAlign": "middle",
                          "whiteSpace": "nowrap",
                          "width": "auto",
                        }
                      }
                      className="chakra-button"
                      href="/regions/undefined/opportunities/upload"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      type="button"
                    >
                      <button
                        className="chakra-button css-ywjnlx"
                        href="/regions/undefined/opportunities/upload"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        type="button"
                      >
                        <ButtonIcon
                          marginEnd="0.5rem"
                        >
                          <Styled(span)
                            className="chakra-button__icon"
                            marginEnd="0.5rem"
                          >
                            <span
                              className="chakra-button__icon css-ktvjz1"
                            >
                              <FaPlus
                                aria-hidden={true}
                                focusable={false}
                              >
                                <IconBase
                                  aria-hidden={true}
                                  attr={
                                    Object {
                                      "viewBox": "0 0 448 512",
                                    }
                                  }
                                  focusable={false}
                                >
                                  <svg
                                    aria-hidden={true}
                                    fill="currentColor"
                                    focusable={false}
                                    height="1em"
                                    stroke="currentColor"
                                    strokeWidth="0"
                                    style={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    viewBox="0 0 448 512"
                                    width="1em"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                                      key="0"
                                    />
                                  </svg>
                                </IconBase>
                              </FaPlus>
                            </span>
                          </Styled(span)>
                        </ButtonIcon>
                        Upload a new dataset
                      </button>
                    </Styled(button)>
                  </Button>
                </Link>
              </InternalLink>
              <Button
                colorScheme="blue"
                key=".1"
                onClick={[Function]}
              >
                <Styled(button)
                  __css={
                    Object {
                      "_active": Object {
                        "bg": "blue.700",
                      },
                      "_disabled": Object {
                        "boxShadow": "none",
                        "cursor": "not-allowed",
                        "opacity": 0.4,
                      },
                      "_focus": Object {
                        "boxShadow": "outline",
                      },
                      "_hover": Object {
                        "_disabled": Object {
                          "bg": "blue.500",
                        },
                        "bg": "blue.600",
                      },
                      "alignItems": "center",
                      "appearance": "none",
                      "bg": "blue.500",
                      "borderRadius": "md",
                      "color": "white",
                      "display": "inline-flex",
                      "fontSize": "md",
                      "fontWeight": "semibold",
                      "h": 10,
                      "justifyContent": "center",
                      "lineHeight": "1.2",
                      "minW": 10,
                      "outline": "none",
                      "position": "relative",
                      "px": 4,
                      "transition": "all 250ms",
                      "userSelect": "none",
                      "verticalAlign": "middle",
                      "whiteSpace": "nowrap",
                      "width": "auto",
                    }
                  }
                  className="chakra-button"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="chakra-button css-huwc4k"
                    onClick={[Function]}
                    type="button"
                  >
                    Fetch LODES (2015)
                  </button>
                </Styled(button)>
              </Button>
            </div>
          </Styled(div)>
        </Stack>
        <Box
          key=".3"
          textAlign="center"
        >
          <div
            className="css-xi606m"
          >
            <label
              htmlFor="select-opportunity-dataset"
            >
              or select an existing layer
            </label>
          </div>
        </Box>
        <Box
          key=".4"
        >
          <div
            className="css-0"
          >
            <Memo(OpportunityDatasetSelector)>
              <ForwardRef
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                inputId="select-opportunity-dataset"
                isClearable={true}
                isDisabled={false}
                isLoading={false}
                name="select-opportunity-dataset"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "_id": "Workers_total",
                      "name": "Workers total",
                      "sourceName": "lodes-data-2014",
                    },
                  ]
                }
              >
                <ReactSelect
                  getOptionLabel={[Function]}
                  getOptionValue={[Function]}
                  innerRef={
                    Object {
                      "current": undefined,
                    }
                  }
                  inputId="select-opportunity-dataset"
                  isClearable={true}
                  isDisabled={false}
                  isLoading={false}
                  name="select-opportunity-dataset"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "_id": "Workers_total",
                        "name": "Workers total",
                        "sourceName": "lodes-data-2014",
                      },
                    ]
                  }
                  styles={
                    Object {
                      "control": [Function],
                      "menu": [Function],
                      "option": [Function],
                    }
                  }
                >
                  <div
                    className="ReactSelectMock"
                  />
                </ReactSelect>
              </ForwardRef>
            </Memo(OpportunityDatasetSelector)>
          </div>
        </Box>
      </div>
    </Styled(div)>
  </Stack>
</ListOpportunityDatasets>
`;
