// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > Modification > Reroute renders correctly 1`] = `
<RerouteComponent
  allStops={Array []}
  feeds={
    Array [
      Object {
        "checksum": "MOCK",
        "id": "1",
        "routes": Array [
          Object {
            "label": "mock-route-label",
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "name": "Mock Pattern",
                "pattern_id": "mock-pattern-id",
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "end_time": 13579,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
            "route_id": "route1",
          },
        ],
        "stops": Array [
          Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        ],
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      },
    ]
  }
  mapState={
    Object {
      "state": "reroute",
    }
  }
  modification={
    Object {
      "_id": "1234",
      "accessGroup": "accessGroupName",
      "bidirectional": false,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "description": "Mock description",
      "dwellTime": 0,
      "entries": Array [],
      "feed": "1",
      "fromStop": "1",
      "name": "Test Modification",
      "nonce": "12345",
      "projectId": "1",
      "routes": Array [
        "route1",
      ],
      "segmentSpeeds": Array [],
      "segments": Array [],
      "timetables": Array [
        Object {
          "_id": "timetable-id",
          "dwellTime": 10,
          "dwellTimes": Array [
            12,
          ],
          "endTime": 57600,
          "exactTimes": false,
          "friday": true,
          "headwaySecs": 900,
          "modificationId": "1234",
          "modificationName": "Test Modification",
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "phaseAtStop": "",
          "phaseFromStop": "",
          "phaseFromTimetable": "",
          "phaseSeconds": 300,
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "toStop": "2",
      "trips": Array [
        "abcd",
      ],
      "type": "reroute",
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variants": Array [
        true,
      ],
    }
  }
  qualifiedStops={Array []}
  routePatterns={Array []}
  segmentDistances={Array []}
  selectedFeed={
    Object {
      "checksum": "MOCK",
      "id": "1",
      "routes": Array [
        Object {
          "label": "mock-route-label",
          "patterns": Array [
            Object {
              "geometry": Object {
                "coordinates": Array [
                  Array [
                    -122.0246,
                    36.9707,
                  ],
                  Array [
                    -122.0279,
                    37.049,
                  ],
                  Array [
                    -121.9799,
                    37.2299,
                  ],
                  Array [
                    -121.9445,
                    37.324,
                  ],
                  Array [
                    -121.936,
                    37.353,
                  ],
                  Array [
                    -121.924,
                    37.365,
                  ],
                ],
                "type": "LineString",
              },
              "name": "Mock Pattern",
              "pattern_id": "mock-pattern-id",
              "stops": Array [
                Object {
                  "stop_id": "1",
                  "stop_lat": 36.9707,
                  "stop_lon": -122.0246,
                  "stop_name": "Santa Cruz",
                },
                Object {
                  "stop_id": "2",
                  "stop_lat": 37.049,
                  "stop_lon": -122.0279,
                  "stop_name": "Scotts Valley",
                },
              ],
              "trips": Array [
                Object {
                  "duration": 1234,
                  "end_time": 13579,
                  "start_time": 12345,
                  "trip_headsign": "To Downtown",
                  "trip_id": "abcd",
                  "trip_short_name": "The Express",
                },
              ],
            },
          ],
          "route_id": "route1",
        },
      ],
      "stops": Array [
        Object {
          "stop_id": "1",
          "stop_lat": 36.9707,
          "stop_lon": -122.0246,
          "stop_name": "Santa Cruz",
        },
        Object {
          "stop_id": "2",
          "stop_lat": 37.049,
          "stop_lon": -122.0279,
          "stop_name": "Scotts Valley",
        },
      ],
      "stopsById": Object {
        "1": Object {
          "stop_id": "1",
          "stop_lat": 36.9707,
          "stop_lon": -122.0246,
          "stop_name": "Santa Cruz",
        },
        "2": Object {
          "stop_id": "2",
          "stop_lat": 37.049,
          "stop_lon": -122.0279,
          "stop_name": "Scotts Valley",
        },
      },
    }
  }
  setMapState={[MockFunction]}
  stops={Array []}
  update={[MockFunction]}
  updateAndRetrieveFeedData={[MockFunction]}
>
  <SelectFeedRouteAndPatterns
    feeds={
      Array [
        Object {
          "checksum": "MOCK",
          "id": "1",
          "routes": Array [
            Object {
              "label": "mock-route-label",
              "patterns": Array [
                Object {
                  "geometry": Object {
                    "coordinates": Array [
                      Array [
                        -122.0246,
                        36.9707,
                      ],
                      Array [
                        -122.0279,
                        37.049,
                      ],
                      Array [
                        -121.9799,
                        37.2299,
                      ],
                      Array [
                        -121.9445,
                        37.324,
                      ],
                      Array [
                        -121.936,
                        37.353,
                      ],
                      Array [
                        -121.924,
                        37.365,
                      ],
                    ],
                    "type": "LineString",
                  },
                  "name": "Mock Pattern",
                  "pattern_id": "mock-pattern-id",
                  "stops": Array [
                    Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  ],
                  "trips": Array [
                    Object {
                      "duration": 1234,
                      "end_time": 13579,
                      "start_time": 12345,
                      "trip_headsign": "To Downtown",
                      "trip_id": "abcd",
                      "trip_short_name": "The Express",
                    },
                  ],
                },
              ],
              "route_id": "route1",
            },
          ],
          "stops": Array [
            Object {
              "stop_id": "1",
              "stop_lat": 36.9707,
              "stop_lon": -122.0246,
              "stop_name": "Santa Cruz",
            },
            Object {
              "stop_id": "2",
              "stop_lat": 37.049,
              "stop_lon": -122.0279,
              "stop_name": "Scotts Valley",
            },
          ],
          "stopsById": Object {
            "1": Object {
              "stop_id": "1",
              "stop_lat": 36.9707,
              "stop_lon": -122.0246,
              "stop_name": "Santa Cruz",
            },
            "2": Object {
              "stop_id": "2",
              "stop_lat": 37.049,
              "stop_lon": -122.0279,
              "stop_name": "Scotts Valley",
            },
          },
        },
      ]
    }
    onChange={[MockFunction]}
    routePatterns={Array []}
    routes={
      Array [
        "route1",
      ]
    }
    selectedFeed={
      Object {
        "checksum": "MOCK",
        "id": "1",
        "routes": Array [
          Object {
            "label": "mock-route-label",
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "name": "Mock Pattern",
                "pattern_id": "mock-pattern-id",
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "end_time": 13579,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
            "route_id": "route1",
          },
        ],
        "stops": Array [
          Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        ],
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      }
    }
    trips={
      Array [
        "abcd",
      ]
    }
  >
    <SelectFeedAndRoutes
      feeds={
        Array [
          Object {
            "checksum": "MOCK",
            "id": "1",
            "routes": Array [
              Object {
                "label": "mock-route-label",
                "patterns": Array [
                  Object {
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "name": "Mock Pattern",
                    "pattern_id": "mock-pattern-id",
                    "stops": Array [
                      Object {
                        "stop_id": "1",
                        "stop_lat": 36.9707,
                        "stop_lon": -122.0246,
                        "stop_name": "Santa Cruz",
                      },
                      Object {
                        "stop_id": "2",
                        "stop_lat": 37.049,
                        "stop_lon": -122.0279,
                        "stop_name": "Scotts Valley",
                      },
                    ],
                    "trips": Array [
                      Object {
                        "duration": 1234,
                        "end_time": 13579,
                        "start_time": 12345,
                        "trip_headsign": "To Downtown",
                        "trip_id": "abcd",
                        "trip_short_name": "The Express",
                      },
                    ],
                  },
                ],
                "route_id": "route1",
              },
            ],
            "stops": Array [
              Object {
                "stop_id": "1",
                "stop_lat": 36.9707,
                "stop_lon": -122.0246,
                "stop_name": "Santa Cruz",
              },
              Object {
                "stop_id": "2",
                "stop_lat": 37.049,
                "stop_lon": -122.0279,
                "stop_name": "Scotts Valley",
              },
            ],
            "stopsById": Object {
              "1": Object {
                "stop_id": "1",
                "stop_lat": 36.9707,
                "stop_lon": -122.0246,
                "stop_name": "Santa Cruz",
              },
              "2": Object {
                "stop_id": "2",
                "stop_lat": 37.049,
                "stop_lon": -122.0279,
                "stop_name": "Scotts Valley",
              },
            },
          },
        ]
      }
      onChange={[Function]}
      selectedFeed={
        Object {
          "checksum": "MOCK",
          "id": "1",
          "routes": Array [
            Object {
              "label": "mock-route-label",
              "patterns": Array [
                Object {
                  "geometry": Object {
                    "coordinates": Array [
                      Array [
                        -122.0246,
                        36.9707,
                      ],
                      Array [
                        -122.0279,
                        37.049,
                      ],
                      Array [
                        -121.9799,
                        37.2299,
                      ],
                      Array [
                        -121.9445,
                        37.324,
                      ],
                      Array [
                        -121.936,
                        37.353,
                      ],
                      Array [
                        -121.924,
                        37.365,
                      ],
                    ],
                    "type": "LineString",
                  },
                  "name": "Mock Pattern",
                  "pattern_id": "mock-pattern-id",
                  "stops": Array [
                    Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  ],
                  "trips": Array [
                    Object {
                      "duration": 1234,
                      "end_time": 13579,
                      "start_time": 12345,
                      "trip_headsign": "To Downtown",
                      "trip_id": "abcd",
                      "trip_short_name": "The Express",
                    },
                  ],
                },
              ],
              "route_id": "route1",
            },
          ],
          "stops": Array [
            Object {
              "stop_id": "1",
              "stop_lat": 36.9707,
              "stop_lon": -122.0246,
              "stop_name": "Santa Cruz",
            },
            Object {
              "stop_id": "2",
              "stop_lat": 37.049,
              "stop_lon": -122.0279,
              "stop_name": "Scotts Valley",
            },
          ],
          "stopsById": Object {
            "1": Object {
              "stop_id": "1",
              "stop_lat": 36.9707,
              "stop_lon": -122.0246,
              "stop_name": "Santa Cruz",
            },
            "2": Object {
              "stop_id": "2",
              "stop_lat": 37.049,
              "stop_lon": -122.0279,
              "stop_name": "Scotts Valley",
            },
          },
        }
      }
      selectedRouteIds={
        Array [
          "route1",
        ]
      }
    >
      <Group>
        <div
          className="form-group"
        >
          <label
            htmlFor="Feed"
          >
            Select feed and routes
          </label>
          <S
            getOptionLabel={[Function]}
            getOptionValue={[Function]}
            name="Feed"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "checksum": "MOCK",
                  "id": "1",
                  "routes": Array [
                    Object {
                      "label": "mock-route-label",
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "name": "Mock Pattern",
                          "pattern_id": "mock-pattern-id",
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "end_time": 13579,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                      "route_id": "route1",
                    },
                  ],
                  "stops": Array [
                    Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  ],
                  "stopsById": Object {
                    "1": Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    "2": Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  },
                },
              ]
            }
            placeholder="Select feed"
            value={
              Object {
                "checksum": "MOCK",
                "id": "1",
                "routes": Array [
                  Object {
                    "label": "mock-route-label",
                    "patterns": Array [
                      Object {
                        "geometry": Object {
                          "coordinates": Array [
                            Array [
                              -122.0246,
                              36.9707,
                            ],
                            Array [
                              -122.0279,
                              37.049,
                            ],
                            Array [
                              -121.9799,
                              37.2299,
                            ],
                            Array [
                              -121.9445,
                              37.324,
                            ],
                            Array [
                              -121.936,
                              37.353,
                            ],
                            Array [
                              -121.924,
                              37.365,
                            ],
                          ],
                          "type": "LineString",
                        },
                        "name": "Mock Pattern",
                        "pattern_id": "mock-pattern-id",
                        "stops": Array [
                          Object {
                            "stop_id": "1",
                            "stop_lat": 36.9707,
                            "stop_lon": -122.0246,
                            "stop_name": "Santa Cruz",
                          },
                          Object {
                            "stop_id": "2",
                            "stop_lat": 37.049,
                            "stop_lon": -122.0279,
                            "stop_name": "Scotts Valley",
                          },
                        ],
                        "trips": Array [
                          Object {
                            "duration": 1234,
                            "end_time": 13579,
                            "start_time": 12345,
                            "trip_headsign": "To Downtown",
                            "trip_id": "abcd",
                            "trip_short_name": "The Express",
                          },
                        ],
                      },
                    ],
                    "route_id": "route1",
                  },
                ],
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "stopsById": Object {
                  "1": Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  "2": Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                },
              }
            }
          >
            <ReactSelect
              getOptionLabel={[Function]}
              getOptionValue={[Function]}
              name="Feed"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "checksum": "MOCK",
                    "id": "1",
                    "routes": Array [
                      Object {
                        "label": "mock-route-label",
                        "patterns": Array [
                          Object {
                            "geometry": Object {
                              "coordinates": Array [
                                Array [
                                  -122.0246,
                                  36.9707,
                                ],
                                Array [
                                  -122.0279,
                                  37.049,
                                ],
                                Array [
                                  -121.9799,
                                  37.2299,
                                ],
                                Array [
                                  -121.9445,
                                  37.324,
                                ],
                                Array [
                                  -121.936,
                                  37.353,
                                ],
                                Array [
                                  -121.924,
                                  37.365,
                                ],
                              ],
                              "type": "LineString",
                            },
                            "name": "Mock Pattern",
                            "pattern_id": "mock-pattern-id",
                            "stops": Array [
                              Object {
                                "stop_id": "1",
                                "stop_lat": 36.9707,
                                "stop_lon": -122.0246,
                                "stop_name": "Santa Cruz",
                              },
                              Object {
                                "stop_id": "2",
                                "stop_lat": 37.049,
                                "stop_lon": -122.0279,
                                "stop_name": "Scotts Valley",
                              },
                            ],
                            "trips": Array [
                              Object {
                                "duration": 1234,
                                "end_time": 13579,
                                "start_time": 12345,
                                "trip_headsign": "To Downtown",
                                "trip_id": "abcd",
                                "trip_short_name": "The Express",
                              },
                            ],
                          },
                        ],
                        "route_id": "route1",
                      },
                    ],
                    "stops": Array [
                      Object {
                        "stop_id": "1",
                        "stop_lat": 36.9707,
                        "stop_lon": -122.0246,
                        "stop_name": "Santa Cruz",
                      },
                      Object {
                        "stop_id": "2",
                        "stop_lat": 37.049,
                        "stop_lon": -122.0279,
                        "stop_name": "Scotts Valley",
                      },
                    ],
                    "stopsById": Object {
                      "1": Object {
                        "stop_id": "1",
                        "stop_lat": 36.9707,
                        "stop_lon": -122.0246,
                        "stop_name": "Santa Cruz",
                      },
                      "2": Object {
                        "stop_id": "2",
                        "stop_lat": 37.049,
                        "stop_lon": -122.0279,
                        "stop_name": "Scotts Valley",
                      },
                    },
                  },
                ]
              }
              placeholder="Select feed"
              styles={
                Object {
                  "control": [Function],
                  "option": [Function],
                }
              }
              value={
                Object {
                  "checksum": "MOCK",
                  "id": "1",
                  "routes": Array [
                    Object {
                      "label": "mock-route-label",
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "name": "Mock Pattern",
                          "pattern_id": "mock-pattern-id",
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "end_time": 13579,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                      "route_id": "route1",
                    },
                  ],
                  "stops": Array [
                    Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  ],
                  "stopsById": Object {
                    "1": Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    "2": Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  },
                }
              }
            >
              <div
                className="ReactSelectMock"
              />
            </ReactSelect>
          </S>
        </div>
      </Group>
      <Group>
        <div
          className="form-group"
        >
          <S
            getOptionLabel={[Function]}
            getOptionValue={[Function]}
            name="Route"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "mock-route-label",
                  "patterns": Array [
                    Object {
                      "geometry": Object {
                        "coordinates": Array [
                          Array [
                            -122.0246,
                            36.9707,
                          ],
                          Array [
                            -122.0279,
                            37.049,
                          ],
                          Array [
                            -121.9799,
                            37.2299,
                          ],
                          Array [
                            -121.9445,
                            37.324,
                          ],
                          Array [
                            -121.936,
                            37.353,
                          ],
                          Array [
                            -121.924,
                            37.365,
                          ],
                        ],
                        "type": "LineString",
                      },
                      "name": "Mock Pattern",
                      "pattern_id": "mock-pattern-id",
                      "stops": Array [
                        Object {
                          "stop_id": "1",
                          "stop_lat": 36.9707,
                          "stop_lon": -122.0246,
                          "stop_name": "Santa Cruz",
                        },
                        Object {
                          "stop_id": "2",
                          "stop_lat": 37.049,
                          "stop_lon": -122.0279,
                          "stop_name": "Scotts Valley",
                        },
                      ],
                      "trips": Array [
                        Object {
                          "duration": 1234,
                          "end_time": 13579,
                          "start_time": 12345,
                          "trip_headsign": "To Downtown",
                          "trip_id": "abcd",
                          "trip_short_name": "The Express",
                        },
                      ],
                    },
                  ],
                  "route_id": "route1",
                },
              ]
            }
            placeholder="Select route"
            value={
              Object {
                "label": "mock-route-label",
                "patterns": Array [
                  Object {
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "name": "Mock Pattern",
                    "pattern_id": "mock-pattern-id",
                    "stops": Array [
                      Object {
                        "stop_id": "1",
                        "stop_lat": 36.9707,
                        "stop_lon": -122.0246,
                        "stop_name": "Santa Cruz",
                      },
                      Object {
                        "stop_id": "2",
                        "stop_lat": 37.049,
                        "stop_lon": -122.0279,
                        "stop_name": "Scotts Valley",
                      },
                    ],
                    "trips": Array [
                      Object {
                        "duration": 1234,
                        "end_time": 13579,
                        "start_time": 12345,
                        "trip_headsign": "To Downtown",
                        "trip_id": "abcd",
                        "trip_short_name": "The Express",
                      },
                    ],
                  },
                ],
                "route_id": "route1",
              }
            }
          >
            <ReactSelect
              getOptionLabel={[Function]}
              getOptionValue={[Function]}
              name="Route"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "label": "mock-route-label",
                    "patterns": Array [
                      Object {
                        "geometry": Object {
                          "coordinates": Array [
                            Array [
                              -122.0246,
                              36.9707,
                            ],
                            Array [
                              -122.0279,
                              37.049,
                            ],
                            Array [
                              -121.9799,
                              37.2299,
                            ],
                            Array [
                              -121.9445,
                              37.324,
                            ],
                            Array [
                              -121.936,
                              37.353,
                            ],
                            Array [
                              -121.924,
                              37.365,
                            ],
                          ],
                          "type": "LineString",
                        },
                        "name": "Mock Pattern",
                        "pattern_id": "mock-pattern-id",
                        "stops": Array [
                          Object {
                            "stop_id": "1",
                            "stop_lat": 36.9707,
                            "stop_lon": -122.0246,
                            "stop_name": "Santa Cruz",
                          },
                          Object {
                            "stop_id": "2",
                            "stop_lat": 37.049,
                            "stop_lon": -122.0279,
                            "stop_name": "Scotts Valley",
                          },
                        ],
                        "trips": Array [
                          Object {
                            "duration": 1234,
                            "end_time": 13579,
                            "start_time": 12345,
                            "trip_headsign": "To Downtown",
                            "trip_id": "abcd",
                            "trip_short_name": "The Express",
                          },
                        ],
                      },
                    ],
                    "route_id": "route1",
                  },
                ]
              }
              placeholder="Select route"
              styles={
                Object {
                  "control": [Function],
                  "option": [Function],
                }
              }
              value={
                Object {
                  "label": "mock-route-label",
                  "patterns": Array [
                    Object {
                      "geometry": Object {
                        "coordinates": Array [
                          Array [
                            -122.0246,
                            36.9707,
                          ],
                          Array [
                            -122.0279,
                            37.049,
                          ],
                          Array [
                            -121.9799,
                            37.2299,
                          ],
                          Array [
                            -121.9445,
                            37.324,
                          ],
                          Array [
                            -121.936,
                            37.353,
                          ],
                          Array [
                            -121.924,
                            37.365,
                          ],
                        ],
                        "type": "LineString",
                      },
                      "name": "Mock Pattern",
                      "pattern_id": "mock-pattern-id",
                      "stops": Array [
                        Object {
                          "stop_id": "1",
                          "stop_lat": 36.9707,
                          "stop_lon": -122.0246,
                          "stop_name": "Santa Cruz",
                        },
                        Object {
                          "stop_id": "2",
                          "stop_lat": 37.049,
                          "stop_lon": -122.0279,
                          "stop_name": "Scotts Valley",
                        },
                      ],
                      "trips": Array [
                        Object {
                          "duration": 1234,
                          "end_time": 13579,
                          "start_time": 12345,
                          "trip_headsign": "To Downtown",
                          "trip_id": "abcd",
                          "trip_short_name": "The Express",
                        },
                      ],
                    },
                  ],
                  "route_id": "route1",
                }
              }
            >
              <div
                className="ReactSelectMock"
              />
            </ReactSelect>
          </S>
        </div>
      </Group>
    </SelectFeedAndRoutes>
  </SelectFeedRouteAndPatterns>
  <Group>
    <div
      className="form-group"
    >
      <label
        htmlFor="Select from stop"
      >
        Start of reroute/extension (existing stop on pattern)
      </label>
      Santa Cruz
      <Group
        justified={true}
      >
        <div
          className="btn-group btn-group-justified"
        >
          <Button
            block={true}
            onClick={[Function]}
            style="info"
            title="Select from stop"
          >
            <a
              className="btn btn-info btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title="Select from stop"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "crosshairs",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "crosshairs",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-crosshairs fa-w-NaN fa-fw "
                    data-icon="crosshairs"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
               
              Select
            </a>
          </Button>
          <Button
            block={true}
            disabled={false}
            onClick={[Function]}
            style="danger"
            title="Clear from stop"
          >
            <a
              className="btn btn-danger btn-block"
              disabled={false}
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title="Clear from stop"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "times",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "times",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-times fa-w-NaN fa-fw "
                    data-icon="times"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
               
              Clear
            </a>
          </Button>
        </div>
      </Group>
      <br />
      <label
        htmlFor="Select to stop"
      >
        End of reroute/extension (existing stop on pattern)
      </label>
      Scotts Valley
      <Group
        justified={true}
      >
        <div
          className="btn-group btn-group-justified"
        >
          <Button
            block={true}
            onClick={[Function]}
            style="info"
            title="Select to stop"
          >
            <a
              className="btn btn-info btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title="Select to stop"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "crosshairs",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "crosshairs",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-crosshairs fa-w-NaN fa-fw "
                    data-icon="crosshairs"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
               
              Select
            </a>
          </Button>
          <Button
            block={true}
            disabled={false}
            onClick={[Function]}
            style="danger"
            title="Clear to stop"
          >
            <a
              className="btn btn-danger btn-block"
              disabled={false}
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title="Clear to stop"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "times",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "times",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-times fa-w-NaN fa-fw "
                    data-icon="times"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
               
              Clear
            </a>
          </Button>
        </div>
      </Group>
    </div>
  </Group>
  <Memo(EditAlignment)
    allStops={Array []}
    allowExtend={false}
    disabled={true}
    extendFromEnd={false}
    mapState={
      Object {
        "state": "reroute",
      }
    }
    modification={
      Object {
        "_id": "1234",
        "accessGroup": "accessGroupName",
        "bidirectional": false,
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "description": "Mock description",
        "dwellTime": 0,
        "entries": Array [],
        "feed": "1",
        "fromStop": "1",
        "name": "Test Modification",
        "nonce": "12345",
        "projectId": "1",
        "routes": Array [
          "route1",
        ],
        "segmentSpeeds": Array [],
        "segments": Array [],
        "timetables": Array [
          Object {
            "_id": "timetable-id",
            "dwellTime": 10,
            "dwellTimes": Array [
              12,
            ],
            "endTime": 57600,
            "exactTimes": false,
            "friday": true,
            "headwaySecs": 900,
            "modificationId": "1234",
            "modificationName": "Test Modification",
            "monday": true,
            "name": "Test timetable",
            "patternTrips": Array [
              "abcd",
            ],
            "phaseAtStop": "",
            "phaseFromStop": "",
            "phaseFromTimetable": "",
            "phaseSeconds": 300,
            "saturday": false,
            "segmentSpeeds": Array [],
            "sourceTrip": "abcd",
            "startTime": 28800,
            "sunday": false,
            "thursday": true,
            "tuesday": true,
            "wednesday": true,
          },
        ],
        "toStop": "2",
        "trips": Array [
          "abcd",
        ],
        "type": "reroute",
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variants": Array [
          true,
        ],
      }
    }
    setMapState={[MockFunction]}
    update={[MockFunction]}
  >
    <H5>
      <Heading
        as="h5"
        fontSize="14px"
        fontWeight="500"
        my="10px"
      >
        <Box
          as="h5"
          fontFamily="heading"
          fontSize="14px"
          fontWeight="500"
          lineHeight="shorter"
          my="10px"
        >
          <h5
            className="css-t22lpo"
          >
            Route Geometry
          </h5>
        </Box>
      </Heading>
    </H5>
    <Button
      block={true}
      disabled={true}
      onClick={[Function]}
      style="warning"
    >
      <a
        className="btn btn-warning btn-block"
        disabled={true}
        href="#"
        onClick={[Function]}
        tabIndex={0}
      >
        <Icon
          icon={
            Object {
              "icon": Array [],
              "iconName": "pencil-alt",
              "prefix": "fas",
            }
          }
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={true}
            flip={null}
            icon={
              Object {
                "icon": Array [],
                "iconName": "pencil-alt",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-pencil-alt fa-w-NaN fa-fw "
              data-icon="pencil-alt"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 undefined undefined"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </Icon>
         
        Edit route geometry
      </a>
    </Button>
    <Checkbox
      defaultChecked={false}
      label="Auto-create stops at set spacing"
      onChange={[Function]}
    >
      <div
        className="checkbox"
      >
        <label
          htmlFor="auto-create-stops-at-set-spacing-input-0"
        >
          <input
            defaultChecked={false}
            id="auto-create-stops-at-set-spacing-input-0"
            label="Auto-create stops at set spacing"
            onChange={[Function]}
            type="checkbox"
          />
           
          Auto-create stops at set spacing
        </label>
      </div>
    </Checkbox>
    <div
      className="alert alert-info"
      role="alert"
    >
      Modification cannot be bidirectional because timetables in this modification have phasing information.
    </div>
  </Memo(EditAlignment)>
  <SegmentSpeeds
    dwellTime={0}
    dwellTimes={Array []}
    highlightSegment={[Function]}
    highlightStop={[Function]}
    numberOfStops={-2}
    qualifiedStops={Array []}
    segmentDistances={Array []}
    segmentSpeeds={Array []}
    update={[MockFunction]}
  >
    <h4
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <span>
        Travel time 
      </span>
      <strong>
        00:00:00
      </strong>
    </h4>
    <P>
      <Box
        as="p"
        mb="10px"
      >
        <p
          className="css-1r2f04i"
        >
          <em>
            Dwell time at added stops + moving time along added segments
          </em>
        </p>
      </Box>
    </P>
    <MinutesSeconds
      label="Default dwell time"
      onChange={[Function]}
      seconds={0}
    >
      <Group
        className=""
        label="Default dwell time"
      >
        <div
          className="form-group"
        >
          <label
            className="control-label"
            htmlFor="default-dwell-time-input-1"
          >
            Default dwell time
          </label>
          <Input
            onChange={[Function]}
            type="text"
            units="hh:mm:ss"
            value="00:00:00"
          >
            <div
              className="InputWithUnits"
            >
              <input
                className="form-control"
                id="undefined-input-2"
                onChange={[Function]}
                type="text"
                units="hh:mm:ss"
                value="00:00:00"
              />
              <span
                className="InputUnits"
              >
                hh:mm:ss
              </span>
            </div>
          </Input>
        </div>
      </Group>
    </MinutesSeconds>
    <P>
      <Box
        as="p"
        mb="10px"
      >
        <p
          className="css-1r2f04i"
        >
          The default time table dwell time will be used for each stop that does not have a custom one set.
        </p>
      </Box>
    </P>
    <Collapsible
      title="Set individual stop dwell times"
    >
      <a
        className="CollapsibleButton"
        onClick={[Function]}
        role="button"
        tabIndex={0}
      >
        <Icon
          icon={
            Object {
              "icon": Array [],
              "iconName": "caret-right",
              "prefix": "fas",
            }
          }
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={true}
            flip={null}
            icon={
              Object {
                "icon": Array [],
                "iconName": "caret-right",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-caret-right fa-w-NaN fa-fw "
              data-icon="caret-right"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 undefined undefined"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </Icon>
        Set individual stop dwell times
      </a>
    </Collapsible>
    <NumberInput
      label="Average speed (along added segments)"
      min={1}
      onChange={[Function]}
      units="km/h"
      value={15}
    >
      <Group
        id="average-speed-along-added-segments-input-3"
        label="Average speed (along added segments)"
        min={1}
        onChange={[Function]}
        units="km/h"
        value={15}
      >
        <div
          className="form-group"
        >
          <label
            className="control-label"
            htmlFor="average-speed-along-added-segments-input-3"
          >
            Average speed (along added segments)
          </label>
          <Input
            id="average-speed-along-added-segments-input-3"
            label="Average speed (along added segments)"
            min={1}
            onChange={[Function]}
            onWheel={[Function]}
            type="text"
            units="km/h"
            value={15}
          >
            <div
              className="InputWithUnits"
            >
              <input
                className="form-control"
                id="average-speed-along-added-segments-input-3"
                label="Average speed (along added segments)"
                min={1}
                onChange={[Function]}
                onWheel={[Function]}
                placeholder="Average speed (along added segments)"
                type="text"
                units="km/h"
                value={15}
              />
              <span
                className="InputUnits"
              >
                km/h
              </span>
            </div>
          </Input>
        </div>
      </Group>
    </NumberInput>
    <MinutesSeconds
      label="Total moving time (along added segments)"
      onChange={[Function]}
      seconds={0}
    >
      <Group
        className=""
        label="Total moving time (along added segments)"
      >
        <div
          className="form-group"
        >
          <label
            className="control-label"
            htmlFor="total-moving-time-along-added-segments-input-4"
          >
            Total moving time (along added segments)
          </label>
          <Input
            onChange={[Function]}
            type="text"
            units="hh:mm:ss"
            value="00:00:00"
          >
            <div
              className="InputWithUnits"
            >
              <input
                className="form-control"
                id="undefined-input-5"
                onChange={[Function]}
                type="text"
                units="hh:mm:ss"
                value="00:00:00"
              />
              <span
                className="InputUnits"
              >
                hh:mm:ss
              </span>
            </div>
          </Input>
        </div>
      </Group>
    </MinutesSeconds>
    <Collapsible
      title="Set individual segment speeds"
    >
      <a
        className="CollapsibleButton"
        onClick={[Function]}
        role="button"
        tabIndex={0}
      >
        <Icon
          icon={
            Object {
              "icon": Array [],
              "iconName": "caret-right",
              "prefix": "fas",
            }
          }
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={true}
            flip={null}
            icon={
              Object {
                "icon": Array [],
                "iconName": "caret-right",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-caret-right fa-w-NaN fa-fw "
              data-icon="caret-right"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 undefined undefined"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </Icon>
        Set individual segment speeds
      </a>
    </Collapsible>
  </SegmentSpeeds>
</RerouteComponent>
`;
