// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegionalResults snapshot(mount) 1`] = `
<WithMap(RegionalResults)
  analysis={
    Object {
      "_id": "abcd",
      "accessGroup": "accessGroupName",
      "bounds": Object {},
      "bundleId": "1",
      "complete": true,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "cutoffMinutes": 60,
      "cutoffsMinutes": Array [
        60,
      ],
      "deleted": false,
      "destinationPointSetIds": Array [
        "Jobs_total",
      ],
      "grid": "Jobs_total",
      "height": 300,
      "name": "ANALYSIS 1",
      "nonce": "12345",
      "north": 20024,
      "projectId": "1",
      "request": Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      },
      "status": "DONE",
      "travelTimePercentile": -1,
      "travelTimePercentiles": Array [
        50,
      ],
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variant": 0,
      "west": 20015,
      "width": 300,
      "workerVersion": "v3.2.0",
      "zoom": 9,
    }
  }
  opportunityDatasets={
    Array [
      Object {
        "_id": "Jobs_total",
        "name": "Total jobs",
      },
    ]
  }
  regionId="MOCK_REGION_ID"
>
  <Map>
    <div>
      <RegionalResults
        analysis={
          Object {
            "_id": "abcd",
            "accessGroup": "accessGroupName",
            "bounds": Object {},
            "bundleId": "1",
            "complete": true,
            "createdAt": "2017-11-08T12:30:50.133Z",
            "createdBy": "person@gmail.com",
            "cutoffMinutes": 60,
            "cutoffsMinutes": Array [
              60,
            ],
            "deleted": false,
            "destinationPointSetIds": Array [
              "Jobs_total",
            ],
            "grid": "Jobs_total",
            "height": 300,
            "name": "ANALYSIS 1",
            "nonce": "12345",
            "north": 20024,
            "projectId": "1",
            "request": Object {
              "accessModes": "WALK",
              "bikeSafe": 1,
              "bikeSlope": 1,
              "bikeSpeed": 4.166666666666667,
              "bikeTime": 1,
              "bounds": Object {
                "east": -76,
                "north": 39,
                "south": 38,
                "west": -77,
              },
              "bundleId": "1",
              "date": "2016-01-16",
              "defaultExpanded": true,
              "directModes": "WALK",
              "egressModes": "WALK",
              "fromLat": 12,
              "fromLon": 34,
              "fromTime": 25200,
              "maxBikeTime": 20,
              "maxRides": 4,
              "maxTripDurationMinutes": 60,
              "maxWalkTime": 20,
              "monteCarloDraws": 200,
              "name": "Profile Request Test",
              "projectId": "1",
              "reachabilityThreshold": 0,
              "regionId": "1",
              "toTime": 32400,
              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
              "travelTimePercentile": 50,
              "variantIndex": 0,
              "walkSpeed": 1.3888888888888888,
              "workerVersion": "v4.0.0",
            },
            "status": "DONE",
            "travelTimePercentile": -1,
            "travelTimePercentiles": Array [
              50,
            ],
            "updatedAt": "2017-11-08T12:31:19.602Z",
            "updatedBy": "person@gmail.com",
            "variant": 0,
            "west": 20015,
            "width": 300,
            "workerVersion": "v3.2.0",
            "zoom": 9,
          }
        }
        opportunityDatasets={
          Array [
            Object {
              "_id": "Jobs_total",
              "name": "Total jobs",
            },
          ]
        }
        regionId="MOCK_REGION_ID"
      >
        <Stack
          py={4}
          spacing={4}
        >
          <Styled(div)
            __css={
              Object {
                "& > *:not(style) ~ *:not(style)": Object {
                  "marginStart": 0,
                  "marginTop": 4,
                },
              }
            }
            className="chakra-stack"
            display="flex"
            flexDirection="column"
            py={4}
          >
            <div
              className="chakra-stack css-1v62vwi"
            >
              <FormControl
                key=".0"
                px={4}
              >
                <Styled(div)
                  __css={
                    Object {
                      "position": "relative",
                      "width": "100%",
                    }
                  }
                  className="chakra-form-control"
                  px={4}
                  role="group"
                >
                  <div
                    className="chakra-form-control css-1ep2p81"
                    role="group"
                  >
                    <FormLabel
                      htmlFor="00000000-0000-0000-0000-000000000000"
                    >
                      <Styled(label)
                        __css={
                          Object {
                            "_disabled": Object {
                              "opacity": 0.4,
                            },
                            "display": "block",
                            "fontSize": "md",
                            "fontWeight": "medium",
                            "marginEnd": 3,
                            "mb": 2,
                            "opacity": 1,
                            "textAlign": "start",
                            "transition": "all 0.2s",
                          }
                        }
                        className="chakra-form__label"
                        htmlFor="00000000-0000-0000-0000-000000000000"
                        id="field-1-label"
                      >
                        <label
                          className="chakra-form__label css-1qqx8g3"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                          id="field-1-label"
                        >
                          Compare to
                        </label>
                      </Styled(label)>
                    </FormLabel>
                    <ForwardRef
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputId="00000000-0000-0000-0000-000000000000"
                      isClearable={true}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "_id": "abcd",
                            "accessGroup": "accessGroupName",
                            "bounds": Object {},
                            "bundleId": "1",
                            "complete": true,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "cutoffMinutes": 60,
                            "cutoffsMinutes": Array [
                              60,
                            ],
                            "deleted": false,
                            "destinationPointSetIds": Array [
                              "Jobs_total",
                            ],
                            "grid": "Jobs_total",
                            "height": 300,
                            "name": "ANALYSIS 1",
                            "nonce": "12345",
                            "north": 20024,
                            "projectId": "1",
                            "request": Object {
                              "accessModes": "WALK",
                              "bikeSafe": 1,
                              "bikeSlope": 1,
                              "bikeSpeed": 4.166666666666667,
                              "bikeTime": 1,
                              "bounds": Object {
                                "east": -76,
                                "north": 39,
                                "south": 38,
                                "west": -77,
                              },
                              "bundleId": "1",
                              "date": "2016-01-16",
                              "defaultExpanded": true,
                              "directModes": "WALK",
                              "egressModes": "WALK",
                              "fromLat": 12,
                              "fromLon": 34,
                              "fromTime": 25200,
                              "maxBikeTime": 20,
                              "maxRides": 4,
                              "maxTripDurationMinutes": 60,
                              "maxWalkTime": 20,
                              "monteCarloDraws": 200,
                              "name": "Profile Request Test",
                              "projectId": "1",
                              "reachabilityThreshold": 0,
                              "regionId": "1",
                              "toTime": 32400,
                              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                              "travelTimePercentile": 50,
                              "variantIndex": 0,
                              "walkSpeed": 1.3888888888888888,
                              "workerVersion": "v4.0.0",
                            },
                            "status": "DONE",
                            "travelTimePercentile": -1,
                            "travelTimePercentiles": Array [
                              50,
                            ],
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variant": 0,
                            "west": 20015,
                            "width": 300,
                            "workerVersion": "v3.2.0",
                            "zoom": 9,
                          },
                          Object {
                            "_id": "efgh",
                            "accessGroup": "accessGroupName",
                            "bounds": Object {},
                            "bundleId": "1",
                            "complete": true,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "cutoffMinutes": 60,
                            "cutoffsMinutes": Array [
                              60,
                            ],
                            "deleted": false,
                            "destinationPointSetIds": Array [
                              "Jobs_total",
                            ],
                            "grid": "Jobs_total",
                            "height": 300,
                            "name": "ANALYSIS 2",
                            "nonce": "12345",
                            "north": 20024,
                            "projectId": "1",
                            "request": Object {
                              "accessModes": "WALK",
                              "bikeSafe": 1,
                              "bikeSlope": 1,
                              "bikeSpeed": 4.166666666666667,
                              "bikeTime": 1,
                              "bounds": Object {
                                "east": -76,
                                "north": 39,
                                "south": 38,
                                "west": -77,
                              },
                              "bundleId": "1",
                              "date": "2016-01-16",
                              "defaultExpanded": true,
                              "directModes": "WALK",
                              "egressModes": "WALK",
                              "fromLat": 12,
                              "fromLon": 34,
                              "fromTime": 25200,
                              "maxBikeTime": 20,
                              "maxRides": 4,
                              "maxTripDurationMinutes": 60,
                              "maxWalkTime": 20,
                              "monteCarloDraws": 200,
                              "name": "Profile Request Test",
                              "projectId": "1",
                              "reachabilityThreshold": 0,
                              "regionId": "1",
                              "toTime": 32400,
                              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                              "travelTimePercentile": 50,
                              "variantIndex": 0,
                              "walkSpeed": 1.3888888888888888,
                              "workerVersion": "v4.0.0",
                            },
                            "status": "DONE",
                            "travelTimePercentile": 50,
                            "travelTimePercentiles": Array [
                              50,
                            ],
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variant": 1,
                            "west": 20015,
                            "width": 300,
                            "workerVersion": "v3.2.0",
                            "zoom": 9,
                          },
                        ]
                      }
                    >
                      <ReactSelect
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        innerRef={null}
                        inputId="00000000-0000-0000-0000-000000000000"
                        isClearable={true}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "_id": "abcd",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 1",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": -1,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 0,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                            Object {
                              "_id": "efgh",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 2",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": 50,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 1,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                          ]
                        }
                        styles={
                          Object {
                            "control": [Function],
                            "menu": [Function],
                            "option": [Function],
                          }
                        }
                      >
                        <div
                          className="ReactSelectMock"
                        />
                      </ReactSelect>
                    </ForwardRef>
                  </div>
                </Styled(div)>
              </FormControl>
              <ReactLeafletControl
                key=".2"
                position="bottomleft"
              >
                <Stack
                  bg="white"
                  boxShadow="lg"
                  rounded="md"
                  spacing={3}
                  width="296px"
                >
                  <Styled(div)
                    __css={
                      Object {
                        "& > *:not(style) ~ *:not(style)": Object {
                          "marginStart": 0,
                          "marginTop": 3,
                        },
                      }
                    }
                    bg="white"
                    boxShadow="lg"
                    className="chakra-stack"
                    display="flex"
                    flexDirection="column"
                    rounded="md"
                    width="296px"
                  >
                    <div
                      className="chakra-stack css-bo8igj"
                    >
                      <Heading
                        key=".0"
                        pt={4}
                        px={4}
                        size="sm"
                      >
                        <Styled(h2)
                          __css={
                            Object {
                              "fontFamily": "heading",
                              "fontSize": "md",
                              "fontWeight": "bold",
                              "lineHeight": 1.2,
                            }
                          }
                          className="chakra-heading"
                          pt={4}
                          px={4}
                        >
                          <h2
                            className="chakra-heading css-25xa9p"
                          >
                            Access to
                          </h2>
                        </Styled(h2)>
                      </Heading>
                      <Box
                        key=".1"
                        px={4}
                      >
                        <div
                          className="css-q6n4wc"
                        >
                          <Heading
                            size="xs"
                          >
                            <Styled(h2)
                              __css={
                                Object {
                                  "fontFamily": "heading",
                                  "fontSize": "sm",
                                  "fontWeight": "bold",
                                  "lineHeight": 1.2,
                                }
                              }
                              className="chakra-heading"
                            >
                              <h2
                                className="chakra-heading css-13vvk6t"
                              >
                                ANALYSIS 1
                              </h2>
                            </Styled(h2)>
                          </Heading>
                          <Text>
                            <Styled(p)
                              __css={Object {}}
                              className="chakra-text"
                            >
                              <p
                                className="chakra-text css-0"
                              >
                                undefined within 60 minutes, 50th percentile
                              </p>
                            </Styled(p)>
                          </Text>
                        </div>
                      </Box>
                      <Legend
                        breaks={
                          Array [
                            0,
                            436,
                            857,
                            1257,
                            1649,
                            2000,
                          ]
                        }
                        colors={
                          Array [
                            Rgb {
                              "b": 255,
                              "g": 255,
                              "opacity": 0,
                              "r": 255,
                            },
                            Rgb {
                              "b": 239,
                              "g": 219,
                              "opacity": 0.42,
                              "r": 198,
                            },
                            Rgb {
                              "b": 225,
                              "g": 202,
                              "opacity": 0.42,
                              "r": 158,
                            },
                            Rgb {
                              "b": 214,
                              "g": 174,
                              "opacity": 0.42,
                              "r": 107,
                            },
                            Rgb {
                              "b": 189,
                              "g": 130,
                              "opacity": 0.42,
                              "r": 49,
                            },
                            Rgb {
                              "b": 156,
                              "g": 81,
                              "opacity": 0.42,
                              "r": 8,
                            },
                          ]
                        }
                        key=".3"
                        min={0}
                      >
                        <Stack
                          borderTopWidth="1px"
                          spacing={0}
                        >
                          <Styled(div)
                            __css={
                              Object {
                                "& > *:not(style) ~ *:not(style)": Object {
                                  "marginStart": 0,
                                  "marginTop": 0,
                                },
                              }
                            }
                            borderTopWidth="1px"
                            className="chakra-stack"
                            display="flex"
                            flexDirection="column"
                          >
                            <div
                              className="chakra-stack css-13clb6c"
                            >
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(8, 81, 156, 1)"
                                color="#fff"
                                key=".$break-0"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-ishzdn"
                                >
                                  2,000 to 1,649
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(49, 130, 189, 1)"
                                color="#fff"
                                key=".$break-1"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-re4ax5"
                                >
                                  1,649 to 1,257
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(107, 174, 214, 1)"
                                color="#000"
                                key=".$break-2"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-12vd2fm"
                                >
                                  1,257 to 857
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(158, 202, 225, 1)"
                                color="#000"
                                key=".$break-3"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-n9dmw5"
                                >
                                  857 to 436
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(198, 219, 239, 1)"
                                color="#000"
                                key=".$break-4"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-juops8"
                                >
                                  436 to 0
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(255, 255, 255, 1)"
                                color="#000"
                                key=".$break-5"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-qan814"
                                >
                                  0 (transparent)
                                </div>
                              </Box>
                            </div>
                          </Styled(div)>
                        </Stack>
                      </Legend>
                    </div>
                  </Styled(div)>
                </Stack>
              </ReactLeafletControl>
              <Box
                key=".3"
                p={4}
              >
                <div
                  className="css-q5fqw0"
                >
                  <AggregationArea>
                    <Stack
                      spacing={4}
                    >
                      <Styled(div)
                        __css={
                          Object {
                            "& > *:not(style) ~ *:not(style)": Object {
                              "marginStart": 0,
                              "marginTop": 4,
                            },
                          }
                        }
                        className="chakra-stack"
                        display="flex"
                        flexDirection="column"
                      >
                        <div
                          className="chakra-stack css-4daikc"
                        >
                          <FormControl
                            key=".0"
                          >
                            <Styled(div)
                              __css={
                                Object {
                                  "position": "relative",
                                  "width": "100%",
                                }
                              }
                              className="chakra-form-control"
                              role="group"
                            >
                              <div
                                className="chakra-form-control css-1kxonj9"
                                role="group"
                              >
                                <FormLabel>
                                  <Styled(label)
                                    __css={
                                      Object {
                                        "_disabled": Object {
                                          "opacity": 0.4,
                                        },
                                        "display": "block",
                                        "fontSize": "md",
                                        "fontWeight": "medium",
                                        "marginEnd": 3,
                                        "mb": 2,
                                        "opacity": 1,
                                        "textAlign": "start",
                                        "transition": "all 0.2s",
                                      }
                                    }
                                    className="chakra-form__label"
                                    htmlFor="field-2"
                                    id="field-2-label"
                                  >
                                    <label
                                      className="chakra-form__label css-1qqx8g3"
                                      htmlFor="field-2"
                                      id="field-2-label"
                                    >
                                      Aggregate results to
                                    </label>
                                  </Styled(label)>
                                </FormLabel>
                                <ForwardRef
                                  getOptionLabel={[Function]}
                                  getOptionValue={[Function]}
                                  isClearable={true}
                                  isLoading={false}
                                  name="aggregateTo"
                                  onChange={[Function]}
                                  options={Array []}
                                >
                                  <ReactSelect
                                    getOptionLabel={[Function]}
                                    getOptionValue={[Function]}
                                    innerRef={null}
                                    isClearable={true}
                                    isLoading={false}
                                    name="aggregateTo"
                                    onChange={[Function]}
                                    options={Array []}
                                    styles={
                                      Object {
                                        "control": [Function],
                                        "menu": [Function],
                                        "option": [Function],
                                      }
                                    }
                                  >
                                    <div
                                      className="ReactSelectMock"
                                    />
                                  </ReactSelect>
                                </ForwardRef>
                              </div>
                            </Styled(div)>
                          </FormControl>
                          <Button
                            isFullWidth={true}
                            key=".1"
                            leftIcon={<FaChevronDown />}
                            onClick={[Function]}
                          >
                            <Styled(button)
                              __css={
                                Object {
                                  "_active": Object {
                                    "bg": "gray.300",
                                  },
                                  "_disabled": Object {
                                    "boxShadow": "none",
                                    "cursor": "not-allowed",
                                    "opacity": 0.4,
                                  },
                                  "_focus": Object {
                                    "boxShadow": "outline",
                                  },
                                  "_hover": Object {
                                    "_disabled": Object {
                                      "bg": "gray.100",
                                    },
                                    "bg": "gray.200",
                                  },
                                  "alignItems": "center",
                                  "appearance": "none",
                                  "bg": "gray.100",
                                  "borderRadius": "md",
                                  "display": "inline-flex",
                                  "fontSize": "md",
                                  "fontWeight": "semibold",
                                  "h": 10,
                                  "justifyContent": "center",
                                  "lineHeight": "1.2",
                                  "minW": 10,
                                  "outline": "none",
                                  "position": "relative",
                                  "px": 4,
                                  "transition": "all 250ms",
                                  "userSelect": "none",
                                  "verticalAlign": "middle",
                                  "whiteSpace": "nowrap",
                                  "width": "100%",
                                }
                              }
                              className="chakra-button"
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="chakra-button css-qdlqvw"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonIcon
                                  marginEnd="0.5rem"
                                >
                                  <Styled(span)
                                    className="chakra-button__icon"
                                    marginEnd="0.5rem"
                                  >
                                    <span
                                      className="chakra-button__icon css-ktvjz1"
                                    >
                                      <FaChevronDown
                                        aria-hidden={true}
                                        focusable={false}
                                      >
                                        <IconBase
                                          aria-hidden={true}
                                          attr={
                                            Object {
                                              "viewBox": "0 0 448 512",
                                            }
                                          }
                                          focusable={false}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            stroke="currentColor"
                                            strokeWidth="0"
                                            style={
                                              Object {
                                                "color": undefined,
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                              key="0"
                                            />
                                          </svg>
                                        </IconBase>
                                      </FaChevronDown>
                                    </span>
                                  </Styled(span)>
                                </ButtonIcon>
                                Upload new aggregation area
                              </button>
                            </Styled(button)>
                          </Button>
                        </div>
                      </Styled(div)>
                    </Stack>
                  </AggregationArea>
                </div>
              </Box>
            </div>
          </Styled(div)>
        </Stack>
      </RegionalResults>
    </div>
  </Map>
</WithMap(RegionalResults)>
`;

exports[`RegionalResults with comparison snapshot(mount) 1`] = `
<WithMap(RegionalResults)
  analysis={
    Object {
      "_id": "abcd",
      "accessGroup": "accessGroupName",
      "bounds": Object {},
      "bundleId": "1",
      "complete": true,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "cutoffMinutes": 60,
      "cutoffsMinutes": Array [
        60,
      ],
      "deleted": false,
      "destinationPointSetIds": Array [
        "Jobs_total",
      ],
      "grid": "Jobs_total",
      "height": 300,
      "name": "ANALYSIS 1",
      "nonce": "12345",
      "north": 20024,
      "projectId": "1",
      "request": Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      },
      "status": "DONE",
      "travelTimePercentile": -1,
      "travelTimePercentiles": Array [
        50,
      ],
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variant": 0,
      "west": 20015,
      "width": 300,
      "workerVersion": "v3.2.0",
      "zoom": 9,
    }
  }
  opportunityDatasets={
    Array [
      Object {
        "_id": "Jobs_total",
        "name": "Total jobs",
      },
    ]
  }
  regionId="MOCK_REGION_ID"
>
  <Map>
    <div>
      <RegionalResults
        analysis={
          Object {
            "_id": "abcd",
            "accessGroup": "accessGroupName",
            "bounds": Object {},
            "bundleId": "1",
            "complete": true,
            "createdAt": "2017-11-08T12:30:50.133Z",
            "createdBy": "person@gmail.com",
            "cutoffMinutes": 60,
            "cutoffsMinutes": Array [
              60,
            ],
            "deleted": false,
            "destinationPointSetIds": Array [
              "Jobs_total",
            ],
            "grid": "Jobs_total",
            "height": 300,
            "name": "ANALYSIS 1",
            "nonce": "12345",
            "north": 20024,
            "projectId": "1",
            "request": Object {
              "accessModes": "WALK",
              "bikeSafe": 1,
              "bikeSlope": 1,
              "bikeSpeed": 4.166666666666667,
              "bikeTime": 1,
              "bounds": Object {
                "east": -76,
                "north": 39,
                "south": 38,
                "west": -77,
              },
              "bundleId": "1",
              "date": "2016-01-16",
              "defaultExpanded": true,
              "directModes": "WALK",
              "egressModes": "WALK",
              "fromLat": 12,
              "fromLon": 34,
              "fromTime": 25200,
              "maxBikeTime": 20,
              "maxRides": 4,
              "maxTripDurationMinutes": 60,
              "maxWalkTime": 20,
              "monteCarloDraws": 200,
              "name": "Profile Request Test",
              "projectId": "1",
              "reachabilityThreshold": 0,
              "regionId": "1",
              "toTime": 32400,
              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
              "travelTimePercentile": 50,
              "variantIndex": 0,
              "walkSpeed": 1.3888888888888888,
              "workerVersion": "v4.0.0",
            },
            "status": "DONE",
            "travelTimePercentile": -1,
            "travelTimePercentiles": Array [
              50,
            ],
            "updatedAt": "2017-11-08T12:31:19.602Z",
            "updatedBy": "person@gmail.com",
            "variant": 0,
            "west": 20015,
            "width": 300,
            "workerVersion": "v3.2.0",
            "zoom": 9,
          }
        }
        opportunityDatasets={
          Array [
            Object {
              "_id": "Jobs_total",
              "name": "Total jobs",
            },
          ]
        }
        regionId="MOCK_REGION_ID"
      >
        <Stack
          py={4}
          spacing={4}
        >
          <Styled(div)
            __css={
              Object {
                "& > *:not(style) ~ *:not(style)": Object {
                  "marginStart": 0,
                  "marginTop": 4,
                },
              }
            }
            className="chakra-stack"
            display="flex"
            flexDirection="column"
            py={4}
          >
            <div
              className="chakra-stack css-1v62vwi"
            >
              <FormControl
                key=".0"
                px={4}
              >
                <Styled(div)
                  __css={
                    Object {
                      "position": "relative",
                      "width": "100%",
                    }
                  }
                  className="chakra-form-control"
                  px={4}
                  role="group"
                >
                  <div
                    className="chakra-form-control css-1ep2p81"
                    role="group"
                  >
                    <FormLabel
                      htmlFor="00000000-0000-0000-0000-000000000000"
                    >
                      <Styled(label)
                        __css={
                          Object {
                            "_disabled": Object {
                              "opacity": 0.4,
                            },
                            "display": "block",
                            "fontSize": "md",
                            "fontWeight": "medium",
                            "marginEnd": 3,
                            "mb": 2,
                            "opacity": 1,
                            "textAlign": "start",
                            "transition": "all 0.2s",
                          }
                        }
                        className="chakra-form__label"
                        htmlFor="00000000-0000-0000-0000-000000000000"
                        id="field-7-label"
                      >
                        <label
                          className="chakra-form__label css-1qqx8g3"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                          id="field-7-label"
                        >
                          Compare to
                        </label>
                      </Styled(label)>
                    </FormLabel>
                    <ForwardRef
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputId="00000000-0000-0000-0000-000000000000"
                      isClearable={true}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "_id": "abcd",
                            "accessGroup": "accessGroupName",
                            "bounds": Object {},
                            "bundleId": "1",
                            "complete": true,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "cutoffMinutes": 60,
                            "cutoffsMinutes": Array [
                              60,
                            ],
                            "deleted": false,
                            "destinationPointSetIds": Array [
                              "Jobs_total",
                            ],
                            "grid": "Jobs_total",
                            "height": 300,
                            "name": "ANALYSIS 1",
                            "nonce": "12345",
                            "north": 20024,
                            "projectId": "1",
                            "request": Object {
                              "accessModes": "WALK",
                              "bikeSafe": 1,
                              "bikeSlope": 1,
                              "bikeSpeed": 4.166666666666667,
                              "bikeTime": 1,
                              "bounds": Object {
                                "east": -76,
                                "north": 39,
                                "south": 38,
                                "west": -77,
                              },
                              "bundleId": "1",
                              "date": "2016-01-16",
                              "defaultExpanded": true,
                              "directModes": "WALK",
                              "egressModes": "WALK",
                              "fromLat": 12,
                              "fromLon": 34,
                              "fromTime": 25200,
                              "maxBikeTime": 20,
                              "maxRides": 4,
                              "maxTripDurationMinutes": 60,
                              "maxWalkTime": 20,
                              "monteCarloDraws": 200,
                              "name": "Profile Request Test",
                              "projectId": "1",
                              "reachabilityThreshold": 0,
                              "regionId": "1",
                              "toTime": 32400,
                              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                              "travelTimePercentile": 50,
                              "variantIndex": 0,
                              "walkSpeed": 1.3888888888888888,
                              "workerVersion": "v4.0.0",
                            },
                            "status": "DONE",
                            "travelTimePercentile": -1,
                            "travelTimePercentiles": Array [
                              50,
                            ],
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variant": 0,
                            "west": 20015,
                            "width": 300,
                            "workerVersion": "v3.2.0",
                            "zoom": 9,
                          },
                          Object {
                            "_id": "efgh",
                            "accessGroup": "accessGroupName",
                            "bounds": Object {},
                            "bundleId": "1",
                            "complete": true,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "cutoffMinutes": 60,
                            "cutoffsMinutes": Array [
                              60,
                            ],
                            "deleted": false,
                            "destinationPointSetIds": Array [
                              "Jobs_total",
                            ],
                            "grid": "Jobs_total",
                            "height": 300,
                            "name": "ANALYSIS 2",
                            "nonce": "12345",
                            "north": 20024,
                            "projectId": "1",
                            "request": Object {
                              "accessModes": "WALK",
                              "bikeSafe": 1,
                              "bikeSlope": 1,
                              "bikeSpeed": 4.166666666666667,
                              "bikeTime": 1,
                              "bounds": Object {
                                "east": -76,
                                "north": 39,
                                "south": 38,
                                "west": -77,
                              },
                              "bundleId": "1",
                              "date": "2016-01-16",
                              "defaultExpanded": true,
                              "directModes": "WALK",
                              "egressModes": "WALK",
                              "fromLat": 12,
                              "fromLon": 34,
                              "fromTime": 25200,
                              "maxBikeTime": 20,
                              "maxRides": 4,
                              "maxTripDurationMinutes": 60,
                              "maxWalkTime": 20,
                              "monteCarloDraws": 200,
                              "name": "Profile Request Test",
                              "projectId": "1",
                              "reachabilityThreshold": 0,
                              "regionId": "1",
                              "toTime": 32400,
                              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                              "travelTimePercentile": 50,
                              "variantIndex": 0,
                              "walkSpeed": 1.3888888888888888,
                              "workerVersion": "v4.0.0",
                            },
                            "status": "DONE",
                            "travelTimePercentile": 50,
                            "travelTimePercentiles": Array [
                              50,
                            ],
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variant": 1,
                            "west": 20015,
                            "width": 300,
                            "workerVersion": "v3.2.0",
                            "zoom": 9,
                          },
                        ]
                      }
                      value={
                        Object {
                          "_id": "efgh",
                          "accessGroup": "accessGroupName",
                          "bounds": Object {},
                          "bundleId": "1",
                          "complete": true,
                          "createdAt": "2017-11-08T12:30:50.133Z",
                          "createdBy": "person@gmail.com",
                          "cutoffMinutes": 60,
                          "cutoffsMinutes": Array [
                            60,
                          ],
                          "deleted": false,
                          "destinationPointSetIds": Array [
                            "Jobs_total",
                          ],
                          "grid": "Jobs_total",
                          "height": 300,
                          "name": "ANALYSIS 2",
                          "nonce": "12345",
                          "north": 20024,
                          "projectId": "1",
                          "request": Object {
                            "accessModes": "WALK",
                            "bikeSafe": 1,
                            "bikeSlope": 1,
                            "bikeSpeed": 4.166666666666667,
                            "bikeTime": 1,
                            "bounds": Object {
                              "east": -76,
                              "north": 39,
                              "south": 38,
                              "west": -77,
                            },
                            "bundleId": "1",
                            "date": "2016-01-16",
                            "defaultExpanded": true,
                            "directModes": "WALK",
                            "egressModes": "WALK",
                            "fromLat": 12,
                            "fromLon": 34,
                            "fromTime": 25200,
                            "maxBikeTime": 20,
                            "maxRides": 4,
                            "maxTripDurationMinutes": 60,
                            "maxWalkTime": 20,
                            "monteCarloDraws": 200,
                            "name": "Profile Request Test",
                            "projectId": "1",
                            "reachabilityThreshold": 0,
                            "regionId": "1",
                            "toTime": 32400,
                            "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                            "travelTimePercentile": 50,
                            "variantIndex": 0,
                            "walkSpeed": 1.3888888888888888,
                            "workerVersion": "v4.0.0",
                          },
                          "status": "DONE",
                          "travelTimePercentile": 50,
                          "travelTimePercentiles": Array [
                            50,
                          ],
                          "updatedAt": "2017-11-08T12:31:19.602Z",
                          "updatedBy": "person@gmail.com",
                          "variant": 1,
                          "west": 20015,
                          "width": 300,
                          "workerVersion": "v3.2.0",
                          "zoom": 9,
                        }
                      }
                    >
                      <ReactSelect
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        innerRef={null}
                        inputId="00000000-0000-0000-0000-000000000000"
                        isClearable={true}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "_id": "abcd",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 1",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": -1,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 0,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                            Object {
                              "_id": "efgh",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 2",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": 50,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 1,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                          ]
                        }
                        styles={
                          Object {
                            "control": [Function],
                            "menu": [Function],
                            "option": [Function],
                          }
                        }
                        value={
                          Object {
                            "_id": "efgh",
                            "accessGroup": "accessGroupName",
                            "bounds": Object {},
                            "bundleId": "1",
                            "complete": true,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "cutoffMinutes": 60,
                            "cutoffsMinutes": Array [
                              60,
                            ],
                            "deleted": false,
                            "destinationPointSetIds": Array [
                              "Jobs_total",
                            ],
                            "grid": "Jobs_total",
                            "height": 300,
                            "name": "ANALYSIS 2",
                            "nonce": "12345",
                            "north": 20024,
                            "projectId": "1",
                            "request": Object {
                              "accessModes": "WALK",
                              "bikeSafe": 1,
                              "bikeSlope": 1,
                              "bikeSpeed": 4.166666666666667,
                              "bikeTime": 1,
                              "bounds": Object {
                                "east": -76,
                                "north": 39,
                                "south": 38,
                                "west": -77,
                              },
                              "bundleId": "1",
                              "date": "2016-01-16",
                              "defaultExpanded": true,
                              "directModes": "WALK",
                              "egressModes": "WALK",
                              "fromLat": 12,
                              "fromLon": 34,
                              "fromTime": 25200,
                              "maxBikeTime": 20,
                              "maxRides": 4,
                              "maxTripDurationMinutes": 60,
                              "maxWalkTime": 20,
                              "monteCarloDraws": 200,
                              "name": "Profile Request Test",
                              "projectId": "1",
                              "reachabilityThreshold": 0,
                              "regionId": "1",
                              "toTime": 32400,
                              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                              "travelTimePercentile": 50,
                              "variantIndex": 0,
                              "walkSpeed": 1.3888888888888888,
                              "workerVersion": "v4.0.0",
                            },
                            "status": "DONE",
                            "travelTimePercentile": 50,
                            "travelTimePercentiles": Array [
                              50,
                            ],
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variant": 1,
                            "west": 20015,
                            "width": 300,
                            "workerVersion": "v3.2.0",
                            "zoom": 9,
                          }
                        }
                      >
                        <div
                          className="ReactSelectMock"
                        />
                      </ReactSelect>
                    </ForwardRef>
                  </div>
                </Styled(div)>
              </FormControl>
              <ComparisonDisplay
                analysis={
                  Object {
                    "_id": "abcd",
                    "accessGroup": "accessGroupName",
                    "bounds": Object {},
                    "bundleId": "1",
                    "complete": true,
                    "createdAt": "2017-11-08T12:30:50.133Z",
                    "createdBy": "person@gmail.com",
                    "cutoffMinutes": 60,
                    "cutoffsMinutes": Array [
                      60,
                    ],
                    "deleted": false,
                    "destinationPointSetIds": Array [
                      "Jobs_total",
                    ],
                    "grid": "Jobs_total",
                    "height": 300,
                    "name": "ANALYSIS 1",
                    "nonce": "12345",
                    "north": 20024,
                    "projectId": "1",
                    "request": Object {
                      "accessModes": "WALK",
                      "bikeSafe": 1,
                      "bikeSlope": 1,
                      "bikeSpeed": 4.166666666666667,
                      "bikeTime": 1,
                      "bounds": Object {
                        "east": -76,
                        "north": 39,
                        "south": 38,
                        "west": -77,
                      },
                      "bundleId": "1",
                      "date": "2016-01-16",
                      "defaultExpanded": true,
                      "directModes": "WALK",
                      "egressModes": "WALK",
                      "fromLat": 12,
                      "fromLon": 34,
                      "fromTime": 25200,
                      "maxBikeTime": 20,
                      "maxRides": 4,
                      "maxTripDurationMinutes": 60,
                      "maxWalkTime": 20,
                      "monteCarloDraws": 200,
                      "name": "Profile Request Test",
                      "projectId": "1",
                      "reachabilityThreshold": 0,
                      "regionId": "1",
                      "toTime": 32400,
                      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                      "travelTimePercentile": 50,
                      "variantIndex": 0,
                      "walkSpeed": 1.3888888888888888,
                      "workerVersion": "v4.0.0",
                    },
                    "status": "DONE",
                    "travelTimePercentile": -1,
                    "travelTimePercentiles": Array [
                      50,
                    ],
                    "updatedAt": "2017-11-08T12:31:19.602Z",
                    "updatedBy": "person@gmail.com",
                    "variant": 0,
                    "west": 20015,
                    "width": 300,
                    "workerVersion": "v3.2.0",
                    "zoom": 9,
                  }
                }
                comparisonAnalysis={
                  Object {
                    "_id": "efgh",
                    "accessGroup": "accessGroupName",
                    "bounds": Object {},
                    "bundleId": "1",
                    "complete": true,
                    "createdAt": "2017-11-08T12:30:50.133Z",
                    "createdBy": "person@gmail.com",
                    "cutoffMinutes": 60,
                    "cutoffsMinutes": Array [
                      60,
                    ],
                    "deleted": false,
                    "destinationPointSetIds": Array [
                      "Jobs_total",
                    ],
                    "grid": "Jobs_total",
                    "height": 300,
                    "name": "ANALYSIS 2",
                    "nonce": "12345",
                    "north": 20024,
                    "projectId": "1",
                    "request": Object {
                      "accessModes": "WALK",
                      "bikeSafe": 1,
                      "bikeSlope": 1,
                      "bikeSpeed": 4.166666666666667,
                      "bikeTime": 1,
                      "bounds": Object {
                        "east": -76,
                        "north": 39,
                        "south": 38,
                        "west": -77,
                      },
                      "bundleId": "1",
                      "date": "2016-01-16",
                      "defaultExpanded": true,
                      "directModes": "WALK",
                      "egressModes": "WALK",
                      "fromLat": 12,
                      "fromLon": 34,
                      "fromTime": 25200,
                      "maxBikeTime": 20,
                      "maxRides": 4,
                      "maxTripDurationMinutes": 60,
                      "maxWalkTime": 20,
                      "monteCarloDraws": 200,
                      "name": "Profile Request Test",
                      "projectId": "1",
                      "reachabilityThreshold": 0,
                      "regionId": "1",
                      "toTime": 32400,
                      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                      "travelTimePercentile": 50,
                      "variantIndex": 0,
                      "walkSpeed": 1.3888888888888888,
                      "workerVersion": "v4.0.0",
                    },
                    "status": "DONE",
                    "travelTimePercentile": 50,
                    "travelTimePercentiles": Array [
                      50,
                    ],
                    "updatedAt": "2017-11-08T12:31:19.602Z",
                    "updatedBy": "person@gmail.com",
                    "variant": 1,
                    "west": 20015,
                    "width": 300,
                    "workerVersion": "v3.2.0",
                    "zoom": 9,
                  }
                }
                key=".1"
              >
                <Stack
                  pb={4}
                  px={4}
                  spacing={4}
                >
                  <Styled(div)
                    __css={
                      Object {
                        "& > *:not(style) ~ *:not(style)": Object {
                          "marginStart": 0,
                          "marginTop": 4,
                        },
                      }
                    }
                    className="chakra-stack"
                    display="flex"
                    flexDirection="column"
                    pb={4}
                    px={4}
                  >
                    <div
                      className="chakra-stack css-12ojzo0"
                    >
                      <Select
                        id="00000000-0000-0000-0000-000000000000"
                        isInvalid={false}
                        isValid={true}
                        key=".1"
                        onChange={[Function]}
                      >
                        <Styled(div)
                          __css={
                            Object {
                              "color": undefined,
                              "height": "fit-content",
                              "position": "relative",
                              "width": "100%",
                            }
                          }
                          className="chakra-select__wrapper"
                        >
                          <div
                            className="chakra-select__wrapper css-42b2qy"
                          >
                            <SelectField
                              __css={
                                Object {
                                  "> option": Object {
                                    "bg": "white",
                                  },
                                  "_disabled": Object {
                                    "cursor": "not-allowed",
                                    "opacity": 0.4,
                                  },
                                  "_focus": Object {
                                    "borderColor": "#3182ce",
                                    "boxShadow": "0 0 0 1px #3182ce",
                                    "zIndex": "unset",
                                  },
                                  "_hover": Object {
                                    "borderColor": "gray.300",
                                  },
                                  "_invalid": Object {
                                    "borderColor": "#E53E3E",
                                    "boxShadow": "0 0 0 1px #E53E3E",
                                  },
                                  "_readOnly": Object {
                                    "boxShadow": "none !important",
                                    "userSelect": "all",
                                  },
                                  "appearance": "none",
                                  "bg": "inherit",
                                  "border": "1px solid",
                                  "borderColor": "inherit",
                                  "borderRadius": "md",
                                  "fontSize": "md",
                                  "h": 10,
                                  "lineHeight": "normal",
                                  "minWidth": 0,
                                  "outline": 0,
                                  "paddingBottom": "1px",
                                  "position": "relative",
                                  "pr": "2rem",
                                  "px": 4,
                                  "transition": "all 0.2s",
                                  "width": "100%",
                                }
                              }
                              id="00000000-0000-0000-0000-000000000000"
                              isInvalid={false}
                              isValid={true}
                              onChange={[Function]}
                            >
                              <Styled(select)
                                __css={
                                  Object {
                                    "> option": Object {
                                      "bg": "white",
                                    },
                                    "_disabled": Object {
                                      "cursor": "not-allowed",
                                      "opacity": 0.4,
                                    },
                                    "_focus": Object {
                                      "borderColor": "#3182ce",
                                      "boxShadow": "0 0 0 1px #3182ce",
                                      "zIndex": "unset",
                                    },
                                    "_hover": Object {
                                      "borderColor": "gray.300",
                                    },
                                    "_invalid": Object {
                                      "borderColor": "#E53E3E",
                                      "boxShadow": "0 0 0 1px #E53E3E",
                                    },
                                    "_readOnly": Object {
                                      "boxShadow": "none !important",
                                      "userSelect": "all",
                                    },
                                    "appearance": "none",
                                    "bg": "inherit",
                                    "border": "1px solid",
                                    "borderColor": "inherit",
                                    "borderRadius": "md",
                                    "fontSize": "md",
                                    "h": 10,
                                    "lineHeight": "normal",
                                    "minWidth": 0,
                                    "outline": 0,
                                    "paddingBottom": "1px",
                                    "position": "relative",
                                    "pr": "2rem",
                                    "px": 4,
                                    "transition": "all 0.2s",
                                    "width": "100%",
                                  }
                                }
                                className="chakra-select"
                                id="00000000-0000-0000-0000-000000000000"
                                isValid={true}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                              >
                                <select
                                  className="chakra-select css-6jerdq"
                                  id="00000000-0000-0000-0000-000000000000"
                                  isValid={true}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                >
                                  <option
                                    key="Jobs_total"
                                    value="Jobs_total"
                                  >
                                    undefined: undefined
                                  </option>
                                </select>
                              </Styled(select)>
                            </SelectField>
                            <SelectIcon
                              __css={
                                Object {
                                  "_disabled": Object {
                                    "opacity": 0.5,
                                  },
                                  "color": "currentColor",
                                  "fontSize": "1.25rem",
                                  "height": "100%",
                                  "position": "relative",
                                  "right": "0.5rem",
                                  "width": "1.5rem",
                                }
                              }
                            >
                              <Styled(div)
                                __css={
                                  Object {
                                    "_disabled": Object {
                                      "opacity": 0.5,
                                    },
                                    "color": "currentColor",
                                    "fontSize": "1.25rem",
                                    "height": "100%",
                                    "position": "relative",
                                    "right": "0.5rem",
                                    "width": "1.5rem",
                                  }
                                }
                                className="chakra-select__icon-wrapper"
                              >
                                <div
                                  className="chakra-select__icon-wrapper css-fmsrp"
                                >
                                  <DefaultIcon
                                    aria-hidden={true}
                                    className="chakra-select__icon"
                                    focusable={false}
                                    role="presentation"
                                    style={
                                      Object {
                                        "color": "currentColor",
                                        "height": "1em",
                                        "width": "1em",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="chakra-select__icon"
                                      focusable={false}
                                      role="presentation"
                                      style={
                                        Object {
                                          "color": "currentColor",
                                          "height": "1em",
                                          "width": "1em",
                                        }
                                      }
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </DefaultIcon>
                                </div>
                              </Styled(div)>
                            </SelectIcon>
                          </div>
                        </Styled(div)>
                      </Select>
                      <Stack
                        isInline={true}
                        key=".2"
                      >
                        <Styled(div)
                          __css={
                            Object {
                              "& > *:not(style) ~ *:not(style)": Object {
                                "marginStart": "0.5rem",
                                "marginTop": 0,
                              },
                            }
                          }
                          className="chakra-stack"
                          display="flex"
                          flexDirection="row"
                        >
                          <div
                            className="chakra-stack css-loe1j3"
                          >
                            <Select
                              id="00000000-0000-0000-0000-000000000000"
                              isInvalid={false}
                              isValid={true}
                              key=".0"
                              onChange={[Function]}
                              value={60}
                            >
                              <Styled(div)
                                __css={
                                  Object {
                                    "color": undefined,
                                    "height": "fit-content",
                                    "position": "relative",
                                    "width": "100%",
                                  }
                                }
                                className="chakra-select__wrapper"
                              >
                                <div
                                  className="chakra-select__wrapper css-42b2qy"
                                >
                                  <SelectField
                                    __css={
                                      Object {
                                        "> option": Object {
                                          "bg": "white",
                                        },
                                        "_disabled": Object {
                                          "cursor": "not-allowed",
                                          "opacity": 0.4,
                                        },
                                        "_focus": Object {
                                          "borderColor": "#3182ce",
                                          "boxShadow": "0 0 0 1px #3182ce",
                                          "zIndex": "unset",
                                        },
                                        "_hover": Object {
                                          "borderColor": "gray.300",
                                        },
                                        "_invalid": Object {
                                          "borderColor": "#E53E3E",
                                          "boxShadow": "0 0 0 1px #E53E3E",
                                        },
                                        "_readOnly": Object {
                                          "boxShadow": "none !important",
                                          "userSelect": "all",
                                        },
                                        "appearance": "none",
                                        "bg": "inherit",
                                        "border": "1px solid",
                                        "borderColor": "inherit",
                                        "borderRadius": "md",
                                        "fontSize": "md",
                                        "h": 10,
                                        "lineHeight": "normal",
                                        "minWidth": 0,
                                        "outline": 0,
                                        "paddingBottom": "1px",
                                        "position": "relative",
                                        "pr": "2rem",
                                        "px": 4,
                                        "transition": "all 0.2s",
                                        "width": "100%",
                                      }
                                    }
                                    id="00000000-0000-0000-0000-000000000000"
                                    isInvalid={false}
                                    isValid={true}
                                    onChange={[Function]}
                                    value={60}
                                  >
                                    <Styled(select)
                                      __css={
                                        Object {
                                          "> option": Object {
                                            "bg": "white",
                                          },
                                          "_disabled": Object {
                                            "cursor": "not-allowed",
                                            "opacity": 0.4,
                                          },
                                          "_focus": Object {
                                            "borderColor": "#3182ce",
                                            "boxShadow": "0 0 0 1px #3182ce",
                                            "zIndex": "unset",
                                          },
                                          "_hover": Object {
                                            "borderColor": "gray.300",
                                          },
                                          "_invalid": Object {
                                            "borderColor": "#E53E3E",
                                            "boxShadow": "0 0 0 1px #E53E3E",
                                          },
                                          "_readOnly": Object {
                                            "boxShadow": "none !important",
                                            "userSelect": "all",
                                          },
                                          "appearance": "none",
                                          "bg": "inherit",
                                          "border": "1px solid",
                                          "borderColor": "inherit",
                                          "borderRadius": "md",
                                          "fontSize": "md",
                                          "h": 10,
                                          "lineHeight": "normal",
                                          "minWidth": 0,
                                          "outline": 0,
                                          "paddingBottom": "1px",
                                          "position": "relative",
                                          "pr": "2rem",
                                          "px": 4,
                                          "transition": "all 0.2s",
                                          "width": "100%",
                                        }
                                      }
                                      className="chakra-select"
                                      id="00000000-0000-0000-0000-000000000000"
                                      isValid={true}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      value={60}
                                    >
                                      <select
                                        className="chakra-select css-6jerdq"
                                        id="00000000-0000-0000-0000-000000000000"
                                        isValid={true}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value={60}
                                      >
                                        <option
                                          key="60"
                                          value={60}
                                        >
                                          60
                                           minutes
                                        </option>
                                      </select>
                                    </Styled(select)>
                                  </SelectField>
                                  <SelectIcon
                                    __css={
                                      Object {
                                        "_disabled": Object {
                                          "opacity": 0.5,
                                        },
                                        "color": "currentColor",
                                        "fontSize": "1.25rem",
                                        "height": "100%",
                                        "position": "relative",
                                        "right": "0.5rem",
                                        "width": "1.5rem",
                                      }
                                    }
                                  >
                                    <Styled(div)
                                      __css={
                                        Object {
                                          "_disabled": Object {
                                            "opacity": 0.5,
                                          },
                                          "color": "currentColor",
                                          "fontSize": "1.25rem",
                                          "height": "100%",
                                          "position": "relative",
                                          "right": "0.5rem",
                                          "width": "1.5rem",
                                        }
                                      }
                                      className="chakra-select__icon-wrapper"
                                    >
                                      <div
                                        className="chakra-select__icon-wrapper css-fmsrp"
                                      >
                                        <DefaultIcon
                                          aria-hidden={true}
                                          className="chakra-select__icon"
                                          focusable={false}
                                          role="presentation"
                                          style={
                                            Object {
                                              "color": "currentColor",
                                              "height": "1em",
                                              "width": "1em",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="chakra-select__icon"
                                            focusable={false}
                                            role="presentation"
                                            style={
                                              Object {
                                                "color": "currentColor",
                                                "height": "1em",
                                                "width": "1em",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </DefaultIcon>
                                      </div>
                                    </Styled(div)>
                                  </SelectIcon>
                                </div>
                              </Styled(div)>
                            </Select>
                            <Select
                              id="00000000-0000-0000-0000-000000000000"
                              isInvalid={false}
                              isValid={true}
                              key=".1"
                              onChange={[Function]}
                              value={50}
                            >
                              <Styled(div)
                                __css={
                                  Object {
                                    "color": undefined,
                                    "height": "fit-content",
                                    "position": "relative",
                                    "width": "100%",
                                  }
                                }
                                className="chakra-select__wrapper"
                              >
                                <div
                                  className="chakra-select__wrapper css-42b2qy"
                                >
                                  <SelectField
                                    __css={
                                      Object {
                                        "> option": Object {
                                          "bg": "white",
                                        },
                                        "_disabled": Object {
                                          "cursor": "not-allowed",
                                          "opacity": 0.4,
                                        },
                                        "_focus": Object {
                                          "borderColor": "#3182ce",
                                          "boxShadow": "0 0 0 1px #3182ce",
                                          "zIndex": "unset",
                                        },
                                        "_hover": Object {
                                          "borderColor": "gray.300",
                                        },
                                        "_invalid": Object {
                                          "borderColor": "#E53E3E",
                                          "boxShadow": "0 0 0 1px #E53E3E",
                                        },
                                        "_readOnly": Object {
                                          "boxShadow": "none !important",
                                          "userSelect": "all",
                                        },
                                        "appearance": "none",
                                        "bg": "inherit",
                                        "border": "1px solid",
                                        "borderColor": "inherit",
                                        "borderRadius": "md",
                                        "fontSize": "md",
                                        "h": 10,
                                        "lineHeight": "normal",
                                        "minWidth": 0,
                                        "outline": 0,
                                        "paddingBottom": "1px",
                                        "position": "relative",
                                        "pr": "2rem",
                                        "px": 4,
                                        "transition": "all 0.2s",
                                        "width": "100%",
                                      }
                                    }
                                    id="00000000-0000-0000-0000-000000000000"
                                    isInvalid={false}
                                    isValid={true}
                                    onChange={[Function]}
                                    value={50}
                                  >
                                    <Styled(select)
                                      __css={
                                        Object {
                                          "> option": Object {
                                            "bg": "white",
                                          },
                                          "_disabled": Object {
                                            "cursor": "not-allowed",
                                            "opacity": 0.4,
                                          },
                                          "_focus": Object {
                                            "borderColor": "#3182ce",
                                            "boxShadow": "0 0 0 1px #3182ce",
                                            "zIndex": "unset",
                                          },
                                          "_hover": Object {
                                            "borderColor": "gray.300",
                                          },
                                          "_invalid": Object {
                                            "borderColor": "#E53E3E",
                                            "boxShadow": "0 0 0 1px #E53E3E",
                                          },
                                          "_readOnly": Object {
                                            "boxShadow": "none !important",
                                            "userSelect": "all",
                                          },
                                          "appearance": "none",
                                          "bg": "inherit",
                                          "border": "1px solid",
                                          "borderColor": "inherit",
                                          "borderRadius": "md",
                                          "fontSize": "md",
                                          "h": 10,
                                          "lineHeight": "normal",
                                          "minWidth": 0,
                                          "outline": 0,
                                          "paddingBottom": "1px",
                                          "position": "relative",
                                          "pr": "2rem",
                                          "px": 4,
                                          "transition": "all 0.2s",
                                          "width": "100%",
                                        }
                                      }
                                      className="chakra-select"
                                      id="00000000-0000-0000-0000-000000000000"
                                      isValid={true}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      value={50}
                                    >
                                      <select
                                        className="chakra-select css-6jerdq"
                                        id="00000000-0000-0000-0000-000000000000"
                                        isValid={true}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value={50}
                                      >
                                        <option
                                          key="50"
                                          value={50}
                                        >
                                          50
                                          th percentile
                                        </option>
                                      </select>
                                    </Styled(select)>
                                  </SelectField>
                                  <SelectIcon
                                    __css={
                                      Object {
                                        "_disabled": Object {
                                          "opacity": 0.5,
                                        },
                                        "color": "currentColor",
                                        "fontSize": "1.25rem",
                                        "height": "100%",
                                        "position": "relative",
                                        "right": "0.5rem",
                                        "width": "1.5rem",
                                      }
                                    }
                                  >
                                    <Styled(div)
                                      __css={
                                        Object {
                                          "_disabled": Object {
                                            "opacity": 0.5,
                                          },
                                          "color": "currentColor",
                                          "fontSize": "1.25rem",
                                          "height": "100%",
                                          "position": "relative",
                                          "right": "0.5rem",
                                          "width": "1.5rem",
                                        }
                                      }
                                      className="chakra-select__icon-wrapper"
                                    >
                                      <div
                                        className="chakra-select__icon-wrapper css-fmsrp"
                                      >
                                        <DefaultIcon
                                          aria-hidden={true}
                                          className="chakra-select__icon"
                                          focusable={false}
                                          role="presentation"
                                          style={
                                            Object {
                                              "color": "currentColor",
                                              "height": "1em",
                                              "width": "1em",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="chakra-select__icon"
                                            focusable={false}
                                            role="presentation"
                                            style={
                                              Object {
                                                "color": "currentColor",
                                                "height": "1em",
                                                "width": "1em",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </DefaultIcon>
                                      </div>
                                    </Styled(div)>
                                  </SelectIcon>
                                </div>
                              </Styled(div)>
                            </Select>
                          </div>
                        </Styled(div)>
                      </Stack>
                    </div>
                  </Styled(div)>
                </Stack>
                <ProfileRequestDisplay
                  bundleId="1"
                  color="red"
                  profileRequest={
                    Object {
                      "_id": "efgh",
                      "accessGroup": "accessGroupName",
                      "accessModes": "WALK",
                      "bikeSafe": 1,
                      "bikeSlope": 1,
                      "bikeSpeed": 4.166666666666667,
                      "bikeTime": 1,
                      "bounds": Object {
                        "east": -76,
                        "north": 39,
                        "south": 38,
                        "west": -77,
                      },
                      "bundleId": "1",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "date": "2016-01-16",
                      "defaultExpanded": true,
                      "deleted": false,
                      "destinationPointSetIds": Array [
                        "Jobs_total",
                      ],
                      "directModes": "WALK",
                      "egressModes": "WALK",
                      "fromLat": 12,
                      "fromLon": 34,
                      "fromTime": 25200,
                      "grid": "Jobs_total",
                      "height": 300,
                      "maxBikeTime": 20,
                      "maxRides": 4,
                      "maxTripDurationMinutes": 60,
                      "maxWalkTime": 20,
                      "monteCarloDraws": 200,
                      "name": "Profile Request Test",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "1",
                      "reachabilityThreshold": 0,
                      "regionId": "1",
                      "status": "DONE",
                      "toTime": 32400,
                      "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                      "travelTimePercentile": 50,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 1,
                      "variantIndex": 0,
                      "walkSpeed": 1.3888888888888888,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v4.0.0",
                      "zoom": 9,
                    }
                  }
                  projectId="1"
                >
                  <Stack>
                    <Styled(div)
                      __css={
                        Object {
                          "& > *:not(style) ~ *:not(style)": Object {
                            "marginStart": 0,
                            "marginTop": "0.5rem",
                          },
                        }
                      }
                      className="chakra-stack"
                      display="flex"
                      flexDirection="column"
                    >
                      <div
                        className="chakra-stack css-1pifhv5"
                      >
                        <Box
                          as="table"
                          key=".0"
                          style={
                            Object {
                              "tableLayout": "fixed",
                            }
                          }
                          width="100%"
                        >
                          <table
                            className="css-8atqhb"
                            style={
                              Object {
                                "tableLayout": "fixed",
                              }
                            }
                          >
                            <tbody>
                              <tr>
                                <TDTitle>
                                  <Box
                                    as="td"
                                    fontWeight={600}
                                    overflow="hidden"
                                    px={4}
                                    py={2}
                                    style={
                                      Object {
                                        "textOverflow": "ellipsis",
                                      }
                                    }
                                    textAlign="right"
                                    title="Bundle"
                                    width="35%"
                                  >
                                    <td
                                      className="css-1lwb3yd"
                                      style={
                                        Object {
                                          "textOverflow": "ellipsis",
                                        }
                                      }
                                      title="Bundle"
                                    >
                                      Bundle
                                    </td>
                                  </Box>
                                </TDTitle>
                                <TDValue>
                                  <Box
                                    as="td"
                                    width="65%"
                                  >
                                    <td
                                      className="css-ft9ciy"
                                    >
                                      <ALink
                                        query={
                                          Object {
                                            "bundleId": "1",
                                            "regionId": "1",
                                          }
                                        }
                                        to="bundle"
                                      >
                                        <InternalLink
                                          query={
                                            Object {
                                              "bundleId": "1",
                                              "regionId": "1",
                                            }
                                          }
                                          to="bundle"
                                        >
                                          <Link
                                            href="/regions/1/bundles/1"
                                            passHref={true}
                                          >
                                            <a
                                              className=""
                                              href="/regions/1/bundles/1"
                                              onClick={[Function]}
                                              onMouseEnter={[Function]}
                                            >
                                              Mock Bundle
                                            </a>
                                          </Link>
                                        </InternalLink>
                                      </ALink>
                                    </td>
                                  </Box>
                                </TDValue>
                              </tr>
                              <tr>
                                <TDTitle>
                                  <Box
                                    as="td"
                                    fontWeight={600}
                                    overflow="hidden"
                                    px={4}
                                    py={2}
                                    style={
                                      Object {
                                        "textOverflow": "ellipsis",
                                      }
                                    }
                                    textAlign="right"
                                    title="Project"
                                    width="35%"
                                  >
                                    <td
                                      className="css-1lwb3yd"
                                      style={
                                        Object {
                                          "textOverflow": "ellipsis",
                                        }
                                      }
                                      title="Project"
                                    >
                                      Project
                                    </td>
                                  </Box>
                                </TDTitle>
                                <TDValue>
                                  <Box
                                    as="td"
                                    width="65%"
                                  >
                                    <td
                                      className="css-ft9ciy"
                                    >
                                      <ForwardRef
                                        label="Notice: project may have changed since the analysis was run."
                                      >
                                        <Tooltip
                                          aria-label="Tooltip: Notice: project may have changed since the analysis was run."
                                          fontSize="md"
                                          label="Notice: project may have changed since the analysis was run."
                                          zIndex={1500}
                                        >
                                          <div
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseEnter={[Function]}
                                          >
                                            <ALink
                                              query={
                                                Object {
                                                  "projectId": "1",
                                                  "regionId": "1",
                                                }
                                              }
                                              to="modifications"
                                            >
                                              <InternalLink
                                                query={
                                                  Object {
                                                    "projectId": "1",
                                                    "regionId": "1",
                                                  }
                                                }
                                                to="modifications"
                                              >
                                                <Link
                                                  href="/regions/1/projects/1/modifications"
                                                  passHref={true}
                                                >
                                                  <a
                                                    className=""
                                                    href="/regions/1/projects/1/modifications"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                  >
                                                    Mock Project
                                                  </a>
                                                </Link>
                                              </InternalLink>
                                            </ALink>
                                          </div>
                                          <AnimatePresence />
                                        </Tooltip>
                                      </ForwardRef>
                                    </td>
                                  </Box>
                                </TDValue>
                              </tr>
                              <tr>
                                <TDTitle>
                                  <Box
                                    as="td"
                                    fontWeight={600}
                                    overflow="hidden"
                                    px={4}
                                    py={2}
                                    style={
                                      Object {
                                        "textOverflow": "ellipsis",
                                      }
                                    }
                                    textAlign="right"
                                    title="Scenario"
                                    width="35%"
                                  >
                                    <td
                                      className="css-1lwb3yd"
                                      style={
                                        Object {
                                          "textOverflow": "ellipsis",
                                        }
                                      }
                                      title="Scenario"
                                    >
                                      Scenario
                                    </td>
                                  </Box>
                                </TDTitle>
                                <TDValue>
                                  <Box
                                    as="td"
                                    width="65%"
                                  >
                                    <td
                                      className="css-ft9ciy"
                                    >
                                      Unknown
                                    </td>
                                  </Box>
                                </TDValue>
                              </tr>
                              <tr>
                                <TDTitle>
                                  <Box
                                    as="td"
                                    fontWeight={600}
                                    overflow="hidden"
                                    px={4}
                                    py={2}
                                    style={
                                      Object {
                                        "textOverflow": "ellipsis",
                                      }
                                    }
                                    textAlign="right"
                                    title="Service Date"
                                    width="35%"
                                  >
                                    <td
                                      className="css-1lwb3yd"
                                      style={
                                        Object {
                                          "textOverflow": "ellipsis",
                                        }
                                      }
                                      title="Service Date"
                                    >
                                      Service Date
                                    </td>
                                  </Box>
                                </TDTitle>
                                <TDValue>
                                  <Box
                                    as="td"
                                    width="65%"
                                  >
                                    <td
                                      className="css-ft9ciy"
                                    >
                                      2016-01-16
                                    </td>
                                  </Box>
                                </TDValue>
                              </tr>
                              <tr>
                                <TDTitle>
                                  <Box
                                    as="td"
                                    fontWeight={600}
                                    overflow="hidden"
                                    px={4}
                                    py={2}
                                    style={
                                      Object {
                                        "textOverflow": "ellipsis",
                                      }
                                    }
                                    textAlign="right"
                                    title="Service Time"
                                    width="35%"
                                  >
                                    <td
                                      className="css-1lwb3yd"
                                      style={
                                        Object {
                                          "textOverflow": "ellipsis",
                                        }
                                      }
                                      title="Service Time"
                                    >
                                      Service Time
                                    </td>
                                  </Box>
                                </TDTitle>
                                <TDValue>
                                  <Box
                                    as="td"
                                    width="65%"
                                  >
                                    <td
                                      className="css-ft9ciy"
                                    >
                                      07:00
                                      -
                                      09:00
                                    </td>
                                  </Box>
                                </TDValue>
                              </tr>
                              <tr>
                                <TDTitle>
                                  <Box
                                    as="td"
                                    fontWeight={600}
                                    overflow="hidden"
                                    px={4}
                                    py={2}
                                    style={
                                      Object {
                                        "textOverflow": "ellipsis",
                                      }
                                    }
                                    textAlign="right"
                                    title="Modes"
                                    width="35%"
                                  >
                                    <td
                                      className="css-1lwb3yd"
                                      style={
                                        Object {
                                          "textOverflow": "ellipsis",
                                        }
                                      }
                                      title="Modes"
                                    >
                                      Modes
                                    </td>
                                  </Box>
                                </TDTitle>
                                <TDValue>
                                  <Box
                                    as="td"
                                    width="65%"
                                  >
                                    <td
                                      className="css-ft9ciy"
                                    >
                                      <ModeSummary
                                        accessModes="WALK"
                                        color="red"
                                        egressModes="WALK"
                                        transitModes="BUS,TRAM,RAIL,SUBWAY"
                                      >
                                        <Stack
                                          align="center"
                                          isInline={true}
                                          spacing={1}
                                        >
                                          <Styled(div)
                                            __css={
                                              Object {
                                                "& > *:not(style) ~ *:not(style)": Object {
                                                  "marginStart": 1,
                                                  "marginTop": 0,
                                                },
                                              }
                                            }
                                            alignItems="center"
                                            className="chakra-stack"
                                            display="flex"
                                            flexDirection="row"
                                          >
                                            <div
                                              className="chakra-stack css-7dpwap"
                                            >
                                              <ModeIconBox
                                                key=".0:$WALK"
                                                mode="WALK"
                                              >
                                                <Box
                                                  title="WALK"
                                                >
                                                  <div
                                                    className="css-0"
                                                    title="WALK"
                                                  >
                                                    <ModeIcon
                                                      mode="WALK"
                                                    >
                                                      <FaWalking>
                                                        <IconBase
                                                          attr={
                                                            Object {
                                                              "viewBox": "0 0 320 512",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            fill="currentColor"
                                                            height="1em"
                                                            stroke="currentColor"
                                                            strokeWidth="0"
                                                            style={
                                                              Object {
                                                                "color": undefined,
                                                              }
                                                            }
                                                            viewBox="0 0 320 512"
                                                            width="1em"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M208 96c26.5 0 48-21.5 48-48S234.5 0 208 0s-48 21.5-48 48 21.5 48 48 48zm94.5 149.1l-23.3-11.8-9.7-29.4c-14.7-44.6-55.7-75.8-102.2-75.9-36-.1-55.9 10.1-93.3 25.2-21.6 8.7-39.3 25.2-49.7 46.2L17.6 213c-7.8 15.8-1.5 35 14.2 42.9 15.6 7.9 34.6 1.5 42.5-14.3L81 228c3.5-7 9.3-12.5 16.5-15.4l26.8-10.8-15.2 60.7c-5.2 20.8.4 42.9 14.9 58.8l59.9 65.4c7.2 7.9 12.3 17.4 14.9 27.7l18.3 73.3c4.3 17.1 21.7 27.6 38.8 23.3 17.1-4.3 27.6-21.7 23.3-38.8l-22.2-89c-2.6-10.3-7.7-19.9-14.9-27.7l-45.5-49.7 17.2-68.7 5.5 16.5c5.3 16.1 16.7 29.4 31.7 37l23.3 11.8c15.6 7.9 34.6 1.5 42.5-14.3 7.7-15.7 1.4-35.1-14.3-43zM73.6 385.8c-3.2 8.1-8 15.4-14.2 21.5l-50 50.1c-12.5 12.5-12.5 32.8 0 45.3s32.7 12.5 45.2 0l59.4-59.4c6.1-6.1 10.9-13.4 14.2-21.5l13.5-33.8c-55.3-60.3-38.7-41.8-47.4-53.7l-20.7 51.5z"
                                                              key="0"
                                                            />
                                                          </svg>
                                                        </IconBase>
                                                      </FaWalking>
                                                    </ModeIcon>
                                                  </div>
                                                </Box>
                                              </ModeIconBox>
                                              <ForwardRef
                                                key=".1"
                                                label="BUS, TRAM, RAIL, SUBWAY"
                                              >
                                                <Tooltip
                                                  aria-label="Tooltip: BUS, TRAM, RAIL, SUBWAY"
                                                  fontSize="md"
                                                  label="BUS, TRAM, RAIL, SUBWAY"
                                                  zIndex={1500}
                                                >
                                                  <Stack
                                                    align="center"
                                                    isInline={true}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseEnter={[Function]}
                                                    spacing={1}
                                                  >
                                                    <Styled(div)
                                                      __css={
                                                        Object {
                                                          "& > *:not(style) ~ *:not(style)": Object {
                                                            "marginStart": 1,
                                                            "marginTop": 0,
                                                          },
                                                        }
                                                      }
                                                      alignItems="center"
                                                      className="chakra-stack"
                                                      display="flex"
                                                      flexDirection="row"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                    >
                                                      <div
                                                        className="chakra-stack css-7dpwap"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <Box
                                                          color="red.500"
                                                          fontSize="xs"
                                                          key=".0"
                                                        >
                                                          <div
                                                            className="css-1kye2wc"
                                                          >
                                                            <FaChevronRight>
                                                              <IconBase
                                                                attr={
                                                                  Object {
                                                                    "viewBox": "0 0 320 512",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  stroke="currentColor"
                                                                  strokeWidth="0"
                                                                  style={
                                                                    Object {
                                                                      "color": undefined,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"
                                                                    key="0"
                                                                  />
                                                                </svg>
                                                              </IconBase>
                                                            </FaChevronRight>
                                                          </div>
                                                        </Box>
                                                        <ModeIconBox
                                                          key=".1:$BUS"
                                                          mode="BUS"
                                                        >
                                                          <Box
                                                            title="BUS"
                                                          >
                                                            <div
                                                              className="css-0"
                                                              title="BUS"
                                                            >
                                                              <ModeIcon
                                                                mode="BUS"
                                                              >
                                                                <FaBus>
                                                                  <IconBase
                                                                    attr={
                                                                      Object {
                                                                        "viewBox": "0 0 512 512",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      stroke="currentColor"
                                                                      strokeWidth="0"
                                                                      style={
                                                                        Object {
                                                                          "color": undefined,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 512 512"
                                                                      width="1em"
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <path
                                                                        d="M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM112 400c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm16-112c-17.67 0-32-14.33-32-32V128c0-17.67 14.33-32 32-32h256c17.67 0 32 14.33 32 32v128c0 17.67-14.33 32-32 32H128zm272 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </IconBase>
                                                                </FaBus>
                                                              </ModeIcon>
                                                            </div>
                                                          </Box>
                                                        </ModeIconBox>
                                                        <ModeIconBox
                                                          key=".1:$TRAM"
                                                          mode="TRAM"
                                                        >
                                                          <Box
                                                            title="TRAM"
                                                          >
                                                            <div
                                                              className="css-0"
                                                              title="TRAM"
                                                            >
                                                              <ModeIcon
                                                                mode="TRAM"
                                                              >
                                                                <Letter>
                                                                  <Text
                                                                    fontFamily="mono"
                                                                    fontSize="14px"
                                                                    fontWeight={600}
                                                                    height="17px"
                                                                    lineHeight="1.5rem"
                                                                    textAlign="center"
                                                                    width="15px"
                                                                  >
                                                                    <Styled(p)
                                                                      __css={Object {}}
                                                                      className="chakra-text"
                                                                      fontFamily="mono"
                                                                      fontSize="14px"
                                                                      fontWeight={600}
                                                                      height="17px"
                                                                      lineHeight="1.5rem"
                                                                      textAlign="center"
                                                                      width="15px"
                                                                    >
                                                                      <p
                                                                        className="chakra-text css-1q2wprf"
                                                                      >
                                                                        T
                                                                      </p>
                                                                    </Styled(p)>
                                                                  </Text>
                                                                </Letter>
                                                              </ModeIcon>
                                                            </div>
                                                          </Box>
                                                        </ModeIconBox>
                                                        <ModeIconBox
                                                          key=".1:$RAIL"
                                                          mode="RAIL"
                                                        >
                                                          <Box
                                                            title="RAIL"
                                                          >
                                                            <div
                                                              className="css-0"
                                                              title="RAIL"
                                                            >
                                                              <ModeIcon
                                                                mode="RAIL"
                                                              >
                                                                <FaTrain>
                                                                  <IconBase
                                                                    attr={
                                                                      Object {
                                                                        "viewBox": "0 0 448 512",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      stroke="currentColor"
                                                                      strokeWidth="0"
                                                                      style={
                                                                        Object {
                                                                          "color": undefined,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 448 512"
                                                                      width="1em"
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <path
                                                                        d="M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zm-48 136V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24zm-176 64c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </IconBase>
                                                                </FaTrain>
                                                              </ModeIcon>
                                                            </div>
                                                          </Box>
                                                        </ModeIconBox>
                                                        <ModeIconBox
                                                          key=".1:$SUBWAY"
                                                          mode="SUBWAY"
                                                        >
                                                          <Box
                                                            title="SUBWAY"
                                                          >
                                                            <div
                                                              className="css-0"
                                                              title="SUBWAY"
                                                            >
                                                              <ModeIcon
                                                                mode="SUBWAY"
                                                              >
                                                                <FaSubway>
                                                                  <IconBase
                                                                    attr={
                                                                      Object {
                                                                        "viewBox": "0 0 448 512",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      stroke="currentColor"
                                                                      strokeWidth="0"
                                                                      style={
                                                                        Object {
                                                                          "color": undefined,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 448 512"
                                                                      width="1em"
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <path
                                                                        d="M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zM200 232V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm200 0V120c0-13.255-10.745-24-24-24H272c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm-48 56c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-256 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </IconBase>
                                                                </FaSubway>
                                                              </ModeIcon>
                                                            </div>
                                                          </Box>
                                                        </ModeIconBox>
                                                      </div>
                                                    </Styled(div)>
                                                  </Stack>
                                                  <AnimatePresence />
                                                </Tooltip>
                                              </ForwardRef>
                                            </div>
                                          </Styled(div)>
                                        </Stack>
                                      </ModeSummary>
                                    </td>
                                  </Box>
                                </TDValue>
                              </tr>
                              <tr>
                                <td
                                  colSpan={2}
                                />
                              </tr>
                            </tbody>
                          </table>
                        </Box>
                        <Box
                          borderBottomWidth="1px"
                          key=".1"
                        >
                          <div
                            className="css-1exea8t"
                          >
                            <Button
                              _focus={
                                Object {
                                  "outline": "none",
                                }
                              }
                              borderRadius="0"
                              colorScheme="red"
                              onClick={[Function]}
                              size="sm"
                              title="expand"
                              variant="ghost"
                              width="100%"
                            >
                              <Styled(button)
                                __css={
                                  Object {
                                    "_active": Object {
                                      "bg": "red.100",
                                    },
                                    "_disabled": Object {
                                      "boxShadow": "none",
                                      "cursor": "not-allowed",
                                      "opacity": 0.4,
                                    },
                                    "_focus": Object {
                                      "boxShadow": "outline",
                                    },
                                    "_hover": Object {
                                      "_disabled": Object {
                                        "bg": "initial",
                                      },
                                      "bg": "red.50",
                                    },
                                    "alignItems": "center",
                                    "appearance": "none",
                                    "bg": "transparent",
                                    "borderRadius": "md",
                                    "color": "red.600",
                                    "display": "inline-flex",
                                    "fontSize": "sm",
                                    "fontWeight": "semibold",
                                    "h": 8,
                                    "justifyContent": "center",
                                    "lineHeight": "1.2",
                                    "minW": 8,
                                    "outline": "none",
                                    "position": "relative",
                                    "px": 3,
                                    "transition": "all 250ms",
                                    "userSelect": "none",
                                    "verticalAlign": "middle",
                                    "whiteSpace": "nowrap",
                                    "width": "auto",
                                  }
                                }
                                _focus={
                                  Object {
                                    "outline": "none",
                                  }
                                }
                                borderRadius="0"
                                className="chakra-button"
                                onClick={[Function]}
                                title="expand"
                                type="button"
                                width="100%"
                              >
                                <button
                                  className="chakra-button css-oal34z"
                                  onClick={[Function]}
                                  title="expand"
                                  type="button"
                                >
                                  <FaChevronDown>
                                    <IconBase
                                      attr={
                                        Object {
                                          "viewBox": "0 0 448 512",
                                        }
                                      }
                                    >
                                      <svg
                                        fill="currentColor"
                                        height="1em"
                                        stroke="currentColor"
                                        strokeWidth="0"
                                        style={
                                          Object {
                                            "color": undefined,
                                          }
                                        }
                                        viewBox="0 0 448 512"
                                        width="1em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                          key="0"
                                        />
                                      </svg>
                                    </IconBase>
                                  </FaChevronDown>
                                </button>
                              </Styled(button)>
                            </Button>
                          </div>
                        </Box>
                      </div>
                    </Styled(div)>
                  </Stack>
                </ProfileRequestDisplay>
              </ComparisonDisplay>
              <ReactLeafletControl
                key=".2"
                position="bottomleft"
              >
                <Stack
                  bg="white"
                  boxShadow="lg"
                  rounded="md"
                  spacing={3}
                  width="296px"
                >
                  <Styled(div)
                    __css={
                      Object {
                        "& > *:not(style) ~ *:not(style)": Object {
                          "marginStart": 0,
                          "marginTop": 3,
                        },
                      }
                    }
                    bg="white"
                    boxShadow="lg"
                    className="chakra-stack"
                    display="flex"
                    flexDirection="column"
                    rounded="md"
                    width="296px"
                  >
                    <div
                      className="chakra-stack css-bo8igj"
                    >
                      <Heading
                        key=".0"
                        pt={4}
                        px={4}
                        size="sm"
                      >
                        <Styled(h2)
                          __css={
                            Object {
                              "fontFamily": "heading",
                              "fontSize": "md",
                              "fontWeight": "bold",
                              "lineHeight": 1.2,
                            }
                          }
                          className="chakra-heading"
                          pt={4}
                          px={4}
                        >
                          <h2
                            className="chakra-heading css-25xa9p"
                          >
                            Access to
                          </h2>
                        </Styled(h2)>
                      </Heading>
                      <Box
                        key=".1"
                        px={4}
                      >
                        <div
                          className="css-q6n4wc"
                        >
                          <Heading
                            size="xs"
                          >
                            <Styled(h2)
                              __css={
                                Object {
                                  "fontFamily": "heading",
                                  "fontSize": "sm",
                                  "fontWeight": "bold",
                                  "lineHeight": 1.2,
                                }
                              }
                              className="chakra-heading"
                            >
                              <h2
                                className="chakra-heading css-13vvk6t"
                              >
                                ANALYSIS 1
                              </h2>
                            </Styled(h2)>
                          </Heading>
                          <Text>
                            <Styled(p)
                              __css={Object {}}
                              className="chakra-text"
                            >
                              <p
                                className="chakra-text css-0"
                              >
                                undefined within 60 minutes, 50th percentile
                              </p>
                            </Styled(p)>
                          </Text>
                        </div>
                      </Box>
                      <Box
                        key=".2"
                        px={4}
                      >
                        <div
                          className="css-q6n4wc"
                        >
                          <Text
                            color="red.500"
                          >
                            <Styled(p)
                              __css={Object {}}
                              className="chakra-text"
                              color="red.500"
                            >
                              <p
                                className="chakra-text css-17xjusj"
                              >
                                <em>
                                  minus
                                </em>
                              </p>
                            </Styled(p)>
                          </Text>
                          <Heading
                            size="xs"
                          >
                            <Styled(h2)
                              __css={
                                Object {
                                  "fontFamily": "heading",
                                  "fontSize": "sm",
                                  "fontWeight": "bold",
                                  "lineHeight": 1.2,
                                }
                              }
                              className="chakra-heading"
                            >
                              <h2
                                className="chakra-heading css-13vvk6t"
                              >
                                ANALYSIS 2
                              </h2>
                            </Styled(h2)>
                          </Heading>
                          <Text>
                            <Styled(p)
                              __css={Object {}}
                              className="chakra-text"
                            >
                              <p
                                className="chakra-text css-0"
                              >
                                undefined within 60 minutes, 50th percentile
                              </p>
                            </Styled(p)>
                          </Text>
                        </div>
                      </Box>
                      <Legend
                        breaks={
                          Array [
                            -1421,
                            -1089,
                            -773,
                            -491,
                            -235,
                            235,
                            491,
                            773,
                            1089,
                            1421,
                            1994,
                          ]
                        }
                        colors={
                          Array [
                            Rgb {
                              "b": 21,
                              "g": 15,
                              "opacity": 0.42,
                              "r": 165,
                            },
                            Rgb {
                              "b": 38,
                              "g": 45,
                              "opacity": 0.42,
                              "r": 222,
                            },
                            Rgb {
                              "b": 74,
                              "g": 106,
                              "opacity": 0.42,
                              "r": 251,
                            },
                            Rgb {
                              "b": 114,
                              "g": 146,
                              "opacity": 0.42,
                              "r": 252,
                            },
                            Rgb {
                              "b": 161,
                              "g": 187,
                              "opacity": 0.42,
                              "r": 252,
                            },
                            Rgb {
                              "b": 255,
                              "g": 255,
                              "opacity": 0,
                              "r": 255,
                            },
                            Rgb {
                              "b": 239,
                              "g": 219,
                              "opacity": 0.42,
                              "r": 198,
                            },
                            Rgb {
                              "b": 225,
                              "g": 202,
                              "opacity": 0.42,
                              "r": 158,
                            },
                            Rgb {
                              "b": 214,
                              "g": 174,
                              "opacity": 0.42,
                              "r": 107,
                            },
                            Rgb {
                              "b": 189,
                              "g": 130,
                              "opacity": 0.42,
                              "r": 49,
                            },
                            Rgb {
                              "b": 156,
                              "g": 81,
                              "opacity": 0.42,
                              "r": 8,
                            },
                          ]
                        }
                        key=".3"
                        min={-1998}
                      >
                        <Stack
                          borderTopWidth="1px"
                          spacing={0}
                        >
                          <Styled(div)
                            __css={
                              Object {
                                "& > *:not(style) ~ *:not(style)": Object {
                                  "marginStart": 0,
                                  "marginTop": 0,
                                },
                              }
                            }
                            borderTopWidth="1px"
                            className="chakra-stack"
                            display="flex"
                            flexDirection="column"
                          >
                            <div
                              className="chakra-stack css-13clb6c"
                            >
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(8, 81, 156, 1)"
                                color="#fff"
                                key=".$break-0"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-ishzdn"
                                >
                                  1,994 to 1,421
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(49, 130, 189, 1)"
                                color="#fff"
                                key=".$break-1"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-re4ax5"
                                >
                                  1,421 to 1,089
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(107, 174, 214, 1)"
                                color="#000"
                                key=".$break-2"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-12vd2fm"
                                >
                                  1,089 to 773
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(158, 202, 225, 1)"
                                color="#000"
                                key=".$break-3"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-n9dmw5"
                                >
                                  773 to 491
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(198, 219, 239, 1)"
                                color="#000"
                                key=".$break-4"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-juops8"
                                >
                                  491 to 235
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(255, 255, 255, 1)"
                                color="#000"
                                key=".$break-5"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-qan814"
                                >
                                  235 to −235 (transparent)
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(252, 187, 161, 1)"
                                color="#000"
                                key=".$break-6"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-1aeisej"
                                >
                                  −235 to −491
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(252, 146, 114, 1)"
                                color="#000"
                                key=".$break-7"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-uvpss4"
                                >
                                  −491 to −773
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(251, 106, 74, 1)"
                                color="#000"
                                key=".$break-8"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-1s3opjy"
                                >
                                  −773 to −1,089
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(222, 45, 38, 1)"
                                color="#fff"
                                key=".$break-9"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-y66bvx"
                                >
                                  −1,089 to −1,421
                                </div>
                              </Box>
                              <Box
                                _last={
                                  Object {
                                    "roundedBottom": "md",
                                  }
                                }
                                backgroundColor="rgba(165, 15, 21, 1)"
                                color="#fff"
                                key=".$break-10"
                                px={4}
                                py={1}
                              >
                                <div
                                  className="css-1bpwszm"
                                >
                                  −1,421 to −1,998
                                </div>
                              </Box>
                            </div>
                          </Styled(div)>
                        </Stack>
                      </Legend>
                    </div>
                  </Styled(div)>
                </Stack>
              </ReactLeafletControl>
              <Box
                key=".3"
                p={4}
              >
                <div
                  className="css-q5fqw0"
                >
                  <AggregationArea>
                    <Stack
                      spacing={4}
                    >
                      <Styled(div)
                        __css={
                          Object {
                            "& > *:not(style) ~ *:not(style)": Object {
                              "marginStart": 0,
                              "marginTop": 4,
                            },
                          }
                        }
                        className="chakra-stack"
                        display="flex"
                        flexDirection="column"
                      >
                        <div
                          className="chakra-stack css-4daikc"
                        >
                          <FormControl
                            key=".0"
                          >
                            <Styled(div)
                              __css={
                                Object {
                                  "position": "relative",
                                  "width": "100%",
                                }
                              }
                              className="chakra-form-control"
                              role="group"
                            >
                              <div
                                className="chakra-form-control css-1kxonj9"
                                role="group"
                              >
                                <FormLabel>
                                  <Styled(label)
                                    __css={
                                      Object {
                                        "_disabled": Object {
                                          "opacity": 0.4,
                                        },
                                        "display": "block",
                                        "fontSize": "md",
                                        "fontWeight": "medium",
                                        "marginEnd": 3,
                                        "mb": 2,
                                        "opacity": 1,
                                        "textAlign": "start",
                                        "transition": "all 0.2s",
                                      }
                                    }
                                    className="chakra-form__label"
                                    htmlFor="field-14"
                                    id="field-14-label"
                                  >
                                    <label
                                      className="chakra-form__label css-1qqx8g3"
                                      htmlFor="field-14"
                                      id="field-14-label"
                                    >
                                      Aggregate results to
                                    </label>
                                  </Styled(label)>
                                </FormLabel>
                                <ForwardRef
                                  getOptionLabel={[Function]}
                                  getOptionValue={[Function]}
                                  isClearable={true}
                                  isLoading={false}
                                  name="aggregateTo"
                                  onChange={[Function]}
                                  options={Array []}
                                >
                                  <ReactSelect
                                    getOptionLabel={[Function]}
                                    getOptionValue={[Function]}
                                    innerRef={null}
                                    isClearable={true}
                                    isLoading={false}
                                    name="aggregateTo"
                                    onChange={[Function]}
                                    options={Array []}
                                    styles={
                                      Object {
                                        "control": [Function],
                                        "menu": [Function],
                                        "option": [Function],
                                      }
                                    }
                                  >
                                    <div
                                      className="ReactSelectMock"
                                    />
                                  </ReactSelect>
                                </ForwardRef>
                              </div>
                            </Styled(div)>
                          </FormControl>
                          <Button
                            isFullWidth={true}
                            key=".1"
                            leftIcon={<FaChevronDown />}
                            onClick={[Function]}
                          >
                            <Styled(button)
                              __css={
                                Object {
                                  "_active": Object {
                                    "bg": "gray.300",
                                  },
                                  "_disabled": Object {
                                    "boxShadow": "none",
                                    "cursor": "not-allowed",
                                    "opacity": 0.4,
                                  },
                                  "_focus": Object {
                                    "boxShadow": "outline",
                                  },
                                  "_hover": Object {
                                    "_disabled": Object {
                                      "bg": "gray.100",
                                    },
                                    "bg": "gray.200",
                                  },
                                  "alignItems": "center",
                                  "appearance": "none",
                                  "bg": "gray.100",
                                  "borderRadius": "md",
                                  "display": "inline-flex",
                                  "fontSize": "md",
                                  "fontWeight": "semibold",
                                  "h": 10,
                                  "justifyContent": "center",
                                  "lineHeight": "1.2",
                                  "minW": 10,
                                  "outline": "none",
                                  "position": "relative",
                                  "px": 4,
                                  "transition": "all 250ms",
                                  "userSelect": "none",
                                  "verticalAlign": "middle",
                                  "whiteSpace": "nowrap",
                                  "width": "100%",
                                }
                              }
                              className="chakra-button"
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="chakra-button css-qdlqvw"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonIcon
                                  marginEnd="0.5rem"
                                >
                                  <Styled(span)
                                    className="chakra-button__icon"
                                    marginEnd="0.5rem"
                                  >
                                    <span
                                      className="chakra-button__icon css-ktvjz1"
                                    >
                                      <FaChevronDown
                                        aria-hidden={true}
                                        focusable={false}
                                      >
                                        <IconBase
                                          aria-hidden={true}
                                          attr={
                                            Object {
                                              "viewBox": "0 0 448 512",
                                            }
                                          }
                                          focusable={false}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            fill="currentColor"
                                            focusable={false}
                                            height="1em"
                                            stroke="currentColor"
                                            strokeWidth="0"
                                            style={
                                              Object {
                                                "color": undefined,
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                              key="0"
                                            />
                                          </svg>
                                        </IconBase>
                                      </FaChevronDown>
                                    </span>
                                  </Styled(span)>
                                </ButtonIcon>
                                Upload new aggregation area
                              </button>
                            </Styled(button)>
                          </Button>
                        </div>
                      </Styled(div)>
                    </Stack>
                  </AggregationArea>
                </div>
              </Box>
            </div>
          </Styled(div)>
        </Stack>
      </RegionalResults>
    </div>
  </Map>
</WithMap(RegionalResults)>
`;
